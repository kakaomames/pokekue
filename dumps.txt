// Image 0: mscorlib.dll - 0
// Image 1: System.Configuration.dll - 1477
// Image 2: Mono.Security.dll - 1487
// Image 3: System.Xml.dll - 1562
// Image 4: System.dll - 1565
// Image 5: System.Core.dll - 2077
// Image 6: UnityEngine.SharedInternalsModule.dll - 2118
// Image 7: UnityEngine.CoreModule.dll - 2146
// Image 8: UnityEngine.GridModule.dll - 2686
// Image 9: UnityEngine.InputLegacyModule.dll - 2688
// Image 10: UnityEngine.Physics2DModule.dll - 2697
// Image 11: UnityEngine.TextRenderingModule.dll - 2706
// Image 12: UnityEngine.AnimationModule.dll - 2719
// Image 13: UnityEngine.AssetBundleModule.dll - 2759
// Image 14: UnityEngine.IMGUIModule.dll - 2765
// Image 15: UnityEngine.PhysicsModule.dll - 2794
// Image 16: UnityEngine.SpriteShapeModule.dll - 2810
// Image 17: UnityEngine.TilemapModule.dll - 2812
// Image 18: UnityEngine.UIModule.dll - 2822
// Image 19: UnityEngine.UnityWebRequestModule.dll - 2833
// Image 20: UnityEngine.AndroidJNIModule.dll - 2847
// Image 21: UnityEngine.AudioModule.dll - 2872
// Image 22: UnityEngine.UI.dll - 2887
// Image 23: UnityEngine.UnityWebRequestAssetBundleModule.dll - 3083
// Image 24: Google.Play.Common.dll - 3086
// Image 25: Google.Play.Core.dll - 3099
// Image 26: OSCsharp.dll - 3118
// Image 27: UnityEngine.DirectorModule.dll - 3132
// Image 28: UnityEngine.ParticleSystemModule.dll - 3134
// Image 29: UnityEngine.SubsystemsModule.dll - 3139
// Image 30: UnityEngine.TextCoreModule.dll - 3153
// Image 31: UnityEngine.UnityWebRequestWWWModule.dll - 3169
// Image 32: ZeroFormatter.Interfaces.dll - 3171
// Image 33: Google.Play.AssetDelivery.dll - 3191
// Image 34: TUIOsharp.dll - 3236
// Image 35: Unity.TextMeshPro.dll - 3249
// Image 36: Unity.Timeline.dll - 3422
// Image 37: UnityEngine.AIModule.dll - 3494
// Image 38: UnityEngine.InputModule.dll - 3502
// Image 39: UnityEngine.JSONSerializeModule.dll - 3507
// Image 40: UnityEngine.TerrainModule.dll - 3509
// Image 41: UnityEngine.UIElementsNativeModule.dll - 3525
// Image 42: UnityEngine.UnityAnalyticsModule.dll - 3535
// Image 43: UnityEngine.VFXModule.dll - 3546
// Image 44: UnityEngine.VRModule.dll - 3556
// Image 45: UnityEngine.VideoModule.dll - 3558
// Image 46: UnityEngine.XRModule.dll - 3573
// Image 47: ZeroFormatter.dll - 3602
// Image 48: UnityEngine.dll - 3739
// Image 49: Assembly-CSharp-firstpass.dll - 3740
// Image 50: Assembly-CSharp.dll - 4635

// Namespace: 
internal class <Module> // TypeDefIndex: 0
{}

// Namespace: 
internal sealed class Locale // TypeDefIndex: 1
{
	// Methods

	// RVA: 0x113DFE0 Offset: 0x113DFE0 VA: 0x113DFE0
	public static string GetText(string msg) { }

	// RVA: 0x113DFE4 Offset: 0x113DFE4 VA: 0x113DFE4
	public static string GetText(string fmt, object[] args) { }
}

// Namespace: 
internal static class SR // TypeDefIndex: 2
{
	// Methods

	// RVA: 0x10D0D24 Offset: 0x10D0D24 VA: 0x10D0D24
	internal static string Format(string resourceFormat, object p1) { }

	// RVA: 0x10D0DAC Offset: 0x10D0DAC VA: 0x10D0DAC
	internal static string Format(string resourceFormat, object p1, object p2) { }
}

// Namespace: Mono
public static class Runtime // TypeDefIndex: 3
{
	// Methods

	// RVA: 0x10B791C Offset: 0x10B791C VA: 0x10B791C
	private static void mono_runtime_install_handlers() { }

	// RVA: 0x10B7920 Offset: 0x10B7920 VA: 0x10B7920
	public static void InstallSignalHandlers() { }

	// RVA: 0x10B7924 Offset: 0x10B7924 VA: 0x10B7924
	private static void mono_runtime_cleanup_handlers() { }

	// RVA: 0x10B796C Offset: 0x10B796C VA: 0x10B796C
	public static void RemoveSignalHandlers() { }

	// RVA: 0x10B79B4 Offset: 0x10B79B4 VA: 0x10B79B4
	public static string GetDisplayName() { }

	// RVA: 0x10B79B8 Offset: 0x10B79B8 VA: 0x10B79B8
	private static string GetNativeStackTrace(Exception exception) { }

	// RVA: 0x10B79BC Offset: 0x10B79BC VA: 0x10B79BC
	public static bool SetGCAllowSynchronousMajor(bool flag) { }
}

// Namespace: Mono
internal struct RuntimeClassHandle // TypeDefIndex: 4
{
	// Fields
	private RuntimeStructs.MonoClass* value; // 0x0

	// Properties
	internal RuntimeStructs.MonoClass* Value { get; }

	// Methods

	// RVA: 0x10B7B68 Offset: 0x10B7B68 VA: 0x10B7B68
	internal void .ctor(RuntimeStructs.MonoClass* value) { }

	// RVA: 0x10B7B70 Offset: 0x10B7B70 VA: 0x10B7B70
	internal void .ctor(IntPtr ptr) { }

	// RVA: 0x10B7B90 Offset: 0x10B7B90 VA: 0x10B7B90
	internal RuntimeStructs.MonoClass* get_Value() { }

	// RVA: 0x10B7B98 Offset: 0x10B7B98 VA: 0x10B7B98 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x10B7CDC Offset: 0x10B7CDC VA: 0x10B7CDC Slot: 2
	public override int GetHashCode() { }

	// RVA: 0x10B7D0C Offset: 0x10B7D0C VA: 0x10B7D0C
	internal static IntPtr GetTypeFromClass(RuntimeStructs.MonoClass* klass) { }

	// RVA: 0x10B7D10 Offset: 0x10B7D10 VA: 0x10B7D10
	internal RuntimeTypeHandle GetTypeHandle() { }
}

// Namespace: Mono
internal struct RuntimeRemoteClassHandle // TypeDefIndex: 5
{
	// Fields
	private RuntimeStructs.RemoteClass* value; // 0x0

	// Properties
	internal RuntimeClassHandle ProxyClass { get; }

	// Methods

	// RVA: 0x10BA7D8 Offset: 0x10BA7D8 VA: 0x10BA7D8
	internal RuntimeClassHandle get_ProxyClass() { }
}

// Namespace: Mono
internal struct RuntimeGenericParamInfoHandle // TypeDefIndex: 6
{
	// Fields
	private RuntimeStructs.GenericParamInfo* value; // 0x0

	// Properties
	internal Type[] Constraints { get; }
	internal GenericParameterAttributes Attributes { get; }

	// Methods

	// RVA: 0x10B8E1C Offset: 0x10B8E1C VA: 0x10B8E1C
	internal void .ctor(IntPtr ptr) { }

	// RVA: 0x10B8E3C Offset: 0x10B8E3C VA: 0x10B8E3C
	internal Type[] get_Constraints() { }

	// RVA: 0x10B8FA4 Offset: 0x10B8FA4 VA: 0x10B8FA4
	internal GenericParameterAttributes get_Attributes() { }

	// RVA: 0x10B8E40 Offset: 0x10B8E40 VA: 0x10B8E40
	private Type[] GetConstraints() { }

	// RVA: 0x10B8FC4 Offset: 0x10B8FC4 VA: 0x10B8FC4
	private int GetConstraintsCount() { }
}

// Namespace: Mono
internal struct RuntimeEventHandle // TypeDefIndex: 7
{
	// Fields
	private IntPtr value; // 0x0

	// Properties
	public IntPtr Value { get; }

	// Methods

	// RVA: 0x10B8180 Offset: 0x10B8180 VA: 0x10B8180
	internal void .ctor(IntPtr v) { }

	// RVA: 0x10B8188 Offset: 0x10B8188 VA: 0x10B8188
	public IntPtr get_Value() { }

	// RVA: 0x10B8190 Offset: 0x10B8190 VA: 0x10B8190 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x10B82D8 Offset: 0x10B82D8 VA: 0x10B82D8 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: Mono
internal struct RuntimePropertyHandle // TypeDefIndex: 8
{
	// Fields
	private IntPtr value; // 0x0

	// Properties
	public IntPtr Value { get; }

	// Methods

	// RVA: 0x10BA1C4 Offset: 0x10BA1C4 VA: 0x10BA1C4
	internal void .ctor(IntPtr v) { }

	// RVA: 0x10BA1CC Offset: 0x10BA1CC VA: 0x10BA1CC
	public IntPtr get_Value() { }

	// RVA: 0x10BA1D4 Offset: 0x10BA1D4 VA: 0x10BA1D4 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0x10BA31C Offset: 0x10BA31C VA: 0x10BA31C Slot: 2
	public override int GetHashCode() { }
}

// Namespace: Mono
[DefaultMemberAttribute] // RVA: 0x3E6610 Offset: 0x3E6610 VA: 0x3E6610
internal struct RuntimeGPtrArrayHandle // TypeDefIndex: 9
{
	// Fields
	private RuntimeStructs.GPtrArray* value; // 0x0

	// Properties
	internal int Length { get; }
	internal IntPtr Item { get; }

	// Methods

	// RVA: 0x10B8D24 Offset: 0x10B8D24 VA: 0x10B8D24
	internal void .ctor(IntPtr ptr) { }

	// RVA: 0x10B8D44 Offset: 0x10B8D44 VA: 0x10B8D44
	internal int get_Length() { }

	// RVA: 0x10B8D64 Offset: 0x10B8D64 VA: 0x10B8D64
	internal IntPtr get_Item(int i) { }

	// RVA: 0x10B8D68 Offset: 0x10B8D68 VA: 0x10B8D68
	internal IntPtr Lookup(int i) { }

	// RVA: 0x10B8DF8 Offset: 0x10B8DF8 VA: 0x10B8DF8
	private static void GPtrArrayFree(RuntimeStructs.GPtrArray* value) { }

	// RVA: 0x10B8DFC Offset: 0x10B8DFC VA: 0x10B8DFC
	internal static void DestroyAndFree(ref RuntimeGPtrArrayHandle h) { }
}

// Namespace: Mono
internal static class RuntimeMarshal // TypeDefIndex: 10
{
	// Methods

	// RVA: 0x10B90C8 Offset: 0x10B90C8 VA: 0x10B90C8
	internal static string PtrToUtf8String(IntPtr ptr) { }

	// RVA: 0x10B91BC Offset: 0x10B91BC VA: 0x10B91BC
	internal static SafeStringMarshal MarshalString(string str) { }

	// RVA: 0x10B91DC Offset: 0x10B91DC VA: 0x10B91DC
	private static int DecodeBlobSize(IntPtr in_ptr, out IntPtr out_ptr) { }

	// RVA: 0x10B9258 Offset: 0x10B9258 VA: 0x10B9258
	internal static byte[] DecodeBlobArray(IntPtr ptr) { }

	// RVA: 0x10B9330 Offset: 0x10B9330 VA: 0x10B9330
	internal static int AsciHexDigitValue(int c) { }

	// RVA: 0x10B9354 Offset: 0x10B9354 VA: 0x10B9354
	internal static void FreeAssemblyName(ref MonoAssemblyName name, bool freeStruct) { }
}

// Namespace: 
internal struct RuntimeStructs.RemoteClass // TypeDefIndex: 11
{
	// Fields
	internal IntPtr default_vtable; // 0x0
	internal IntPtr xdomain_vtable; // 0x4
	internal RuntimeStructs.MonoClass* proxy_class; // 0x8
	internal IntPtr proxy_class_name; // 0xC
	internal uint interface_count; // 0x10
}

// Namespace: 
internal struct RuntimeStructs.MonoClass // TypeDefIndex: 12
{}

// Namespace: 
internal struct RuntimeStructs.GenericParamInfo // TypeDefIndex: 13
{
	// Fields
	internal RuntimeStructs.MonoClass* pklass; // 0x0
	internal IntPtr name; // 0x4
	internal ushort flags; // 0x8
	internal uint token; // 0xC
	internal RuntimeStructs.MonoClass** constraints; // 0x10
}

// Namespace: 
internal struct RuntimeStructs.GPtrArray // TypeDefIndex: 14
{
	// Fields
	internal IntPtr* data; // 0x0
	internal int len; // 0x4
}

// Namespace: 
private struct RuntimeStructs.HandleStackMark // TypeDefIndex: 15
{
	// Fields
	private int size; // 0x0
	private int interior_size; // 0x4
	private IntPtr chunk; // 0x8
}

// Namespace: 
private struct RuntimeStructs.MonoError // TypeDefIndex: 16
{
	// Fields
	private ushort error_code; // 0x0
	private ushort hidden_0; // 0x2
	private IntPtr hidden_1; // 0x4
	private IntPtr hidden_2; // 0x8
	private IntPtr hidden_3; // 0xC
	private IntPtr hidden_4; // 0x10
	private IntPtr hidden_5; // 0x14
	private IntPtr hidden_6; // 0x18
	private IntPtr hidden_7; // 0x1C
	private IntPtr hidden_8; // 0x20
	private IntPtr hidden_11; // 0x24
	private IntPtr hidden_12; // 0x28
	private IntPtr hidden_13; // 0x2C
	private IntPtr hidden_14; // 0x30
	private IntPtr hidden_15; // 0x34
	private IntPtr hidden_16; // 0x38
	private IntPtr hidden_17; // 0x3C
	private IntPtr hidden_18; // 0x40
}

// Namespace: Mono
internal static class RuntimeStructs // TypeDefIndex: 17
{}

// Namespace: 
[UnsafeValueTypeAttribute] // RVA: 0x3E6644 Offset: 0x3E6644 VA: 0x3E6644
[CompilerGeneratedAttribute] // RVA: 0x3E6644 Offset: 0x3E6644 VA: 0x3E6644
public struct MonoAssemblyName.<public_key_token>e__FixedBuffer // TypeDefIndex: 18
{
	// Fields
	public byte FixedElementField; // 0x0
}

// Namespace: Mono
internal struct MonoAssemblyName // TypeDefIndex: 19
{
	// Fields
	internal IntPtr name; // 0x0
	internal IntPtr culture; // 0x4
	internal IntPtr hash_value; // 0x8
	internal IntPtr public_key; // 0xC
	[FixedBufferAttribute] // RVA: 0x3ED170 Offset: 0x3ED170 VA: 0x3ED170
	internal MonoAssemblyName.<public_key_token>e__FixedBuffer public_key_token; // 0x10
	internal uint hash_alg; // 0x24
	internal uint hash_len; // 0x28
	internal uint flags; // 0x2C
	internal ushort major; // 0x30
	internal ushort minor; // 0x32
	internal ushort build; // 0x34
	internal ushort revision; // 0x36
	internal ushort arch; // 0x38
}

// Namespace: Mono
[DefaultMemberAttribute] // RVA: 0x3E6674 Offset: 0x3E6674 VA: 0x3E6674
internal struct SafeGPtrArrayHandle : IDisposable // TypeDefIndex: 20
{
	// Fields
	private RuntimeGPtrArrayHandle handle; // 0x0

	// Properties
	internal int Length { get; }
	internal IntPtr Item { get; }

	// Methods

	// RVA: 0x10C78AC Offset: 0x10C78AC VA: 0x10C78AC
	internal void .ctor(IntPtr ptr) { }

	// RVA: 0x10C78F0 Offset: 0x10C78F0 VA: 0x10C78F0 Slot: 4
	public void Dispose() { }

	// RVA: 0x10C78CC Offset: 0x10C78CC VA: 0x10C78CC
	internal int get_Length() { }

	// RVA: 0x10C78EC Offset: 0x10C78EC VA: 0x10C78EC
	internal IntPtr get_Item(int i) { }
}

// Namespace: Mono
internal struct SafeStringMarshal : IDisposable // TypeDefIndex: 21
{
	// Fields
	private readonly string str; // 0x0
	private IntPtr marshaled_string; // 0x4

	// Properties
	public IntPtr Value { get; }

	// Methods

	// RVA: 0x1123B70 Offset: 0x1123B70 VA: 0x1123B70
	public static IntPtr StringToUtf8(string str) { }

	// RVA: 0x1123B74 Offset: 0x1123B74 VA: 0x1123B74
	public static void GFree(IntPtr ptr) { }

	// RVA: 0x1123B78 Offset: 0x1123B78 VA: 0x1123B78
	public void .ctor(string str) { }

	// RVA: 0x1123BD4 Offset: 0x1123BD4 VA: 0x1123BD4
	public IntPtr get_Value() { }

	// RVA: 0x1123C44 Offset: 0x1123C44 VA: 0x1123C44 Slot: 4
	public void Dispose() { }
}

// Namespace: Mono.Xml
internal class SecurityParser : SmallXmlParser, SmallXmlParser.IContentHandler // TypeDefIndex: 22
{
	// Fields
	private SecurityElement root; // 0x38
	private SecurityElement current; // 0x3C
	private Stack stack; // 0x40

	// Methods

	// RVA: 0x1126964 Offset: 0x1126964 VA: 0x1126964
	public void .ctor() { }

	// RVA: 0x11269DC Offset: 0x11269DC VA: 0x11269DC
	public void LoadXml(string xml) { }

	// RVA: 0x1128504 Offset: 0x1128504 VA: 0x1128504
	public SecurityElement ToXml() { }

	// RVA: 0x112850C Offset: 0x112850C VA: 0x112850C Slot: 4
	public void OnStartParsing(SmallXmlParser parser) { }

	// RVA: 0x1128510 Offset: 0x1128510 VA: 0x1128510 Slot: 8
	public void OnProcessingInstruction(string name, string text) { }

	// RVA: 0x1128514 Offset: 0x1128514 VA: 0x1128514 Slot: 10
	public void OnIgnorableWhitespace(string s) { }

	// RVA: 0x1128518 Offset: 0x1128518 VA: 0x1128518 Slot: 6
	public void OnStartElement(string name, SmallXmlParser.IAttrList attrs) { }

	// RVA: 0x11288C0 Offset: 0x11288C0 VA: 0x11288C0 Slot: 7
	public void OnEndElement(string name) { }

	// RVA: 0x1128968 Offset: 0x1128968 VA: 0x1128968 Slot: 9
	public void OnChars(string ch) { }

	// RVA: 0x1128A00 Offset: 0x1128A00 VA: 0x1128A00 Slot: 5
	public void OnEndParsing(SmallXmlParser parser) { }
}

// Namespace: 
public interface SmallXmlParser.IContentHandler // TypeDefIndex: 23
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract void OnStartParsing(SmallXmlParser parser);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void OnEndParsing(SmallXmlParser parser);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void OnStartElement(string name, SmallXmlParser.IAttrList attrs);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract void OnEndElement(string name);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract void OnProcessingInstruction(string name, string text);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract void OnChars(string text);

	// RVA: -1 Offset: -1 Slot: 6
	public abstract void OnIgnorableWhitespace(string text);
}

// Namespace: 
public interface SmallXmlParser.IAttrList // TypeDefIndex: 24
{
	// Properties
	public abstract int Length { get; }
	public abstract string[] Names { get; }
	public abstract string[] Values { get; }

	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract int get_Length();

	// RVA: -1 Offset: -1 Slot: 1
	public abstract string GetName(int i);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract string GetValue(int i);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract string GetValue(string name);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract string[] get_Names();

	// RVA: -1 Offset: -1 Slot: 5
	public abstract string[] get_Values();
}

// Namespace: 
private class SmallXmlParser.AttrListImpl : SmallXmlParser.IAttrList // TypeDefIndex: 25
{
	// Fields
	private List<string> attrNames; // 0x8
	private List<string> attrValues; // 0xC

	// Properties
	public int Length { get; }
	public string[] Names { get; }
	public string[] Values { get; }

	// Methods

	// RVA: 0x52FF44 Offset: 0x52FF44 VA: 0x52FF44 Slot: 4
	public int get_Length() { }

	// RVA: 0x52FF98 Offset: 0x52FF98 VA: 0x52FF98 Slot: 5
	public string GetName(int i) { }

	// RVA: 0x53000C Offset: 0x53000C VA: 0x53000C Slot: 6
	public string GetValue(int i) { }

	// RVA: 0x530080 Offset: 0x530080 VA: 0x530080 Slot: 7
	public string GetValue(string name) { }

	// RVA: 0x530174 Offset: 0x530174 VA: 0x530174 Slot: 8
	public string[] get_Names() { }

	// RVA: 0x5301DC Offset: 0x5301DC VA: 0x5301DC Slot: 9
	public string[] get_Values() { }

	// RVA: 0x530244 Offset: 0x530244 VA: 0x530244
	internal void Clear() { }

	// RVA: 0x5302C8 Offset: 0x5302C8 VA: 0x5302C8
	internal void Add(string name, string value) { }

	// RVA: 0x53035C Offset: 0x53035C VA: 0x53035C
	public void .ctor() { }
}

// Namespace: Mono.Xml
internal class SmallXmlParser // TypeDefIndex: 26
{
	// Fields
	private SmallXmlParser.IContentHandler handler; // 0x8
	private TextReader reader; // 0xC
	private Stack elementNames; // 0x10
	private Stack xmlSpaces; // 0x14
	private string xmlSpace; // 0x18
	private StringBuilder buffer; // 0x1C
	private char[] nameBuffer; // 0x20
	private bool isWhitespace; // 0x24
	private SmallXmlParser.AttrListImpl attributes; // 0x28
	private int line; // 0x2C
	private int column; // 0x30
	private bool resetColumn; // 0x34

	// Methods

	// RVA: 0x112814C Offset: 0x112814C VA: 0x112814C
	public void .ctor() { }

	// RVA: 0x113961C Offset: 0x113961C VA: 0x113961C
	private Exception Error(string msg) { }

	// RVA: 0x1139770 Offset: 0x1139770 VA: 0x1139770
	private Exception UnexpectedEndError() { }

	// RVA: 0x1139880 Offset: 0x1139880 VA: 0x1139880
	private bool IsNameChar(char c, bool start) { }

	// RVA: 0x1139988 Offset: 0x1139988 VA: 0x1139988
	private bool IsWhitespace(int c) { }

	// RVA: 0x11399B4 Offset: 0x11399B4 VA: 0x11399B4
	public void SkipWhitespaces() { }

	// RVA: 0x1139A68 Offset: 0x1139A68 VA: 0x1139A68
	private void HandleWhitespaces() { }

	// RVA: 0x11399BC Offset: 0x11399BC VA: 0x11399BC
	public void SkipWhitespaces(bool expected) { }

	// RVA: 0x1139BC8 Offset: 0x1139BC8 VA: 0x1139BC8
	private int Peek() { }

	// RVA: 0x1139B48 Offset: 0x1139B48 VA: 0x1139B48
	private int Read() { }

	// RVA: 0x1139BF8 Offset: 0x1139BF8 VA: 0x1139BF8
	public void Expect(int c) { }

	// RVA: 0x1139CC0 Offset: 0x1139CC0 VA: 0x1139CC0
	private string ReadUntil(char until, bool handleReferences) { }

	// RVA: 0x113A02C Offset: 0x113A02C VA: 0x113A02C
	public string ReadName() { }

	// RVA: 0x11282B0 Offset: 0x11282B0 VA: 0x11282B0
	public void Parse(TextReader input, SmallXmlParser.IContentHandler handler) { }

	// RVA: 0x113AC90 Offset: 0x113AC90 VA: 0x113AC90
	private void Cleanup() { }

	// RVA: 0x113A268 Offset: 0x113A268 VA: 0x113A268
	public void ReadContent() { }

	// RVA: 0x113AAF4 Offset: 0x113AAF4 VA: 0x113AAF4
	private void HandleBufferedContent() { }

	// RVA: 0x113B0B4 Offset: 0x113B0B4 VA: 0x113B0B4
	private void ReadCharacters() { }

	// RVA: 0x1139DD0 Offset: 0x1139DD0 VA: 0x1139DD0
	private void ReadReference() { }

	// RVA: 0x113B148 Offset: 0x113B148 VA: 0x113B148
	private int ReadCharacterReference() { }

	// RVA: 0x113AF14 Offset: 0x113AF14 VA: 0x113AF14
	private void ReadAttribute(SmallXmlParser.AttrListImpl a) { }

	// RVA: 0x113AD70 Offset: 0x113AD70 VA: 0x113AD70
	private void ReadCDATASection() { }

	// RVA: 0x113AE84 Offset: 0x113AE84 VA: 0x113AE84
	private void ReadComment() { }
}

// Namespace: Mono.Xml
internal class SmallXmlParserException : SystemException // TypeDefIndex: 27
{
	// Fields
	private int line; // 0x44
	private int column; // 0x48

	// Methods

	// RVA: 0x113969C Offset: 0x113969C VA: 0x113969C
	public void .ctor(string msg, int line, int column) { }
}

// Namespace: 
[Serializable]
internal struct CodePointIndexer.TableRange // TypeDefIndex: 28
{
	// Fields
	public readonly int Start; // 0x0
	public readonly int End; // 0x4
	public readonly int Count; // 0x8
	public readonly int IndexStart; // 0xC
	public readonly int IndexEnd; // 0x10

	// Methods

	// RVA: 0xF9FF9C Offset: 0xF9FF9C VA: 0xF9FF9C
	public void .ctor(int start, int end, int indexStart) { }
}

// Namespace: Mono.Globalization.Unicode
internal class CodePointIndexer // TypeDefIndex: 29
{
	// Fields
	private readonly CodePointIndexer.TableRange[] ranges; // 0x8
	public readonly int TotalCount; // 0xC
	private int defaultIndex; // 0x10
	private int defaultCP; // 0x14

	// Methods

	// RVA: 0xCA64F0 Offset: 0xCA64F0 VA: 0xCA64F0
	public void .ctor(int[] starts, int[] ends, int defaultIndex, int defaultCP) { }

	// RVA: 0xCA67A8 Offset: 0xCA67A8 VA: 0xCA67A8
	public int ToIndex(int cp) { }
}

// Namespace: Mono.Globalization.Unicode
internal class TailoringInfo // TypeDefIndex: 30
{
	// Fields
	public readonly int LCID; // 0x8
	public readonly int TailoringIndex; // 0xC
	public readonly int TailoringCount; // 0x10
	public readonly bool FrenchSort; // 0x14

	// Methods

	// RVA: 0x4FDA1C Offset: 0x4FDA1C VA: 0x4FDA1C
	public void .ctor(int lcid, int tailoringIndex, int tailoringCount, bool frenchSort) { }
}

// Namespace: Mono.Globalization.Unicode
internal class Contraction // TypeDefIndex: 31
{
	// Fields
	public int Index; // 0x8
	public readonly char[] Source; // 0xC
	public readonly string Replacement; // 0x10
	public readonly byte[] SortKey; // 0x14

	// Methods

	// RVA: 0xCB58F0 Offset: 0xCB58F0 VA: 0xCB58F0
	public void .ctor(int index, char[] source, string replacement, byte[] sortkey) { }
}

// Namespace: Mono.Globalization.Unicode
internal class ContractionComparer : IComparer<Contraction> // TypeDefIndex: 32
{
	// Fields
	public static readonly ContractionComparer Instance; // 0x0

	// Methods

	// RVA: 0xCB5948 Offset: 0xCB5948 VA: 0xCB5948 Slot: 4
	public int Compare(Contraction c1, Contraction c2) { }

	// RVA: 0xCB5A9C Offset: 0xCB5A9C VA: 0xCB5A9C
	public void .ctor() { }

	// RVA: 0xCB5AA4 Offset: 0xCB5AA4 VA: 0xCB5AA4
	private static void .cctor() { }
}

// Namespace: Mono.Globalization.Unicode
internal class Level2Map // TypeDefIndex: 33
{
	// Fields
	public byte Source; // 0x8
	public byte Replace; // 0x9

	// Methods

	// RVA: 0xDC6560 Offset: 0xDC6560 VA: 0xDC6560
	public void .ctor(byte source, byte replace) { }
}

// Namespace: 
[CompilerGeneratedAttribute] // RVA: 0x3E66A8 Offset: 0x3E66A8 VA: 0x3E66A8
[Serializable]
private sealed class MSCompatUnicodeTable.<>c // TypeDefIndex: 34
{
	// Fields
	public static readonly MSCompatUnicodeTable.<>c <>9; // 0x0
	public static Comparison<Level2Map> <>9__17_0; // 0x4

	// Methods

	// RVA: 0xFA95BC Offset: 0xFA95BC VA: 0xFA95BC
	private static void .cctor() { }

	// RVA: 0xFA962C Offset: 0xFA962C VA: 0xFA962C
	public void .ctor() { }

	// RVA: 0xFA9634 Offset: 0xFA9634 VA: 0xFA9634
	internal int <BuildTailoringTables>b__17_0(Level2Map a, Level2Map b) { }
}

// Namespace: Mono.Globalization.Unicode
internal class MSCompatUnicodeTable // TypeDefIndex: 35
{
	// Fields
	public static int MaxExpansionLength; // 0x0
	private static readonly byte* ignorableFlags; // 0x4
	private static readonly byte* categories; // 0x8
	private static readonly byte* level1; // 0xC
	private static readonly byte* level2; // 0x10
	private static readonly byte* level3; // 0x14
	private static byte* cjkCHScategory; // 0x18
	private static byte* cjkCHTcategory; // 0x1C
	private static byte* cjkJAcategory; // 0x20
	private static byte* cjkKOcategory; // 0x24
	private static byte* cjkCHSlv1; // 0x28
	private static byte* cjkCHTlv1; // 0x2C
	private static byte* cjkJAlv1; // 0x30
	private static byte* cjkKOlv1; // 0x34
	private static byte* cjkKOlv2; // 0x38
	private static readonly char[] tailoringArr; // 0x3C
	private static readonly TailoringInfo[] tailoringInfos; // 0x40
	private static object forLock; // 0x44
	public static readonly bool isReady; // 0x48

	// Properties
	public static bool IsReady { get; }

	// Methods

	// RVA: 0x1145B68 Offset: 0x1145B68 VA: 0x1145B68
	public static TailoringInfo GetTailoringInfo(int lcid) { }

	// RVA: 0x1145CD0 Offset: 0x1145CD0 VA: 0x1145CD0
	public static void BuildTailoringTables(CultureInfo culture, TailoringInfo t, ref Contraction[] contractions, ref Level2Map[] diacriticals) { }

	// RVA: 0x1146600 Offset: 0x1146600 VA: 0x1146600
	private static void SetCJKReferences(string name, ref CodePointIndexer cjkIndexer, ref byte* catTable, ref byte* lv1Table, ref CodePointIndexer lv2Indexer, ref byte* lv2Table) { }

	// RVA: 0x1146960 Offset: 0x1146960 VA: 0x1146960
	public static byte Category(int cp) { }

	// RVA: 0x1146A44 Offset: 0x1146A44 VA: 0x1146A44
	public static byte Level1(int cp) { }

	// RVA: 0x1146B28 Offset: 0x1146B28 VA: 0x1146B28
	public static byte Level2(int cp) { }

	// RVA: 0x1146C0C Offset: 0x1146C0C VA: 0x1146C0C
	public static byte Level3(int cp) { }

	// RVA: 0x1146CF0 Offset: 0x1146CF0 VA: 0x1146CF0
	public static bool IsIgnorable(int cp, byte flag) { }

	// RVA: 0x1146E64 Offset: 0x1146E64 VA: 0x1146E64
	public static bool IsIgnorableNonSpacing(int cp) { }

	// RVA: 0x1146EDC Offset: 0x1146EDC VA: 0x1146EDC
	public static int ToKanaTypeInsensitive(int i) { }

	// RVA: 0x1146EF4 Offset: 0x1146EF4 VA: 0x1146EF4
	public static int ToWidthCompat(int i) { }

	// RVA: 0x114708C Offset: 0x114708C VA: 0x114708C
	public static bool HasSpecialWeight(char c) { }

	// RVA: 0x1147114 Offset: 0x1147114 VA: 0x1147114
	public static bool IsHalfWidthKana(char c) { }

	// RVA: 0x114712C Offset: 0x114712C VA: 0x114712C
	public static bool IsHiragana(char c) { }

	// RVA: 0x1147148 Offset: 0x1147148 VA: 0x1147148
	public static bool IsJapaneseSmallLetter(char c) { }

	// RVA: 0x114726C Offset: 0x114726C VA: 0x114726C
	public static bool get_IsReady() { }

	// RVA: 0x11472E0 Offset: 0x11472E0 VA: 0x11472E0
	private static IntPtr GetResource(string name) { }

	// RVA: 0x1147370 Offset: 0x1147370 VA: 0x1147370
	private static uint UInt32FromBytePtr(byte* raw, uint idx) { }

	// RVA: 0x1147378 Offset: 0x1147378 VA: 0x1147378
	private static void .cctor() { }

	// RVA: 0x114779C Offset: 0x114779C VA: 0x114779C
	public static void FillCJK(string culture, ref CodePointIndexer cjkIndexer, ref byte* catTable, ref byte* lv1Table, ref CodePointIndexer lv2Indexer, ref byte* lv2Table) { }

	// RVA: 0x114793C Offset: 0x114793C VA: 0x114793C
	private static void FillCJKCore(string culture, ref CodePointIndexer cjkIndexer, ref byte* catTable, ref byte* lv1Table, ref CodePointIndexer cjkLv2Indexer, ref byte* lv2Table) { }
}

// Namespace: Mono.Globalization.Unicode
internal class MSCompatUnicodeTableUtil // TypeDefIndex: 36
{
	// Fields
	public static readonly CodePointIndexer Ignorable; // 0x0
	public static readonly CodePointIndexer Category; // 0x4
	public static readonly CodePointIndexer Level1; // 0x8
	public static readonly CodePointIndexer Level2; // 0xC
	public static readonly CodePointIndexer Level3; // 0x10
	public static readonly CodePointIndexer CjkCHS; // 0x14
	public static readonly CodePointIndexer Cjk; // 0x18

	// Methods

	// RVA: 0x1147F90 Offset: 0x1147F90 VA: 0x1147F90
	private static void .cctor() { }
}

// Namespace: Mono.Globalization.Unicode
internal class NormalizationTableUtil // TypeDefIndex: 37
{
	// Fields
	public static readonly CodePointIndexer Prop; // 0x0
	public static readonly CodePointIndexer Map; // 0x4
	public static readonly CodePointIndexer Combining; // 0x8
	public static readonly CodePointIndexer Composite; // 0xC
	public static readonly CodePointIndexer Helper; // 0x10

	// Methods

	// RVA: 0x11D10DC Offset: 0x11D10DC VA: 0x11D10DC
	private static void .cctor() { }

	// RVA: 0x11CF0E8 Offset: 0x11CF0E8 VA: 0x11CF0E8
	public static int PropIdx(int cp) { }

	// RVA: 0x11CF244 Offset: 0x11CF244 VA: 0x11CF244
	public static int MapIdx(int cp) { }
}

// Namespace: 
internal struct SimpleCollator.Context // TypeDefIndex: 38
{
	// Fields
	public readonly CompareOptions Option; // 0x0
	public readonly byte* NeverMatchFlags; // 0x4
	public readonly byte* AlwaysMatchFlags; // 0x8
	public byte* Buffer1; // 0xC
	public byte* Buffer2; // 0x10
	public int PrevCode; // 0x14
	public byte* PrevSortKey; // 0x18

	// Methods

	// RVA: 0x52FF04 Offset: 0x52FF04 VA: 0x52FF04
	public void .ctor(CompareOptions opt, byte* alwaysMatchFlags, byte* neverMatchFlags, byte* buffer1, byte* buffer2, byte* prev1) { }
}

// Namespace: 
private struct SimpleCollator.PreviousInfo // TypeDefIndex: 39
{
	// Fields
	public int Code; // 0x0
	public byte* SortKey; // 0x4

	// Methods

	// RVA: 0x52FF30 Offset: 0x52FF30 VA: 0x52FF30
	public void .ctor(bool dummy) { }
}

// Namespace: 
private struct SimpleCollator.Escape // TypeDefIndex: 40
{
	// Fields
	public string Source; // 0x0
	public int Index; // 0x4
	public int Start; // 0x8
	public int End; // 0xC
	public int Optional; // 0x10
}

// Namespace: 
private enum SimpleCollator.ExtenderType // TypeDefIndex: 41
{
	// Fields
	public int value__; // 0x0
	public const SimpleCollator.ExtenderType None = 0;
	public const SimpleCollator.ExtenderType Simple = 1;
	public const SimpleCollator.ExtenderType Voiced = 2;
	public const SimpleCollator.ExtenderType Conditional = 3;
	public const SimpleCollator.ExtenderType Buggy = 4;
}

// Namespace: Mono.Globalization.Unicode
internal class SimpleCollator // TypeDefIndex: 42
{
	// Fields
	private static bool QuickCheckDisabled; // 0x0
	private static SimpleCollator invariant; // 0x4
	private readonly TextInfo textInfo; // 0x8
	private readonly CodePointIndexer cjkIndexer; // 0xC
	private readonly Contraction[] contractions; // 0x10
	private readonly Level2Map[] level2Maps; // 0x14
	private readonly byte[] unsafeFlags; // 0x18
	private readonly byte* cjkCatTable; // 0x1C
	private readonly byte* cjkLv1Table; // 0x20
	private readonly byte* cjkLv2Table; // 0x24
	private readonly CodePointIndexer cjkLv2Indexer; // 0x28
	private readonly int lcid; // 0x2C
	private readonly bool frenchSort; // 0x30
	private const int UnsafeFlagLength = 96;

	// Methods

	// RVA: 0x11311C8 Offset: 0x11311C8 VA: 0x11311C8
	public void .ctor(CultureInfo culture) { }

	// RVA: 0x113167C Offset: 0x113167C VA: 0x113167C
	private void SetCJKTable(CultureInfo culture, ref CodePointIndexer cjkIndexer, ref byte* catTable, ref byte* lv1Table, ref CodePointIndexer lv2Indexer, ref byte* lv2Table) { }

	// RVA: 0x1131790 Offset: 0x1131790 VA: 0x1131790
	private static CultureInfo GetNeutralCulture(CultureInfo info) { }

	// RVA: 0x1131824 Offset: 0x1131824 VA: 0x1131824
	private byte Category(int cp) { }

	// RVA: 0x11318E8 Offset: 0x11318E8 VA: 0x11318E8
	private byte Level1(int cp) { }

	// RVA: 0x11319AC Offset: 0x11319AC VA: 0x11319AC
	private byte Level2(int cp, SimpleCollator.ExtenderType ext) { }

	// RVA: 0x1131BB8 Offset: 0x1131BB8 VA: 0x1131BB8
	private static bool IsHalfKana(int cp, CompareOptions opt) { }

	// RVA: 0x1131C44 Offset: 0x1131C44 VA: 0x1131C44
	private Contraction GetContraction(string s, int start, int end) { }

	// RVA: 0x1131D24 Offset: 0x1131D24 VA: 0x1131D24
	private Contraction GetContraction(string s, int start, int end, Contraction[] clist) { }

	// RVA: 0x1131EA8 Offset: 0x1131EA8 VA: 0x1131EA8
	private Contraction GetTailContraction(string s, int start, int end) { }

	// RVA: 0x1131F88 Offset: 0x1131F88 VA: 0x1131F88
	private Contraction GetTailContraction(string s, int start, int end, Contraction[] clist) { }

	// RVA: 0x11321E4 Offset: 0x11321E4 VA: 0x11321E4
	private int FilterOptions(int i, CompareOptions opt) { }

	// RVA: 0x1132334 Offset: 0x1132334 VA: 0x1132334
	private SimpleCollator.ExtenderType GetExtenderType(int i) { }

	// RVA: 0x1132440 Offset: 0x1132440 VA: 0x1132440
	private static byte ToDashTypeValue(SimpleCollator.ExtenderType ext, CompareOptions opt) { }

	// RVA: 0x113246C Offset: 0x113246C VA: 0x113246C
	private int FilterExtender(int i, SimpleCollator.ExtenderType ext, CompareOptions opt) { }

	// RVA: 0x1132638 Offset: 0x1132638 VA: 0x1132638
	private static bool IsIgnorable(int i, CompareOptions opt) { }

	// RVA: 0x11326D8 Offset: 0x11326D8 VA: 0x11326D8
	private bool IsSafe(int i) { }

	// RVA: 0x1132760 Offset: 0x1132760 VA: 0x1132760
	public SortKey GetSortKey(string s, CompareOptions options) { }

	// RVA: 0x11327A4 Offset: 0x11327A4 VA: 0x11327A4
	public SortKey GetSortKey(string s, int start, int length, CompareOptions options) { }

	// RVA: 0x1132B58 Offset: 0x1132B58 VA: 0x1132B58
	private void GetSortKey(string s, int start, int end, SortKeyBuffer buf, CompareOptions opt) { }

	// RVA: 0x1133038 Offset: 0x1133038 VA: 0x1133038
	private void FillSortKeyRaw(int i, SimpleCollator.ExtenderType ext, SortKeyBuffer buf, CompareOptions opt) { }

	// RVA: 0x11335B4 Offset: 0x11335B4 VA: 0x11335B4
	private void FillSurrogateSortKeyRaw(int i, SortKeyBuffer buf) { }

	// RVA: 0x1133750 Offset: 0x1133750 VA: 0x1133750
	internal int Compare(string s1, int idx1, int len1, string s2, int idx2, int len2, CompareOptions options) { }

	// RVA: 0x113301C Offset: 0x113301C VA: 0x113301C
	private void ClearBuffer(byte* buffer, int size) { }

	// RVA: 0x113384C Offset: 0x113384C VA: 0x113384C
	private int CompareInternal(string s1, int idx1, int len1, string s2, int idx2, int len2, out bool targetConsumed, out bool sourceConsumed, bool skipHeadingExtenders, bool immediateBreakup, ref SimpleCollator.Context ctx) { }

	// RVA: 0x1134E58 Offset: 0x1134E58 VA: 0x1134E58
	private int CompareFlagPair(bool b1, bool b2) { }

	// RVA: 0x1134E78 Offset: 0x1134E78 VA: 0x1134E78
	public bool IsPrefix(string src, string target, CompareOptions opt) { }

	// RVA: 0x1134EC4 Offset: 0x1134EC4 VA: 0x1134EC4
	public bool IsPrefix(string s, string target, int start, int length, CompareOptions opt) { }

	// RVA: 0x1134FC4 Offset: 0x1134FC4 VA: 0x1134FC4
	private bool IsPrefix(string s, string target, int start, int length, bool skipHeadingExtenders, ref SimpleCollator.Context ctx) { }

	// RVA: 0x1135044 Offset: 0x1135044 VA: 0x1135044
	public bool IsSuffix(string src, string target, CompareOptions opt) { }

	// RVA: 0x11350A8 Offset: 0x11350A8 VA: 0x11350A8
	public bool IsSuffix(string s, string target, int start, int length, CompareOptions opt) { }

	// RVA: 0x1135340 Offset: 0x1135340 VA: 0x1135340
	private int QuickIndexOf(string s, string target, int start, int length, out bool testWasUnable) { }

	// RVA: 0x11354AC Offset: 0x11354AC VA: 0x11354AC
	public int IndexOf(string s, string target, int start, int length, CompareOptions opt) { }

	// RVA: 0x1135BE4 Offset: 0x1135BE4 VA: 0x1135BE4
	private int IndexOfOrdinal(string s, string target, int start, int length) { }

	// RVA: 0x1135CAC Offset: 0x1135CAC VA: 0x1135CAC
	private int IndexOfOrdinal(string s, char target, int start, int length) { }

	// RVA: 0x1135D14 Offset: 0x1135D14 VA: 0x1135D14
	private int IndexOfSortKey(string s, int start, int length, byte* sortkey, char target, int ti, bool noLv4, ref SimpleCollator.Context ctx) { }

	// RVA: 0x11356AC Offset: 0x11356AC VA: 0x11356AC
	private int IndexOf(string s, string target, int start, int length, byte* targetSortKey, ref SimpleCollator.Context ctx) { }

	// RVA: 0x1135160 Offset: 0x1135160 VA: 0x1135160
	public int LastIndexOf(string s, string target, int start, int length, CompareOptions opt) { }

	// RVA: 0x1135F54 Offset: 0x1135F54 VA: 0x1135F54
	private int LastIndexOfOrdinal(string s, string target, int start, int length) { }

	// RVA: 0x11366A0 Offset: 0x11366A0 VA: 0x11366A0
	private int LastIndexOfSortKey(string s, int start, int orgStart, int length, byte* sortkey, int ti, bool noLv4, ref SimpleCollator.Context ctx) { }

	// RVA: 0x11360EC Offset: 0x11360EC VA: 0x11360EC
	private int LastIndexOf(string s, string target, int start, int length, byte* targetSortKey, ref SimpleCollator.Context ctx) { }

	// RVA: 0x1135D94 Offset: 0x1135D94 VA: 0x1135D94
	private bool MatchesForward(string s, ref int idx, int end, int ti, byte* sortkey, bool noLv4, ref SimpleCollator.Context ctx) { }

	// RVA: 0x11368F4 Offset: 0x11368F4 VA: 0x11368F4
	private bool MatchesForwardCore(string s, ref int idx, int end, int ti, byte* sortkey, bool noLv4, SimpleCollator.ExtenderType ext, ref Contraction ct, ref SimpleCollator.Context ctx) { }

	// RVA: 0x1136D98 Offset: 0x1136D98 VA: 0x1136D98
	private bool MatchesPrimitive(CompareOptions opt, byte* source, int si, SimpleCollator.ExtenderType ext, byte* target, int ti, bool noLv4) { }

	// RVA: 0x113672C Offset: 0x113672C VA: 0x113672C
	private bool MatchesBackward(string s, ref int idx, int end, int orgStart, int ti, byte* sortkey, bool noLv4, ref SimpleCollator.Context ctx) { }

	// RVA: 0x1136FF4 Offset: 0x1136FF4 VA: 0x1136FF4
	private bool MatchesBackwardCore(string s, ref int idx, int end, int orgStart, int ti, byte* sortkey, bool noLv4, SimpleCollator.ExtenderType ext, ref Contraction ct, ref SimpleCollator.Context ctx) { }

	// RVA: 0x1137630 Offset: 0x1137630 VA: 0x1137630
	private static void .cctor() { }
}

// Namespace: Mono.Globalization.Unicode
internal class SortKeyBuffer // TypeDefIndex: 43
{
	// Fields
	private byte[] l1b; // 0x8
	private byte[] l2b; // 0xC
	private byte[] l3b; // 0x10
	private byte[] l4sb; // 0x14
	private byte[] l4tb; // 0x18
	private byte[] l4kb; // 0x1C
	private byte[] l4wb; // 0x20
	private byte[] l5b; // 0x24
	private string source; // 0x28
	private int l1; // 0x2C
	private int l2; // 0x30
	private int l3; // 0x34
	private int l4s; // 0x38
	private int l4t; // 0x3C
	private int l4k; // 0x40
	private int l4w; // 0x44
	private int l5; // 0x48
	private int lcid; // 0x4C
	private CompareOptions options; // 0x50
	private bool processLevel2; // 0x54
	private bool frenchSort; // 0x55
	private bool frenchSorted; // 0x56

	// Methods

	// RVA: 0x11328D0 Offset: 0x11328D0 VA: 0x11328D0
	public void .ctor(int lcid) { }

	// RVA: 0x113D824 Offset: 0x113D824 VA: 0x113D824
	public void Reset() { }

	// RVA: 0x11328D8 Offset: 0x11328D8 VA: 0x11328D8
	internal void Initialize(CompareOptions options, int lcid, string s, bool frenchSort) { }

	// RVA: 0x1133520 Offset: 0x1133520 VA: 0x1133520
	internal void AppendCJKExtension(byte lv1msb, byte lv1lsb) { }

	// RVA: 0x113367C Offset: 0x113367C VA: 0x113367C
	internal void AppendKana(byte category, byte lv1, byte lv2, byte lv3, bool isSmallKana, byte markType, bool isKatakana, bool isHalfWidth) { }

	// RVA: 0x11333BC Offset: 0x11333BC VA: 0x11333BC
	internal void AppendNormal(byte category, byte lv1, byte lv2, byte lv3) { }

	// RVA: 0x113D940 Offset: 0x113D940 VA: 0x113D940
	private void AppendLevel5(byte category, byte lv1) { }

	// RVA: 0x113D844 Offset: 0x113D844 VA: 0x113D844
	private void AppendBufferPrimitive(byte value, ref byte[] buf, ref int bidx) { }

	// RVA: 0x1132FEC Offset: 0x1132FEC VA: 0x1132FEC
	public SortKey GetResultAndReset() { }

	// RVA: 0x113DF6C Offset: 0x113DF6C VA: 0x113DF6C
	private int GetOptimizedLength(byte[] data, int len, byte defaultValue) { }

	// RVA: 0x113D9D4 Offset: 0x113D9D4 VA: 0x113D9D4
	public SortKey GetResult() { }
}

// Namespace: Mono.Security
[DefaultMemberAttribute] // RVA: 0x3E66B8 Offset: 0x3E66B8 VA: 0x3E66B8
internal class ASN1 // TypeDefIndex: 44
{
	// Fields
	private byte m_nTag; // 0x8
	private byte[] m_aValue; // 0xC
	private ArrayList elist; // 0x10

	// Properties
	public int Count { get; }
	public byte Tag { get; }
	public int Length { get; }
	public byte[] Value { get; set; }
	public ASN1 Item { get; }

	// Methods

	// RVA: 0xF6A8DC Offset: 0xF6A8DC VA: 0xF6A8DC
	public void .ctor(byte tag) { }

	// RVA: 0xF6A910 Offset: 0xF6A910 VA: 0xF6A910
	public void .ctor(byte tag, byte[] data) { }

	// RVA: 0xF6A944 Offset: 0xF6A944 VA: 0xF6A944
	public void .ctor(byte[] data) { }

	// RVA: 0xF6AC60 Offset: 0xF6AC60 VA: 0xF6AC60
	public int get_Count() { }

	// RVA: 0xF6AC80 Offset: 0xF6AC80 VA: 0xF6AC80
	public byte get_Tag() { }

	// RVA: 0xF6AC88 Offset: 0xF6AC88 VA: 0xF6AC88
	public int get_Length() { }

	// RVA: 0xF6AC9C Offset: 0xF6AC9C VA: 0xF6AC9C
	public byte[] get_Value() { }

	// RVA: 0xF6AD64 Offset: 0xF6AD64 VA: 0xF6AD64
	public void set_Value(byte[] value) { }

	// RVA: 0xF6AE18 Offset: 0xF6AE18 VA: 0xF6AE18
	private bool CompareArray(byte[] array1, byte[] array2) { }

	// RVA: 0xF6AED0 Offset: 0xF6AED0 VA: 0xF6AED0
	public bool CompareValue(byte[] value) { }

	// RVA: 0xF6AEDC Offset: 0xF6AEDC VA: 0xF6AEDC
	public ASN1 Add(ASN1 asn1) { }

	// RVA: 0xF6B018 Offset: 0xF6B018 VA: 0xF6B018 Slot: 4
	public virtual byte[] GetBytes() { }

	// RVA: 0xF6AB18 Offset: 0xF6AB18 VA: 0xF6AB18
	protected void Decode(byte[] asn1, ref int anPos, int anLength) { }

	// RVA: 0xF6B888 Offset: 0xF6B888 VA: 0xF6B888
	protected void DecodeTLV(byte[] asn1, ref int pos, out byte tag, out int length, out byte[] content) { }

	// RVA: 0xF6B9F0 Offset: 0xF6B9F0 VA: 0xF6B9F0
	public ASN1 get_Item(int index) { }

	// RVA: 0xF6BB60 Offset: 0xF6BB60 VA: 0xF6BB60
	public ASN1 Element(int index, byte anTag) { }

	// RVA: 0xF6BCE8 Offset: 0xF6BCE8 VA: 0xF6BCE8 Slot: 3
	public override string ToString() { }
}

// Namespace: Mono.Security
internal static class ASN1Convert // TypeDefIndex: 45
{
	// Methods

	// RVA: 0xF6C0B4 Offset: 0xF6C0B4 VA: 0xF6C0B4
	public static ASN1 FromInt32(int value) { }

	// RVA: 0xF6C270 Offset: 0xF6C270 VA: 0xF6C270
	public static ASN1 FromOid(string oid) { }

	// RVA: 0xF6C340 Offset: 0xF6C340 VA: 0xF6C340
	public static int ToInt32(ASN1 asn1) { }

	// RVA: 0xF6C468 Offset: 0xF6C468 VA: 0xF6C468
	public static string ToOid(ASN1 asn1) { }

	// RVA: 0xF6C864 Offset: 0xF6C864 VA: 0xF6C864
	public static DateTime ToDateTime(ASN1 time) { }
}

// Namespace: Mono.Security
internal sealed class BitConverterLE // TypeDefIndex: 46
{
	// Methods

	// RVA: 0xD95B74 Offset: 0xD95B74 VA: 0xD95B74
	private static byte[] GetUIntBytes(byte* bytes) { }

	// RVA: 0xD95D28 Offset: 0xD95D28 VA: 0xD95D28
	private static byte[] GetULongBytes(byte* bytes) { }

	// RVA: 0xD95FDC Offset: 0xD95FDC VA: 0xD95FDC
	internal static byte[] GetBytes(int value) { }

	// RVA: 0xD947B0 Offset: 0xD947B0 VA: 0xD947B0
	internal static byte[] GetBytes(float value) { }

	// RVA: 0xD94004 Offset: 0xD94004 VA: 0xD94004
	internal static byte[] GetBytes(double value) { }

	// RVA: 0xD95FFC Offset: 0xD95FFC VA: 0xD95FFC
	private static void UIntFromBytes(byte* dst, byte[] src, int startIndex) { }

	// RVA: 0xD961A0 Offset: 0xD961A0 VA: 0xD961A0
	private static void ULongFromBytes(byte* dst, byte[] src, int startIndex) { }

	// RVA: 0xD925A4 Offset: 0xD925A4 VA: 0xD925A4
	internal static float ToSingle(byte[] value, int startIndex) { }

	// RVA: 0xD92628 Offset: 0xD92628 VA: 0xD92628
	internal static double ToDouble(byte[] value, int startIndex) { }
}

// Namespace: 
public class PKCS7.ContentInfo // TypeDefIndex: 47
{
	// Fields
	private string contentType; // 0x8
	private ASN1 content; // 0xC

	// Properties
	public ASN1 ASN1 { get; }
	public ASN1 Content { get; set; }
	public string ContentType { get; set; }

	// Methods

	// RVA: 0xFAC9D8 Offset: 0xFAC9D8 VA: 0xFAC9D8
	public void .ctor() { }

	// RVA: 0xFACA58 Offset: 0xFACA58 VA: 0xFACA58
	public void .ctor(string oid) { }

	// RVA: 0xFACA80 Offset: 0xFACA80 VA: 0xFACA80
	public void .ctor(byte[] data) { }

	// RVA: 0xFACAF4 Offset: 0xFACAF4 VA: 0xFACAF4
	public void .ctor(ASN1 asn1) { }

	// RVA: 0xFACCB0 Offset: 0xFACCB0 VA: 0xFACCB0
	public ASN1 get_ASN1() { }

	// RVA: 0xFACD84 Offset: 0xFACD84 VA: 0xFACD84
	public ASN1 get_Content() { }

	// RVA: 0xFACD8C Offset: 0xFACD8C VA: 0xFACD8C
	public void set_Content(ASN1 value) { }

	// RVA: 0xFACD94 Offset: 0xFACD94 VA: 0xFACD94
	public string get_ContentType() { }

	// RVA: 0xFACD9C Offset: 0xFACD9C VA: 0xFACD9C
	public void set_ContentType(string value) { }

	// RVA: 0xFACCB4 Offset: 0xFACCB4 VA: 0xFACCB4
	internal ASN1 GetASN1() { }
}

// Namespace: 
public class PKCS7.EncryptedData // TypeDefIndex: 48
{
	// Fields
	private byte _version; // 0x8
	private PKCS7.ContentInfo _content; // 0xC
	private PKCS7.ContentInfo _encryptionAlgorithm; // 0x10
	private byte[] _encrypted; // 0x14

	// Properties
	public PKCS7.ContentInfo EncryptionAlgorithm { get; }
	public byte[] EncryptedContent { get; }

	// Methods

	// RVA: 0xFACDA4 Offset: 0xFACDA4 VA: 0xFACDA4
	public void .ctor() { }

	// RVA: 0xFACDC4 Offset: 0xFACDC4 VA: 0xFACDC4
	public void .ctor(ASN1 asn1) { }

	// RVA: 0xFAD1C8 Offset: 0xFAD1C8 VA: 0xFAD1C8
	public PKCS7.ContentInfo get_EncryptionAlgorithm() { }

	// RVA: 0xFAD1D0 Offset: 0xFAD1D0 VA: 0xFAD1D0
	public byte[] get_EncryptedContent() { }
}

// Namespace: Mono.Security
internal sealed class PKCS7 // TypeDefIndex: 49
{}

// Namespace: Mono.Security.X509
internal class SafeBag // TypeDefIndex: 50
{
	// Fields
	private string _bagOID; // 0x8
	private ASN1 _asn1; // 0xC

	// Properties
	public string BagOID { get; }
	public ASN1 ASN1 { get; }

	// Methods

	// RVA: 0x10D0E50 Offset: 0x10D0E50 VA: 0x10D0E50
	public void .ctor(string bagOID, ASN1 asn1) { }

	// RVA: 0x10D0E90 Offset: 0x10D0E90 VA: 0x10D0E90
	public string get_BagOID() { }

	// RVA: 0x10D0E98 Offset: 0x10D0E98 VA: 0x10D0E98
	public ASN1 get_ASN1() { }
}

// Namespace: 
public class PKCS12.DeriveBytes // TypeDefIndex: 51
{
	// Fields
	private static byte[] keyDiversifier; // 0x0
	private static byte[] ivDiversifier; // 0x4
	private static byte[] macDiversifier; // 0x8
	private string _hashName; // 0x8
	private int _iterations; // 0xC
	private byte[] _password; // 0x10
	private byte[] _salt; // 0x14

	// Properties
	public string HashName { set; }
	public int IterationCount { set; }
	public byte[] Password { set; }
	public byte[] Salt { set; }

	// Methods

	// RVA: 0xFABDA4 Offset: 0xFABDA4 VA: 0xFABDA4
	public void .ctor() { }

	// RVA: 0xFABDAC Offset: 0xFABDAC VA: 0xFABDAC
	public void set_HashName(string value) { }

	// RVA: 0xFABDB4 Offset: 0xFABDB4 VA: 0xFABDB4
	public void set_IterationCount(int value) { }

	// RVA: 0xFABDBC Offset: 0xFABDBC VA: 0xFABDBC
	public void set_Password(byte[] value) { }

	// RVA: 0xFABE98 Offset: 0xFABE98 VA: 0xFABE98
	public void set_Salt(byte[] value) { }

	// RVA: 0xFABF60 Offset: 0xFABF60 VA: 0xFABF60
	private void Adjust(byte[] a, int aOff, byte[] b) { }

	// RVA: 0xFAC0B8 Offset: 0xFAC0B8 VA: 0xFAC0B8
	private byte[] Derive(byte[] diversifier, int n) { }

	// RVA: 0xFAC6EC Offset: 0xFAC6EC VA: 0xFAC6EC
	public byte[] DeriveKey(int size) { }

	// RVA: 0xFAC774 Offset: 0xFAC774 VA: 0xFAC774
	public byte[] DeriveIV(int size) { }

	// RVA: 0xFAC7FC Offset: 0xFAC7FC VA: 0xFAC7FC
	public byte[] DeriveMAC(int size) { }

	// RVA: 0xFAC884 Offset: 0xFAC884 VA: 0xFAC884
	private static void .cctor() { }
}

// Namespace: Mono.Security.X509
internal class PKCS12 : ICloneable // TypeDefIndex: 52
{
	// Fields
	private byte[] _password; // 0x8
	private ArrayList _keyBags; // 0xC
	private ArrayList _secretBags; // 0x10
	private X509CertificateCollection _certs; // 0x14
	private bool _keyBagsChanged; // 0x18
	private bool _secretBagsChanged; // 0x19
	private bool _certsChanged; // 0x1A
	private int _iterations; // 0x1C
	private ArrayList _safeBags; // 0x20
	private RandomNumberGenerator _rng; // 0x24
	private static int password_max_length; // 0x0

	// Properties
	public string Password { set; }
	public int IterationCount { get; set; }
	public ArrayList Keys { get; }
	public X509CertificateCollection Certificates { get; }
	internal RandomNumberGenerator RNG { get; }
	public static int MaximumPasswordLength { get; }

	// Methods

	// RVA: 0x1083E28 Offset: 0x1083E28 VA: 0x1083E28
	public void .ctor() { }

	// RVA: 0x1083F34 Offset: 0x1083F34 VA: 0x1083F34
	public void .ctor(byte[] data) { }

	// RVA: 0x1084A8C Offset: 0x1084A8C VA: 0x1084A8C
	public void .ctor(byte[] data, string password) { }

	// RVA: 0x10841C8 Offset: 0x10841C8 VA: 0x10841C8
	private void Decode(byte[] data) { }

	// RVA: 0x108575C Offset: 0x108575C VA: 0x108575C Slot: 1
	protected override void Finalize() { }

	// RVA: 0x1083F64 Offset: 0x1083F64 VA: 0x1083F64
	public void set_Password(string value) { }

	// RVA: 0x10857D0 Offset: 0x10857D0 VA: 0x10857D0
	public int get_IterationCount() { }

	// RVA: 0x10857D8 Offset: 0x10857D8 VA: 0x10857D8
	public void set_IterationCount(int value) { }

	// RVA: 0x10857E0 Offset: 0x10857E0 VA: 0x10857E0
	public ArrayList get_Keys() { }

	// RVA: 0x1086210 Offset: 0x1086210 VA: 0x1086210
	public X509CertificateCollection get_Certificates() { }

	// RVA: 0x10866C4 Offset: 0x10866C4 VA: 0x10866C4
	internal RandomNumberGenerator get_RNG() { }

	// RVA: 0x1084CA8 Offset: 0x1084CA8 VA: 0x1084CA8
	private bool Compare(byte[] expected, byte[] actual) { }

	// RVA: 0x10866FC Offset: 0x10866FC VA: 0x10866FC
	private SymmetricAlgorithm GetSymmetricAlgorithm(string algorithmOid, byte[] salt, int iterationCount) { }

	// RVA: 0x1086038 Offset: 0x1086038 VA: 0x1086038
	public byte[] Decrypt(string algorithmOid, byte[] salt, int iterationCount, byte[] encryptedData) { }

	// RVA: 0x108566C Offset: 0x108566C VA: 0x108566C
	public byte[] Decrypt(PKCS7.EncryptedData ed) { }

	// RVA: 0x1087030 Offset: 0x1087030 VA: 0x1087030
	public byte[] Encrypt(string algorithmOid, byte[] salt, int iterationCount, byte[] data) { }

	// RVA: 0x1087280 Offset: 0x1087280 VA: 0x1087280
	private DSAParameters GetExistingParameters(out bool found) { }

	// RVA: 0x1087538 Offset: 0x1087538 VA: 0x1087538
	private void AddPrivateKey(PKCS8.PrivateKeyInfo pki) { }

	// RVA: 0x1084D60 Offset: 0x1084D60 VA: 0x1084D60
	private void ReadSafeBag(ASN1 safeBag) { }

	// RVA: 0x10876D0 Offset: 0x10876D0 VA: 0x10876D0
	private ASN1 CertificateSafeBag(X509Certificate x509, IDictionary attributes) { }

	// RVA: 0x1084AC0 Offset: 0x1084AC0 VA: 0x1084AC0
	private byte[] MAC(byte[] password, byte[] salt, int iterations, byte[] data) { }

	// RVA: 0x10885BC Offset: 0x10885BC VA: 0x10885BC
	public byte[] GetBytes() { }

	// RVA: 0x108AB80 Offset: 0x108AB80 VA: 0x108AB80
	private PKCS7.ContentInfo EncryptedContentInfo(ASN1 safeBags, string algorithmOid) { }

	// RVA: 0x108AB78 Offset: 0x108AB78 VA: 0x108AB78
	public void AddCertificate(X509Certificate cert) { }

	// RVA: 0x108AF70 Offset: 0x108AF70 VA: 0x108AF70
	public void AddCertificate(X509Certificate cert, IDictionary attributes) { }

	// RVA: 0x108AB70 Offset: 0x108AB70 VA: 0x108AB70
	public void RemoveCertificate(X509Certificate cert) { }

	// RVA: 0x108B258 Offset: 0x108B258 VA: 0x108B258
	public void RemoveCertificate(X509Certificate cert, IDictionary attrs) { }

	// RVA: 0x108B8F4 Offset: 0x108B8F4 VA: 0x108B8F4 Slot: 4
	public object Clone() { }

	// RVA: 0x108B9E4 Offset: 0x108B9E4 VA: 0x108B9E4
	public static int get_MaximumPasswordLength() { }

	// RVA: 0x108BA58 Offset: 0x108BA58 VA: 0x108BA58
	private static void .cctor() { }
}

// Namespace: Mono.Security.X509
internal sealed class X501 // TypeDefIndex: 53
{
	// Fields
	private static byte[] countryName; // 0x0
	private static byte[] organizationName; // 0x4
	private static byte[] organizationalUnitName; // 0x8
	private static byte[] commonName; // 0xC
	private static byte[] localityName; // 0x10
	private static byte[] stateOrProvinceName; // 0x14
	private static byte[] streetAddress; // 0x18
	private static byte[] domainComponent; // 0x1C
	private static byte[] userid; // 0x20
	private static byte[] email; // 0x24
	private static byte[] dnQualifier; // 0x28
	private static byte[] title; // 0x2C
	private static byte[] surname; // 0x30
	private static byte[] givenName; // 0x34
	private static byte[] initial; // 0x38

	// Methods

	// RVA: 0xE40FE0 Offset: 0xE40FE0 VA: 0xE40FE0
	public static string ToString(ASN1 seq) { }

	// RVA: 0xE41DB4 Offset: 0xE41DB4 VA: 0xE41DB4
	public static string ToString(ASN1 seq, bool reversed, string separator, bool quotes) { }

	// RVA: 0xE41154 Offset: 0xE41154 VA: 0xE41154
	private static void AppendEntry(StringBuilder sb, ASN1 entry, bool quotes) { }

	// RVA: 0xE41FDC Offset: 0xE41FDC VA: 0xE41FDC
	private static void .cctor() { }
}

// Namespace: Mono.Security.X509
internal class X509Certificate : ISerializable // TypeDefIndex: 54
{
	// Fields
	private ASN1 decoder; // 0x8
	private byte[] m_encodedcert; // 0xC
	private DateTime m_from; // 0x10
	private DateTime m_until; // 0x18
	private ASN1 issuer; // 0x20
	private string m_issuername; // 0x24
	private string m_keyalgo; // 0x28
	private byte[] m_keyalgoparams; // 0x2C
	private ASN1 subject; // 0x30
	private string m_subject; // 0x34
	private byte[] m_publickey; // 0x38
	private byte[] signature; // 0x3C
	private string m_signaturealgo; // 0x40
	private byte[] m_signaturealgoparams; // 0x44
	private RSA _rsa; // 0x48
	private DSA _dsa; // 0x4C
	private int version; // 0x50
	private byte[] serialnumber; // 0x54
	private byte[] issuerUniqueID; // 0x58
	private byte[] subjectUniqueID; // 0x5C
	private X509ExtensionCollection extensions; // 0x60
	private static string encoding_error; // 0x0

	// Properties
	public DSA DSA { get; }
	public virtual string IssuerName { get; }
	public virtual byte[] KeyAlgorithmParameters { get; }
	public virtual RSA RSA { get; }
	public virtual byte[] RawData { get; }
	public virtual byte[] SerialNumber { get; }
	public virtual string SubjectName { get; }
	public virtual DateTime ValidFrom { get; }
	public virtual DateTime ValidUntil { get; }

	// Methods

	// RVA: 0xE424F0 Offset: 0xE424F0 VA: 0xE424F0
	private void Parse(byte[] data) { }

	// RVA: 0xE433BC Offset: 0xE433BC VA: 0xE433BC
	public void .ctor(byte[] data) { }

	// RVA: 0xE43760 Offset: 0xE43760 VA: 0xE43760
	private byte[] GetUnsignedBigInteger(byte[] integer) { }

	// RVA: 0xE43828 Offset: 0xE43828 VA: 0xE43828
	public DSA get_DSA() { }

	// RVA: 0xE43C18 Offset: 0xE43C18 VA: 0xE43C18 Slot: 5
	public virtual string get_IssuerName() { }

	// RVA: 0xE43C20 Offset: 0xE43C20 VA: 0xE43C20 Slot: 6
	public virtual byte[] get_KeyAlgorithmParameters() { }

	// RVA: 0xE43CC0 Offset: 0xE43CC0 VA: 0xE43CC0 Slot: 7
	public virtual RSA get_RSA() { }

	// RVA: 0xE43F14 Offset: 0xE43F14 VA: 0xE43F14 Slot: 8
	public virtual byte[] get_RawData() { }

	// RVA: 0xE43FB4 Offset: 0xE43FB4 VA: 0xE43FB4 Slot: 9
	public virtual byte[] get_SerialNumber() { }

	// RVA: 0xE44054 Offset: 0xE44054 VA: 0xE44054 Slot: 10
	public virtual string get_SubjectName() { }

	// RVA: 0xE4405C Offset: 0xE4405C VA: 0xE4405C Slot: 11
	public virtual DateTime get_ValidFrom() { }

	// RVA: 0xE44068 Offset: 0xE44068 VA: 0xE44068 Slot: 12
	public virtual DateTime get_ValidUntil() { }

	// RVA: 0xE44074 Offset: 0xE44074 VA: 0xE44074
	public ASN1 GetIssuerName() { }

	// RVA: 0xE4407C Offset: 0xE4407C VA: 0xE4407C
	public ASN1 GetSubjectName() { }

	// RVA: 0xE44084 Offset: 0xE44084 VA: 0xE44084 Slot: 13
	public virtual void GetObjectData(SerializationInfo info, StreamingContext context) { }

	// RVA: 0xE435C0 Offset: 0xE435C0 VA: 0xE435C0
	private static byte[] PEM(string type, byte[] data) { }

	// RVA: 0xE440F8 Offset: 0xE440F8 VA: 0xE440F8
	private static void .cctor() { }
}

// Namespace: 
public class X509CertificateCollection.X509CertificateEnumerator : IEnumerator // TypeDefIndex: 55
{
	// Fields
	private IEnumerator enumerator; // 0x8

	// Properties
	public X509Certificate Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	// RVA: 0x53E2AC Offset: 0x53E2AC VA: 0x53E2AC
	public void .ctor(X509CertificateCollection mappings) { }

	// RVA: 0x53E390 Offset: 0x53E390 VA: 0x53E390
	public X509Certificate get_Current() { }

	// RVA: 0x53E4BC Offset: 0x53E4BC VA: 0x53E4BC Slot: 5
	private object System.Collections.IEnumerator.get_Current() { }

	// RVA: 0x53E584 Offset: 0x53E584 VA: 0x53E584 Slot: 4
	private bool System.Collections.IEnumerator.MoveNext() { }

	// RVA: 0x53E64C Offset: 0x53E64C VA: 0x53E64C Slot: 6
	private void System.Collections.IEnumerator.Reset() { }

	// RVA: 0x53E714 Offset: 0x53E714 VA: 0x53E714
	public bool MoveNext() { }
}

// Namespace: Mono.Security.X509
[DefaultMemberAttribute] // RVA: 0x3E66EC Offset: 0x3E66EC VA: 0x3E66EC
[Serializable]
internal class X509CertificateCollection : CollectionBase, IEnumerable // TypeDefIndex: 56
{
	// Properties
	public X509Certificate Item { get; }

	// Methods

	// RVA: 0xE44ECC Offset: 0xE44ECC VA: 0xE44ECC
	public void .ctor() { }

	// RVA: 0xE44ED4 Offset: 0xE44ED4 VA: 0xE44ED4
	public X509Certificate get_Item(int index) { }

	// RVA: 0xE44FA0 Offset: 0xE44FA0 VA: 0xE44FA0
	public int Add(X509Certificate value) { }

	// RVA: 0xE45040 Offset: 0xE45040 VA: 0xE45040
	public X509CertificateCollection.X509CertificateEnumerator GetEnumerator() { }

	// RVA: 0xE450A8 Offset: 0xE450A8 VA: 0xE450A8 Slot: 18
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }

	// RVA: 0xE450E0 Offset: 0xE450E0 VA: 0xE450E0 Slot: 2
	public override int GetHashCode() { }
}

// Namespace: Mono.Security.X509
internal class X509Extension // TypeDefIndex: 57
{
	// Fields
	protected string extnOid; // 0x8
	protected bool extnCritical; // 0xC
	protected ASN1 extnValue; // 0x10

	// Methods

	// RVA: 0xE45CDC Offset: 0xE45CDC VA: 0xE45CDC
	public void .ctor(ASN1 asn1) { }

	// RVA: 0xE46060 Offset: 0xE46060 VA: 0xE46060 Slot: 4
	protected virtual void Decode() { }

	// RVA: 0xE46064 Offset: 0xE46064 VA: 0xE46064 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0xE4620C Offset: 0xE4620C VA: 0xE4620C Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xE4623C Offset: 0xE4623C VA: 0xE4623C
	private void WriteLine(StringBuilder sb, int n, int pos) { }

	// RVA: 0xE4653C Offset: 0xE4653C VA: 0xE4653C Slot: 3
	public override string ToString() { }
}

// Namespace: Mono.Security.X509
[DefaultMemberAttribute] // RVA: 0x3E6720 Offset: 0x3E6720 VA: 0x3E6720
internal sealed class X509ExtensionCollection : CollectionBase, IEnumerable // TypeDefIndex: 58
{
	// Fields
	private bool readOnly; // 0xC

	// Methods

	// RVA: 0xE46658 Offset: 0xE46658 VA: 0xE46658
	public void .ctor() { }

	// RVA: 0xE43260 Offset: 0xE43260 VA: 0xE43260
	public void .ctor(ASN1 asn1) { }

	// RVA: 0xE46660 Offset: 0xE46660 VA: 0xE46660 Slot: 18
	private IEnumerator System.Collections.IEnumerable.GetEnumerator() { }
}

// Namespace: Mono.Security.Cryptography
internal class ARC4Managed : RC4, ICryptoTransform, IDisposable // TypeDefIndex: 59
{
	// Fields
	private byte[] key; // 0x2C
	private byte[] state; // 0x30
	private byte x; // 0x34
	private byte y; // 0x35
	private bool m_disposed; // 0x36

	// Properties
	public override byte[] Key { get; set; }
	public bool CanTransformMultipleBlocks { get; }
	public int InputBlockSize { get; }
	public int OutputBlockSize { get; }

	// Methods

	// RVA: 0xF67374 Offset: 0xF67374 VA: 0xF67374
	public void .ctor() { }

	// RVA: 0xF6742C Offset: 0xF6742C VA: 0xF6742C Slot: 1
	protected override void Finalize() { }

	// RVA: 0xF674A0 Offset: 0xF674A0 VA: 0xF674A0 Slot: 5
	protected override void Dispose(bool disposing) { }

	// RVA: 0xF676D8 Offset: 0xF676D8 VA: 0xF676D8 Slot: 11
	public override byte[] get_Key() { }

	// RVA: 0xF677A8 Offset: 0xF677A8 VA: 0xF677A8 Slot: 12
	public override void set_Key(byte[] value) { }

	// RVA: 0xF67B18 Offset: 0xF67B18 VA: 0xF67B18 Slot: 21
	public override ICryptoTransform CreateEncryptor(byte[] rgbKey, byte[] rgvIV) { }

	// RVA: 0xF67B40 Offset: 0xF67B40 VA: 0xF67B40 Slot: 23
	public override ICryptoTransform CreateDecryptor(byte[] rgbKey, byte[] rgvIV) { }

	// RVA: 0xF67B78 Offset: 0xF67B78 VA: 0xF67B78 Slot: 25
	public override void GenerateIV() { }

	// RVA: 0xF67BE8 Offset: 0xF67BE8 VA: 0xF67BE8 Slot: 24
	public override void GenerateKey() { }

	// RVA: 0xF67C18 Offset: 0xF67C18 VA: 0xF67C18 Slot: 28
	public bool get_CanTransformMultipleBlocks() { }

	// RVA: 0xF67C20 Offset: 0xF67C20 VA: 0xF67C20 Slot: 26
	public int get_InputBlockSize() { }

	// RVA: 0xF67C28 Offset: 0xF67C28 VA: 0xF67C28 Slot: 27
	public int get_OutputBlockSize() { }

	// RVA: 0xF6794C Offset: 0xF6794C VA: 0xF6794C
	private void KeySetup(byte[] key) { }

	// RVA: 0xF67C30 Offset: 0xF67C30 VA: 0xF67C30
	private void CheckInput(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0xF67E14 Offset: 0xF67E14 VA: 0xF67E14 Slot: 29
	public int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset) { }

	// RVA: 0xF67F94 Offset: 0xF67F94 VA: 0xF67F94
	private int InternalTransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset) { }

	// RVA: 0xF68208 Offset: 0xF68208 VA: 0xF68208 Slot: 30
	public byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount) { }
}

// Namespace: Mono.Security.Cryptography
internal sealed class KeyBuilder // TypeDefIndex: 60
{
	// Fields
	private static RandomNumberGenerator rng; // 0x0

	// Properties
	private static RandomNumberGenerator Rng { get; }

	// Methods

	// RVA: 0xDBBB20 Offset: 0xDBBB20 VA: 0xDBBB20
	private static RandomNumberGenerator get_Rng() { }

	// RVA: 0xDBBBA4 Offset: 0xDBBBA4 VA: 0xDBBBA4
	public static byte[] Key(int size) { }

	// RVA: 0xDBBC30 Offset: 0xDBBC30 VA: 0xDBBC30
	public static byte[] IV(int size) { }
}

// Namespace: Mono.Security.Cryptography
internal class KeyPairPersistence // TypeDefIndex: 61
{
	// Fields
	private static bool _userPathExists; // 0x0
	private static string _userPath; // 0x4
	private static bool _machinePathExists; // 0x8
	private static string _machinePath; // 0xC
	private CspParameters _params; // 0x8
	private string _keyvalue; // 0xC
	private string _filename; // 0x10
	private string _container; // 0x14
	private static object lockobj; // 0x10

	// Properties
	public string Filename { get; }
	public string KeyValue { get; set; }
	private static string UserPath { get; }
	private static string MachinePath { get; }
	private bool CanChange { get; }
	private bool UseDefaultKeyContainer { get; }
	private bool UseMachineKeyStore { get; }
	private string ContainerName { get; }

	// Methods

	// RVA: 0xDC177C Offset: 0xDC177C VA: 0xDC177C
	public void .ctor(CspParameters parameters) { }

	// RVA: 0xDC1784 Offset: 0xDC1784 VA: 0xDC1784
	public void .ctor(CspParameters parameters, string keyPair) { }

	// RVA: 0xDC1928 Offset: 0xDC1928 VA: 0xDC1928
	public string get_Filename() { }

	// RVA: 0xDC2BDC Offset: 0xDC2BDC VA: 0xDC2BDC
	public string get_KeyValue() { }

	// RVA: 0xDC2BE4 Offset: 0xDC2BE4 VA: 0xDC2BE4
	public void set_KeyValue(string value) { }

	// RVA: 0xDC2C08 Offset: 0xDC2C08 VA: 0xDC2C08
	public bool Load() { }

	// RVA: 0xDC2F44 Offset: 0xDC2F44 VA: 0xDC2F44
	public void Save() { }

	// RVA: 0xDC3658 Offset: 0xDC3658 VA: 0xDC3658
	public void Remove() { }

	// RVA: 0xDC249C Offset: 0xDC249C VA: 0xDC249C
	private static string get_UserPath() { }

	// RVA: 0xDC1D60 Offset: 0xDC1D60 VA: 0xDC1D60
	private static string get_MachinePath() { }

	// RVA: 0xDC37C8 Offset: 0xDC37C8 VA: 0xDC37C8
	internal static bool _CanSecure(string root) { }

	// RVA: 0xDC37CC Offset: 0xDC37CC VA: 0xDC37CC
	internal static bool _ProtectUser(string path) { }

	// RVA: 0xDC37D0 Offset: 0xDC37D0 VA: 0xDC37D0
	internal static bool _ProtectMachine(string path) { }

	// RVA: 0xDC37D4 Offset: 0xDC37D4 VA: 0xDC37D4
	internal static bool _IsUserProtected(string path) { }

	// RVA: 0xDC37D8 Offset: 0xDC37D8 VA: 0xDC37D8
	internal static bool _IsMachineProtected(string path) { }

	// RVA: 0xDC37DC Offset: 0xDC37DC VA: 0xDC37DC
	private static bool CanSecure(string path) { }

	// RVA: 0xDC35AC Offset: 0xDC35AC VA: 0xDC35AC
	private static bool ProtectUser(string path) { }

	// RVA: 0xDC3500 Offset: 0xDC3500 VA: 0xDC3500
	private static bool ProtectMachine(string path) { }

	// RVA: 0xDC3670 Offset: 0xDC3670 VA: 0xDC3670
	private static bool IsUserProtected(string path) { }

	// RVA: 0xDC371C Offset: 0xDC371C VA: 0xDC371C
	private static bool IsMachineProtected(string path) { }

	// RVA: 0xDC2BF8 Offset: 0xDC2BF8 VA: 0xDC2BF8
	private bool get_CanChange() { }

	// RVA: 0xDC38D4 Offset: 0xDC38D4 VA: 0xDC38D4
	private bool get_UseDefaultKeyContainer() { }

	// RVA: 0xDC1D3C Offset: 0xDC1D3C VA: 0xDC1D3C
	private bool get_UseMachineKeyStore() { }

	// RVA: 0xDC1B5C Offset: 0xDC1B5C VA: 0xDC1B5C
	private string get_ContainerName() { }

	// RVA: 0xDC182C Offset: 0xDC182C VA: 0xDC182C
	private CspParameters Copy(CspParameters p) { }

	// RVA: 0xDC2DA0 Offset: 0xDC2DA0 VA: 0xDC2DA0
	private void FromXml(string xml) { }

	// RVA: 0xDC31B4 Offset: 0xDC31B4 VA: 0xDC31B4
	private string ToXml() { }

	// RVA: 0xDC38F8 Offset: 0xDC38F8 VA: 0xDC38F8
	private static void .cctor() { }
}

// Namespace: Mono.Security.Cryptography
internal abstract class MD2 : HashAlgorithm // TypeDefIndex: 62
{
	// Methods

	// RVA: 0x1140798 Offset: 0x1140798 VA: 0x1140798
	protected void .ctor() { }

	// RVA: 0x11407B8 Offset: 0x11407B8 VA: 0x11407B8
	public static MD2 Create() { }
}

// Namespace: Mono.Security.Cryptography
internal class MD2Managed : MD2 // TypeDefIndex: 63
{
	// Fields
	private byte[] state; // 0x18
	private byte[] checksum; // 0x1C
	private byte[] buffer; // 0x20
	private int count; // 0x24
	private byte[] x; // 0x28
	private static readonly byte[] PI_SUBST; // 0x0

	// Methods

	// RVA: 0x11408F8 Offset: 0x11408F8 VA: 0x11408F8
	private byte[] Padding(int nLength) { }

	// RVA: 0x1140814 Offset: 0x1140814 VA: 0x1140814
	public void .ctor() { }

	// RVA: 0x11409A8 Offset: 0x11409A8 VA: 0x11409A8 Slot: 16
	public override void Initialize() { }

	// RVA: 0x1140A10 Offset: 0x1140A10 VA: 0x1140A10 Slot: 17
	protected override void HashCore(byte[] array, int ibStart, int cbSize) { }

	// RVA: 0x1140E20 Offset: 0x1140E20 VA: 0x1140E20 Slot: 18
	protected override byte[] HashFinal() { }

	// RVA: 0x1140ADC Offset: 0x1140ADC VA: 0x1140ADC
	private void MD2Transform(byte[] state, byte[] checksum, byte[] block, int index) { }

	// RVA: 0x1140F44 Offset: 0x1140F44 VA: 0x1140F44
	private static void .cctor() { }
}

// Namespace: Mono.Security.Cryptography
internal abstract class MD4 : HashAlgorithm // TypeDefIndex: 64
{
	// Methods

	// RVA: 0x1140FF8 Offset: 0x1140FF8 VA: 0x1140FF8
	protected void .ctor() { }

	// RVA: 0x1141018 Offset: 0x1141018 VA: 0x1141018
	public static MD4 Create() { }
}

// Namespace: Mono.Security.Cryptography
internal class MD4Managed : MD4 // TypeDefIndex: 65
{
	// Fields
	private uint[] state; // 0x18
	private byte[] buffer; // 0x1C
	private uint[] count; // 0x20
	private uint[] x; // 0x24
	private byte[] digest; // 0x28

	// Methods

	// RVA: 0x1141074 Offset: 0x1141074 VA: 0x1141074
	public void .ctor() { }

	// RVA: 0x1141190 Offset: 0x1141190 VA: 0x1141190 Slot: 16
	public override void Initialize() { }

	// RVA: 0x11412F8 Offset: 0x11412F8 VA: 0x11412F8 Slot: 17
	protected override void HashCore(byte[] array, int ibStart, int cbSize) { }

	// RVA: 0x11424D0 Offset: 0x11424D0 VA: 0x11424D0 Slot: 18
	protected override byte[] HashFinal() { }

	// RVA: 0x1142770 Offset: 0x1142770 VA: 0x1142770
	private byte[] Padding(int nLength) { }

	// RVA: 0x114280C Offset: 0x114280C VA: 0x114280C
	private uint F(uint x, uint y, uint z) { }

	// RVA: 0x114281C Offset: 0x114281C VA: 0x114281C
	private uint G(uint x, uint y, uint z) { }

	// RVA: 0x1142830 Offset: 0x1142830 VA: 0x1142830
	private uint H(uint x, uint y, uint z) { }

	// RVA: 0x114283C Offset: 0x114283C VA: 0x114283C
	private uint ROL(uint x, byte n) { }

	// RVA: 0x114284C Offset: 0x114284C VA: 0x114284C
	private void FF(ref uint a, uint b, uint c, uint d, uint x, byte s) { }

	// RVA: 0x114288C Offset: 0x114288C VA: 0x114288C
	private void GG(ref uint a, uint b, uint c, uint d, uint x, byte s) { }

	// RVA: 0x11428DC Offset: 0x11428DC VA: 0x11428DC
	private void HH(ref uint a, uint b, uint c, uint d, uint x, byte s) { }

	// RVA: 0x11425F4 Offset: 0x11425F4 VA: 0x11425F4
	private void Encode(byte[] output, uint[] input) { }

	// RVA: 0x1142924 Offset: 0x1142924 VA: 0x1142924
	private void Decode(uint[] output, byte[] input, int index) { }

	// RVA: 0x11414C4 Offset: 0x11414C4 VA: 0x11414C4
	private void MD4Transform(uint[] state, byte[] block, int index) { }
}

// Namespace: Mono.Security.Cryptography
internal sealed class PKCS1 // TypeDefIndex: 66
{
	// Fields
	private static byte[] emptySHA1; // 0x0
	private static byte[] emptySHA256; // 0x4
	private static byte[] emptySHA384; // 0x8
	private static byte[] emptySHA512; // 0xC

	// Methods

	// RVA: 0x1082400 Offset: 0x1082400 VA: 0x1082400
	private static bool Compare(byte[] array1, byte[] array2) { }

	// RVA: 0x10824B8 Offset: 0x10824B8 VA: 0x10824B8
	private static byte[] xor(byte[] array1, byte[] array2) { }

	// RVA: 0x10825D4 Offset: 0x10825D4 VA: 0x10825D4
	private static byte[] GetEmptyHash(HashAlgorithm hash) { }

	// RVA: 0x1082828 Offset: 0x1082828 VA: 0x1082828
	public static byte[] I2OSP(int x, int size) { }

	// RVA: 0x10828F0 Offset: 0x10828F0 VA: 0x10828F0
	public static byte[] I2OSP(byte[] x, int size) { }

	// RVA: 0x108299C Offset: 0x108299C VA: 0x108299C
	public static byte[] OS2IP(byte[] x) { }

	// RVA: 0x1082A90 Offset: 0x1082A90 VA: 0x1082A90
	public static byte[] RSAEP(RSA rsa, byte[] m) { }

	// RVA: 0x1082AC8 Offset: 0x1082AC8 VA: 0x1082AC8
	public static byte[] RSAVP1(RSA rsa, byte[] s) { }

	// RVA: 0x1082B00 Offset: 0x1082B00 VA: 0x1082B00
	public static byte[] Encrypt_OAEP(RSA rsa, HashAlgorithm hash, RandomNumberGenerator rng, byte[] M) { }

	// RVA: 0x1083118 Offset: 0x1083118 VA: 0x1083118
	public static bool Verify_v15(RSA rsa, HashAlgorithm hash, byte[] hashValue, byte[] signature) { }

	// RVA: 0x10831B4 Offset: 0x10831B4 VA: 0x10831B4
	public static bool Verify_v15(RSA rsa, HashAlgorithm hash, byte[] hashValue, byte[] signature, bool tryNonStandardEncoding) { }

	// RVA: 0x1083420 Offset: 0x1083420 VA: 0x1083420
	public static byte[] Encode_v15(HashAlgorithm hash, byte[] hashValue, int emLength) { }

	// RVA: 0x1082ED4 Offset: 0x1082ED4 VA: 0x1082ED4
	public static byte[] MGF1(HashAlgorithm hash, byte[] mgfSeed, int maskLen) { }

	// RVA: 0x10837E0 Offset: 0x10837E0 VA: 0x10837E0
	internal static HashAlgorithm CreateFromName(string name) { }

	// RVA: 0x1083C84 Offset: 0x1083C84 VA: 0x1083C84
	private static void .cctor() { }
}

// Namespace: 
public class PKCS8.PrivateKeyInfo // TypeDefIndex: 67
{
	// Fields
	private int _version; // 0x8
	private string _algorithm; // 0xC
	private byte[] _key; // 0x10
	private ArrayList _list; // 0x14

	// Properties
	public byte[] PrivateKey { get; }

	// Methods

	// RVA: 0xFAD7FC Offset: 0xFAD7FC VA: 0xFAD7FC
	public void .ctor() { }

	// RVA: 0xFAD880 Offset: 0xFAD880 VA: 0xFAD880
	public void .ctor(byte[] data) { }

	// RVA: 0xFADBBC Offset: 0xFADBBC VA: 0xFADBBC
	public byte[] get_PrivateKey() { }

	// RVA: 0xFAD8A4 Offset: 0xFAD8A4 VA: 0xFAD8A4
	private void Decode(byte[] data) { }

	// RVA: 0xFADC5C Offset: 0xFADC5C VA: 0xFADC5C
	private static byte[] RemoveLeadingZero(byte[] bigInt) { }

	// RVA: 0xFADD30 Offset: 0xFADD30 VA: 0xFADD30
	private static byte[] Normalize(byte[] bigInt, int length) { }

	// RVA: 0xFADDF0 Offset: 0xFADDF0 VA: 0xFADDF0
	public static RSA DecodeRSA(byte[] keypair) { }

	// RVA: 0xFAE374 Offset: 0xFAE374 VA: 0xFAE374
	public static DSA DecodeDSA(byte[] privateKey, DSAParameters dsaParameters) { }
}

// Namespace: 
public class PKCS8.EncryptedPrivateKeyInfo // TypeDefIndex: 68
{
	// Fields
	private string _algorithm; // 0x8
	private byte[] _salt; // 0xC
	private int _iterations; // 0x10
	private byte[] _data; // 0x14

	// Properties
	public string Algorithm { get; }
	public byte[] EncryptedData { get; }
	public byte[] Salt { get; }
	public int IterationCount { get; }

	// Methods

	// RVA: 0xFAD270 Offset: 0xFAD270 VA: 0xFAD270
	public void .ctor() { }

	// RVA: 0xFAD278 Offset: 0xFAD278 VA: 0xFAD278
	public void .ctor(byte[] data) { }

	// RVA: 0xFAD63C Offset: 0xFAD63C VA: 0xFAD63C
	public string get_Algorithm() { }

	// RVA: 0xFAD644 Offset: 0xFAD644 VA: 0xFAD644
	public byte[] get_EncryptedData() { }

	// RVA: 0xFAD6E4 Offset: 0xFAD6E4 VA: 0xFAD6E4
	public byte[] get_Salt() { }

	// RVA: 0xFAD7F4 Offset: 0xFAD7F4 VA: 0xFAD7F4
	public int get_IterationCount() { }

	// RVA: 0xFAD2A0 Offset: 0xFAD2A0 VA: 0xFAD2A0
	private void Decode(byte[] data) { }
}

// Namespace: Mono.Security.Cryptography
internal sealed class PKCS8 // TypeDefIndex: 69
{}

// Namespace: Mono.Security.Cryptography
internal abstract class RC4 : SymmetricAlgorithm // TypeDefIndex: 70
{
	// Fields
	private static KeySizes[] s_legalBlockSizes; // 0x0
	private static KeySizes[] s_legalKeySizes; // 0x4

	// Properties
	public override byte[] IV { get; set; }

	// Methods

	// RVA: 0x1306008 Offset: 0x1306008 VA: 0x1306008
	public void .ctor() { }

	// RVA: 0x13060C4 Offset: 0x13060C4 VA: 0x13060C4 Slot: 9
	public override byte[] get_IV() { }

	// RVA: 0x1306118 Offset: 0x1306118 VA: 0x1306118 Slot: 10
	public override void set_IV(byte[] value) { }

	// RVA: 0x130611C Offset: 0x130611C VA: 0x130611C
	public static RC4 Create() { }

	// RVA: 0x130617C Offset: 0x130617C VA: 0x130617C
	private static void .cctor() { }
}

// Namespace: 
public sealed class RSAManaged.KeyGeneratedEventHandler : MulticastDelegate // TypeDefIndex: 71
{
	// Methods

	// RVA: 0x52E5D4 Offset: 0x52E5D4 VA: 0x52E5D4
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x52E63C Offset: 0x52E63C VA: 0x52E63C Slot: 12
	public virtual void Invoke(object sender, EventArgs e) { }

	// RVA: 0x52EA7C Offset: 0x52EA7C VA: 0x52EA7C Slot: 13
	public virtual IAsyncResult BeginInvoke(object sender, EventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0x52EAB4 Offset: 0x52EAB4 VA: 0x52EAB4 Slot: 14
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Cryptography
internal class RSAManaged : RSA // TypeDefIndex: 72
{
	// Fields
	private bool isCRTpossible; // 0x10
	private bool keyBlinding; // 0x11
	private bool keypairGenerated; // 0x12
	private bool m_disposed; // 0x13
	private BigInteger d; // 0x14
	private BigInteger p; // 0x18
	private BigInteger q; // 0x1C
	private BigInteger dp; // 0x20
	private BigInteger dq; // 0x24
	private BigInteger qInv; // 0x28
	private BigInteger n; // 0x2C
	private BigInteger e; // 0x30
	[CompilerGeneratedAttribute] // RVA: 0x3ED1E0 Offset: 0x3ED1E0 VA: 0x3ED1E0
	private RSAManaged.KeyGeneratedEventHandler KeyGenerated; // 0x34

	// Properties
	public override int KeySize { get; }
	public bool PublicOnly { get; }

	// Methods

	// RVA: 0xC29BE0 Offset: 0xC29BE0 VA: 0xC29BE0
	public void .ctor(int keySize) { }

	// RVA: 0xC2B23C Offset: 0xC2B23C VA: 0xC2B23C Slot: 1
	protected override void Finalize() { }

	// RVA: 0xC2B2B0 Offset: 0xC2B2B0 VA: 0xC2B2B0
	private void GenerateKeyPair() { }

	// RVA: 0xC2B6C8 Offset: 0xC2B6C8 VA: 0xC2B6C8 Slot: 6
	public override int get_KeySize() { }

	// RVA: 0xC29E84 Offset: 0xC29E84 VA: 0xC29E84
	public bool get_PublicOnly() { }

	// RVA: 0xC2B780 Offset: 0xC2B780 VA: 0xC2B780 Slot: 11
	public override byte[] EncryptValue(byte[] rgb) { }

	// RVA: 0xC2B9BC Offset: 0xC2B9BC VA: 0xC2B9BC Slot: 12
	public override RSAParameters ExportParameters(bool includePrivateParameters) { }

	// RVA: 0xC2BEA8 Offset: 0xC2BEA8 VA: 0xC2BEA8 Slot: 13
	public override void ImportParameters(RSAParameters parameters) { }

	// RVA: 0xC2C57C Offset: 0xC2C57C VA: 0xC2C57C Slot: 5
	protected override void Dispose(bool disposing) { }

	[CompilerGeneratedAttribute] // RVA: 0x3EE364 Offset: 0x3EE364 VA: 0x3EE364
	// RVA: 0xC29D1C Offset: 0xC29D1C VA: 0xC29D1C
	public void add_KeyGenerated(RSAManaged.KeyGeneratedEventHandler value) { }

	[CompilerGeneratedAttribute] // RVA: 0x3EE374 Offset: 0x3EE374 VA: 0x3EE374
	// RVA: 0xC2C968 Offset: 0xC2C968 VA: 0xC2C968
	public void remove_KeyGenerated(RSAManaged.KeyGeneratedEventHandler value) { }

	// RVA: 0xC2CA14 Offset: 0xC2CA14 VA: 0xC2CA14 Slot: 9
	public override string ToXmlString(bool includePrivateParameters) { }

	// RVA: 0xC2B8E0 Offset: 0xC2B8E0 VA: 0xC2B8E0
	private byte[] GetPaddedValue(BigInteger value, int length) { }
}

// Namespace: Mono.Security.Cryptography
internal abstract class SymmetricTransform : ICryptoTransform, IDisposable // TypeDefIndex: 73
{
	// Fields
	protected SymmetricAlgorithm algo; // 0x8
	protected bool encrypt; // 0xC
	protected int BlockSizeByte; // 0x10
	protected byte[] temp; // 0x14
	protected byte[] temp2; // 0x18
	private byte[] workBuff; // 0x1C
	private byte[] workout; // 0x20
	protected PaddingMode padmode; // 0x24
	protected int FeedBackByte; // 0x28
	private bool m_disposed; // 0x2C
	protected bool lastBlock; // 0x2D
	private RandomNumberGenerator _rng; // 0x30

	// Properties
	public virtual bool CanTransformMultipleBlocks { get; }
	public virtual int InputBlockSize { get; }
	public virtual int OutputBlockSize { get; }
	private bool KeepLastBlock { get; }

	// Methods

	// RVA: 0x4FAD5C Offset: 0x4FAD5C VA: 0x4FAD5C
	public void .ctor(SymmetricAlgorithm symmAlgo, bool encryption, byte[] rgbIV) { }

	// RVA: 0x4FB0DC Offset: 0x4FB0DC VA: 0x4FB0DC Slot: 1
	protected override void Finalize() { }

	// RVA: 0x4FB150 Offset: 0x4FB150 VA: 0x4FB150 Slot: 9
	private void System.IDisposable.Dispose() { }

	// RVA: 0x4FB1E0 Offset: 0x4FB1E0 VA: 0x4FB1E0 Slot: 10
	protected virtual void Dispose(bool disposing) { }

	// RVA: 0x4FB260 Offset: 0x4FB260 VA: 0x4FB260 Slot: 11
	public virtual bool get_CanTransformMultipleBlocks() { }

	// RVA: 0x4FB268 Offset: 0x4FB268 VA: 0x4FB268 Slot: 12
	public virtual int get_InputBlockSize() { }

	// RVA: 0x4FB270 Offset: 0x4FB270 VA: 0x4FB270 Slot: 13
	public virtual int get_OutputBlockSize() { }

	// RVA: 0x4FB278 Offset: 0x4FB278 VA: 0x4FB278 Slot: 14
	protected virtual void Transform(byte[] input, byte[] output) { }

	// RVA: -1 Offset: -1 Slot: 15
	protected abstract void ECB(byte[] input, byte[] output);

	// RVA: 0x4FB420 Offset: 0x4FB420 VA: 0x4FB420 Slot: 16
	protected virtual void CBC(byte[] input, byte[] output) { }

	// RVA: 0x4FB5F0 Offset: 0x4FB5F0 VA: 0x4FB5F0 Slot: 17
	protected virtual void CFB(byte[] input, byte[] output) { }

	// RVA: 0x4FB850 Offset: 0x4FB850 VA: 0x4FB850 Slot: 18
	protected virtual void OFB(byte[] input, byte[] output) { }

	// RVA: 0x4FB8B0 Offset: 0x4FB8B0 VA: 0x4FB8B0 Slot: 19
	protected virtual void CTS(byte[] input, byte[] output) { }

	// RVA: 0x4FB910 Offset: 0x4FB910 VA: 0x4FB910
	private void CheckInput(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x4FBA8C Offset: 0x4FBA8C VA: 0x4FBA8C Slot: 20
	public virtual int TransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset) { }

	// RVA: 0x4FBCE4 Offset: 0x4FBCE4 VA: 0x4FBCE4
	private bool get_KeepLastBlock() { }

	// RVA: 0x4FBD08 Offset: 0x4FBD08 VA: 0x4FBD08
	private int InternalTransformBlock(byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset) { }

	// RVA: 0x4FBEF4 Offset: 0x4FBEF4 VA: 0x4FBEF4
	private void Random(byte[] buffer, int start, int length) { }

	// RVA: 0x4FBFD0 Offset: 0x4FBFD0 VA: 0x4FBFD0
	private void ThrowBadPaddingException(PaddingMode padding, int length, int position) { }

	// RVA: 0x4FC140 Offset: 0x4FC140 VA: 0x4FC140 Slot: 21
	protected virtual byte[] FinalEncrypt(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x4FC450 Offset: 0x4FC450 VA: 0x4FC450 Slot: 22
	protected virtual byte[] FinalDecrypt(byte[] inputBuffer, int inputOffset, int inputCount) { }

	// RVA: 0x4FC74C Offset: 0x4FC74C VA: 0x4FC74C Slot: 23
	public virtual byte[] TransformFinalBlock(byte[] inputBuffer, int inputOffset, int inputCount) { }
}

// Namespace: 
public sealed class DSAManaged.KeyGeneratedEventHandler : MulticastDelegate // TypeDefIndex: 74
{
	// Methods

	// RVA: 0xFA2984 Offset: 0xFA2984 VA: 0xFA2984
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0xFA29EC Offset: 0xFA29EC VA: 0xFA29EC Slot: 12
	public virtual void Invoke(object sender, EventArgs e) { }

	// RVA: 0xFA2E2C Offset: 0xFA2E2C VA: 0xFA2E2C Slot: 13
	public virtual IAsyncResult BeginInvoke(object sender, EventArgs e, AsyncCallback callback, object object) { }

	// RVA: 0xFA2E64 Offset: 0xFA2E64 VA: 0xFA2E64 Slot: 14
	public virtual void EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Security.Cryptography
internal class DSAManaged : DSA // TypeDefIndex: 75
{
	// Fields
	private bool keypairGenerated; // 0x10
	private bool m_disposed; // 0x11
	private BigInteger p; // 0x14
	private BigInteger q; // 0x18
	private BigInteger g; // 0x1C
	private BigInteger x; // 0x20
	private BigInteger y; // 0x24
	private BigInteger j; // 0x28
	private BigInteger seed; // 0x2C
	private int counter; // 0x30
	private bool j_missing; // 0x34
	private RandomNumberGenerator rng; // 0x38
	[CompilerGeneratedAttribute] // RVA: 0x3ED1F0 Offset: 0x3ED1F0 VA: 0x3ED1F0
	private DSAManaged.KeyGeneratedEventHandler KeyGenerated; // 0x3C

	// Properties
	private RandomNumberGenerator Random { get; }
	public override int KeySize { get; }
	public bool PublicOnly { get; }

	// Methods

	// RVA: 0x49E53C Offset: 0x49E53C VA: 0x49E53C
	public void .ctor(int dwKeySize) { }

	// RVA: 0x49EAD4 Offset: 0x49EAD4 VA: 0x49EAD4 Slot: 1
	protected override void Finalize() { }

	// RVA: 0x49EB48 Offset: 0x49EB48 VA: 0x49EB48
	private void Generate() { }

	// RVA: 0x49F368 Offset: 0x49F368 VA: 0x49F368
	private void GenerateKeyPair() { }

	// RVA: 0x49F4CC Offset: 0x49F4CC VA: 0x49F4CC
	private void add(byte[] a, byte[] b, int value) { }

	// RVA: 0x49EB90 Offset: 0x49EB90 VA: 0x49EB90
	private void GenerateParams(int keyLength) { }

	// RVA: 0x49F5BC Offset: 0x49F5BC VA: 0x49F5BC
	private RandomNumberGenerator get_Random() { }

	// RVA: 0x49F5F4 Offset: 0x49F5F4 VA: 0x49F5F4 Slot: 6
	public override int get_KeySize() { }

	// RVA: 0x49E7D8 Offset: 0x49E7D8 VA: 0x49E7D8
	public bool get_PublicOnly() { }

	// RVA: 0x49F62C Offset: 0x49F62C VA: 0x49F62C
	private byte[] NormalizeArray(byte[] array) { }

	// RVA: 0x49F6E8 Offset: 0x49F6E8 VA: 0x49F6E8 Slot: 10
	public override DSAParameters ExportParameters(bool includePrivateParameters) { }

	// RVA: 0x49FA7C Offset: 0x49FA7C VA: 0x49FA7C Slot: 11
	public override void ImportParameters(DSAParameters parameters) { }

	// RVA: 0x49FE14 Offset: 0x49FE14 VA: 0x49FE14 Slot: 5
	protected override void Dispose(bool disposing) { }

	[CompilerGeneratedAttribute] // RVA: 0x3EE384 Offset: 0x3EE384 VA: 0x3EE384
	// RVA: 0x49E664 Offset: 0x49E664 VA: 0x49E664
	public void add_KeyGenerated(DSAManaged.KeyGeneratedEventHandler value) { }

	[CompilerGeneratedAttribute] // RVA: 0x3EE394 Offset: 0x3EE394 VA: 0x3EE394
	// RVA: 0x4A0190 Offset: 0x4A0190 VA: 0x4A0190
	public void remove_KeyGenerated(DSAManaged.KeyGeneratedEventHandler value) { }
}

// Namespace: 
public enum BigInteger.Sign // TypeDefIndex: 76
{
	// Fields
	public int value__; // 0x0
	public const BigInteger.Sign Negative = -1;
	public const BigInteger.Sign Zero = 0;
	public const BigInteger.Sign Positive = 1;
}

// Namespace: 
internal sealed class BigInteger.ModulusRing // TypeDefIndex: 77
{
	// Fields
	private BigInteger mod; // 0x8
	private BigInteger constant; // 0xC

	// Methods

	// RVA: 0xF9ED5C Offset: 0xF9ED5C VA: 0xF9ED5C
	public void .ctor(BigInteger modulus) { }

	// RVA: 0xF9F108 Offset: 0xF9F108 VA: 0xF9F108
	public void BarrettReduction(BigInteger x) { }

	// RVA: 0xF9F4B0 Offset: 0xF9F4B0 VA: 0xF9F4B0
	public BigInteger Multiply(BigInteger a, BigInteger b) { }

	// RVA: 0xF9EEA4 Offset: 0xF9EEA4 VA: 0xF9EEA4
	public BigInteger Difference(BigInteger a, BigInteger b) { }

	// RVA: 0xF9F6D0 Offset: 0xF9F6D0 VA: 0xF9F6D0
	public BigInteger Pow(BigInteger a, BigInteger k) { }

	// RVA: 0xF9F814 Offset: 0xF9F814 VA: 0xF9F814
	public BigInteger Pow(uint b, BigInteger exp) { }
}

// Namespace: 
private sealed class BigInteger.Kernel // TypeDefIndex: 78
{
	// Methods

	// RVA: 0xF9C228 Offset: 0xF9C228 VA: 0xF9C228
	public static BigInteger Subtract(BigInteger big, BigInteger small) { }

	// RVA: 0xF9C4F8 Offset: 0xF9C4F8 VA: 0xF9C4F8
	public static void MinusEq(BigInteger big, BigInteger small) { }

	// RVA: 0xF9C6E4 Offset: 0xF9C6E4 VA: 0xF9C6E4
	public static void PlusEq(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xF9C99C Offset: 0xF9C99C VA: 0xF9C99C
	public static BigInteger.Sign Compare(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xF9CC2C Offset: 0xF9CC2C VA: 0xF9CC2C
	public static uint SingleByteDivideInPlace(BigInteger n, uint d) { }

	// RVA: 0xF9CD08 Offset: 0xF9CD08 VA: 0xF9CD08
	public static uint DwordMod(BigInteger n, uint d) { }

	// RVA: 0xF9CD98 Offset: 0xF9CD98 VA: 0xF9CD98
	public static BigInteger[] DwordDivMod(BigInteger n, uint d) { }

	// RVA: 0xF9D040 Offset: 0xF9D040 VA: 0xF9D040
	public static BigInteger[] multiByteDivide(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xF9D9C0 Offset: 0xF9D9C0 VA: 0xF9D9C0
	public static BigInteger LeftShift(BigInteger bi, int n) { }

	// RVA: 0xF9DCF0 Offset: 0xF9DCF0 VA: 0xF9DCF0
	public static BigInteger RightShift(BigInteger bi, int n) { }

	// RVA: 0xF9DF78 Offset: 0xF9DF78 VA: 0xF9DF78
	public static BigInteger MultiplyByDword(BigInteger n, uint f) { }

	// RVA: 0xF9E0F0 Offset: 0xF9E0F0 VA: 0xF9E0F0
	public static void Multiply(uint[] x, uint xOffset, uint xLen, uint[] y, uint yOffset, uint yLen, uint[] d, uint dOffset) { }

	// RVA: 0xF9E204 Offset: 0xF9E204 VA: 0xF9E204
	public static void MultiplyMod2p32pmod(uint[] x, int xOffset, int xLen, uint[] y, int yOffest, int yLen, uint[] d, int dOffset, int mod) { }

	// RVA: 0xF9E368 Offset: 0xF9E368 VA: 0xF9E368
	public static uint modInverse(BigInteger bi, uint modulus) { }

	// RVA: 0xF9E45C Offset: 0xF9E45C VA: 0xF9E45C
	public static BigInteger modInverse(BigInteger bi, BigInteger modulus) { }
}

// Namespace: Mono.Math
internal class BigInteger // TypeDefIndex: 79
{
	// Fields
	private uint length; // 0x8
	private uint[] data; // 0xC
	internal static readonly uint[] smallPrimes; // 0x0
	private static RandomNumberGenerator rng; // 0x4

	// Properties
	private static RandomNumberGenerator Rng { get; }

	// Methods

	// RVA: 0xD8AFB8 Offset: 0xD8AFB8 VA: 0xD8AFB8
	public void .ctor(BigInteger.Sign sign, uint len) { }

	// RVA: 0xD8B03C Offset: 0xD8B03C VA: 0xD8B03C
	public void .ctor(BigInteger bi) { }

	// RVA: 0xD8B11C Offset: 0xD8B11C VA: 0xD8B11C
	public void .ctor(BigInteger bi, uint len) { }

	// RVA: 0xD8B230 Offset: 0xD8B230 VA: 0xD8B230
	public void .ctor(byte[] inData) { }

	// RVA: 0xD8B77C Offset: 0xD8B77C VA: 0xD8B77C
	public void .ctor(uint ui) { }

	// RVA: 0xD8B828 Offset: 0xD8B828 VA: 0xD8B828
	public static BigInteger op_Implicit(uint value) { }

	// RVA: 0xD8B88C Offset: 0xD8B88C VA: 0xD8B88C
	public static BigInteger op_Implicit(int value) { }

	// RVA: 0xD8B950 Offset: 0xD8B950 VA: 0xD8B950
	public static BigInteger op_Subtraction(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8BB80 Offset: 0xD8BB80 VA: 0xD8BB80
	public static uint op_Modulus(BigInteger bi, uint ui) { }

	// RVA: 0xD8BB88 Offset: 0xD8BB88 VA: 0xD8BB88
	public static BigInteger op_Modulus(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8BBC8 Offset: 0xD8BBC8 VA: 0xD8BBC8
	public static BigInteger op_Division(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8BC08 Offset: 0xD8BC08 VA: 0xD8BC08
	public static BigInteger op_Multiply(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8BE84 Offset: 0xD8BE84 VA: 0xD8BE84
	public static BigInteger op_Multiply(BigInteger bi, int i) { }

	// RVA: 0xD8BFA8 Offset: 0xD8BFA8 VA: 0xD8BFA8
	public static BigInteger op_LeftShift(BigInteger bi1, int shiftVal) { }

	// RVA: 0xD8BFB0 Offset: 0xD8BFB0 VA: 0xD8BFB0
	public static BigInteger op_RightShift(BigInteger bi1, int shiftVal) { }

	// RVA: 0xD8BFB8 Offset: 0xD8BFB8 VA: 0xD8BFB8
	private static RandomNumberGenerator get_Rng() { }

	// RVA: 0xD8C0A0 Offset: 0xD8C0A0 VA: 0xD8C0A0
	public static BigInteger GenerateRandom(int bits, RandomNumberGenerator rng) { }

	// RVA: 0xD8C4D0 Offset: 0xD8C4D0 VA: 0xD8C4D0
	public static BigInteger GenerateRandom(int bits) { }

	// RVA: 0xD8C54C Offset: 0xD8C54C VA: 0xD8C54C
	public void Randomize(RandomNumberGenerator rng) { }

	// RVA: 0xD8C7D4 Offset: 0xD8C7D4 VA: 0xD8C7D4
	public void Randomize() { }

	// RVA: 0xD8C748 Offset: 0xD8C748 VA: 0xD8C748
	public int BitCount() { }

	// RVA: 0xD8C850 Offset: 0xD8C850 VA: 0xD8C850
	public bool TestBit(uint bitNum) { }

	// RVA: 0xD8C8A4 Offset: 0xD8C8A4 VA: 0xD8C8A4
	public bool TestBit(int bitNum) { }

	// RVA: 0xD8C998 Offset: 0xD8C998 VA: 0xD8C998
	public void SetBit(uint bitNum) { }

	// RVA: 0xD8C9A0 Offset: 0xD8C9A0 VA: 0xD8C9A0
	public void SetBit(uint bitNum, bool value) { }

	// RVA: 0xD8CA0C Offset: 0xD8CA0C VA: 0xD8CA0C
	public int LowestSetBit() { }

	// RVA: 0xD8CAB0 Offset: 0xD8CAB0 VA: 0xD8CAB0
	public byte[] GetBytes() { }

	// RVA: 0xD8BB04 Offset: 0xD8BB04 VA: 0xD8BB04
	public static bool op_Equality(BigInteger bi1, uint ui) { }

	// RVA: 0xD8CC68 Offset: 0xD8CC68 VA: 0xD8CC68
	public static bool op_Inequality(BigInteger bi1, uint ui) { }

	// RVA: 0xD8CCE0 Offset: 0xD8CCE0 VA: 0xD8CCE0
	public static bool op_Equality(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8CDCC Offset: 0xD8CDCC VA: 0xD8CDCC
	public static bool op_Inequality(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8CEB8 Offset: 0xD8CEB8 VA: 0xD8CEB8
	public static bool op_GreaterThan(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8CEDC Offset: 0xD8CEDC VA: 0xD8CEDC
	public static bool op_LessThan(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8CEF4 Offset: 0xD8CEF4 VA: 0xD8CEF4
	public static bool op_GreaterThanOrEqual(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8CF10 Offset: 0xD8CF10 VA: 0xD8CF10
	public static bool op_LessThanOrEqual(BigInteger bi1, BigInteger bi2) { }

	// RVA: 0xD8CF34 Offset: 0xD8CF34 VA: 0xD8CF34
	public string ToString(uint radix) { }

	// RVA: 0xD8CF94 Offset: 0xD8CF94 VA: 0xD8CF94
	public string ToString(uint radix, string characterSet) { }

	// RVA: 0xD8B700 Offset: 0xD8B700 VA: 0xD8B700
	private void Normalize() { }

	// RVA: 0xD8D238 Offset: 0xD8D238 VA: 0xD8D238
	public void Clear() { }

	// RVA: 0xD8D2A0 Offset: 0xD8D2A0 VA: 0xD8D2A0 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xD8D30C Offset: 0xD8D30C VA: 0xD8D30C Slot: 3
	public override string ToString() { }

	// RVA: 0xD8D314 Offset: 0xD8D314 VA: 0xD8D314 Slot: 0
	public override bool Equals(object o) { }

	// RVA: 0xD8D4B4 Offset: 0xD8D4B4 VA: 0xD8D4B4
	public BigInteger ModInverse(BigInteger modulus) { }

	// RVA: 0xD8D4BC Offset: 0xD8D4BC VA: 0xD8D4BC
	public BigInteger ModPow(BigInteger exp, BigInteger n) { }

	// RVA: 0xD8D548 Offset: 0xD8D548 VA: 0xD8D548
	public bool IsProbablePrime() { }

	// RVA: 0xD8D7A8 Offset: 0xD8D7A8 VA: 0xD8D7A8
	public static BigInteger GeneratePseudoPrime(int bits) { }

	// RVA: 0xD8D82C Offset: 0xD8D82C VA: 0xD8D82C
	public void Incr2() { }

	// RVA: 0xD8D970 Offset: 0xD8D970 VA: 0xD8D970
	private static void .cctor() { }
}

// Namespace: Mono.Math.Prime
internal enum ConfidenceFactor // TypeDefIndex: 80
{
	// Fields
	public int value__; // 0x0
	public const ConfidenceFactor ExtraLow = 0;
	public const ConfidenceFactor Low = 1;
	public const ConfidenceFactor Medium = 2;
	public const ConfidenceFactor High = 3;
	public const ConfidenceFactor ExtraHigh = 4;
	public const ConfidenceFactor Provable = 5;
}

// Namespace: Mono.Math.Prime
internal sealed class PrimalityTest : MulticastDelegate // TypeDefIndex: 81
{
	// Methods

	// RVA: 0x12FFD94 Offset: 0x12FFD94 VA: 0x12FFD94
	public void .ctor(object object, IntPtr method) { }

	// RVA: 0x12FFDFC Offset: 0x12FFDFC VA: 0x12FFDFC Slot: 12
	public virtual bool Invoke(BigInteger bi, ConfidenceFactor confidence) { }

	// RVA: 0x1300244 Offset: 0x1300244 VA: 0x1300244 Slot: 13
	public virtual IAsyncResult BeginInvoke(BigInteger bi, ConfidenceFactor confidence, AsyncCallback callback, object object) { }

	// RVA: 0x13002D8 Offset: 0x13002D8 VA: 0x13002D8 Slot: 14
	public virtual bool EndInvoke(IAsyncResult result) { }
}

// Namespace: Mono.Math.Prime
internal sealed class PrimalityTests // TypeDefIndex: 82
{
	// Methods

	// RVA: 0x130030C Offset: 0x130030C VA: 0x130030C
	private static int GetSPPRounds(BigInteger bi, ConfidenceFactor confidence) { }

	// RVA: 0x13004B8 Offset: 0x13004B8 VA: 0x13004B8
	public static bool Test(BigInteger n, ConfidenceFactor confidence) { }

	// RVA: 0x13007A8 Offset: 0x13007A8 VA: 0x13007A8
	public static bool RabinMillerTest(BigInteger n, ConfidenceFactor confidence) { }

	// RVA: 0x1300508 Offset: 0x1300508 VA: 0x1300508
	public static bool SmallPrimeSppTest(BigInteger bi, ConfidenceFactor confidence) { }
}

// Namespace: Mono.Math.Prime.Generator
internal abstract class PrimeGeneratorBase // TypeDefIndex: 83
{
	// Properties
	public virtual ConfidenceFactor Confidence { get; }
	public virtual PrimalityTest PrimalityTest { get; }
	public virtual int TrialDivisionBounds { get; }

	// Methods

	// RVA: 0x1300B84 Offset: 0x1300B84 VA: 0x1300B84 Slot: 4
	public virtual ConfidenceFactor get_Confidence() { }

	// RVA: 0x1300B8C Offset: 0x1300B8C VA: 0x1300B8C Slot: 5
	public virtual PrimalityTest get_PrimalityTest() { }

	// RVA: 0x1300C10 Offset: 0x1300C10 VA: 0x1300C10 Slot: 6
	public virtual int get_TrialDivisionBounds() { }

	// RVA: -1 Offset: -1 Slot: 7
	public abstract BigInteger GenerateNewPrime(int bits);

	// RVA: 0x1300C18 Offset: 0x1300C18 VA: 0x1300C18
	protected void .ctor() { }
}

// Namespace: Mono.Math.Prime.Generator
internal class SequentialSearchPrimeGeneratorBase : PrimeGeneratorBase // TypeDefIndex: 84
{
	// Methods

	// RVA: 0x112A6DC Offset: 0x112A6DC VA: 0x112A6DC Slot: 8
	protected virtual BigInteger GenerateSearchBase(int bits, object context) { }

	// RVA: 0x112A778 Offset: 0x112A778 VA: 0x112A778 Slot: 7
	public override BigInteger GenerateNewPrime(int bits) { }

	// RVA: 0x112A78C Offset: 0x112A78C VA: 0x112A78C Slot: 9
	public virtual BigInteger GenerateNewPrime(int bits, object context) { }

	// RVA: 0x112AB10 Offset: 0x112AB10 VA: 0x112AB10 Slot: 10
	protected virtual bool IsPrimeAcceptable(BigInteger bi, object context) { }

	// RVA: 0x112AB18 Offset: 0x112AB18 VA: 0x112AB18
	public void .ctor() { }
}

// Namespace: Microsoft.Win32
internal interface IRegistryApi // TypeDefIndex: 85
{
	// Methods

	// RVA: -1 Offset: -1 Slot: 0
	public abstract RegistryKey OpenSubKey(RegistryKey rkey, string keyname, bool writtable);

	// RVA: -1 Offset: -1 Slot: 1
	public abstract void Flush(RegistryKey rkey);

	// RVA: -1 Offset: -1 Slot: 2
	public abstract void Close(RegistryKey rkey);

	// RVA: -1 Offset: -1 Slot: 3
	public abstract object GetValue(RegistryKey rkey, string name, object default_value, RegistryValueOptions options);

	// RVA: -1 Offset: -1 Slot: 4
	public abstract string[] GetSubKeyNames(RegistryKey rkey);

	// RVA: -1 Offset: -1 Slot: 5
	public abstract string ToString(RegistryKey rkey);

	// RVA: -1 Offset: -1 Slot: 6
	public abstract IntPtr GetHandle(RegistryKey key);
}

// Namespace: Microsoft.Win32
[ComVisibleAttribute] // RVA: 0x3E6754 Offset: 0x3E6754 VA: 0x3E6754
public static class Registry // TypeDefIndex: 86
{
	// Fields
	public static readonly RegistryKey ClassesRoot; // 0x0
	public static readonly RegistryKey CurrentConfig; // 0x4
	public static readonly RegistryKey CurrentUser; // 0x8
	[ObsoleteAttribute] // RVA: 0x3ED200 Offset: 0x3ED200 VA: 0x3ED200
	public static readonly RegistryKey DynData; // 0xC
	public static readonly RegistryKey LocalMachine; // 0x10
	public static readonly RegistryKey PerformanceData; // 0x14
	public static readonly RegistryKey Users; // 0x18

	// Methods

	// RVA: 0xC34934 Offset: 0xC34934 VA: 0xC34934
	private static void .cctor() { }
}

// Namespace: Microsoft.Win32
[ComVisibleAttribute] // RVA: 0x3E6768 Offset: 0x3E6768 VA: 0x3E6768
[Serializable]
public enum RegistryHive // TypeDefIndex: 87
{
	// Fields
	public int value__; // 0x0
	public const RegistryHive ClassesRoot = -2147483648;
	public const RegistryHive CurrentConfig = -2147483643;
	public const RegistryHive CurrentUser = -2147483647;
	public const RegistryHive DynData = -2147483642;
	public const RegistryHive LocalMachine = -2147483646;
	public const RegistryHive PerformanceData = -2147483644;
	public const RegistryHive Users = -2147483645;
}

// Namespace: Microsoft.Win32
[ComVisibleAttribute] // RVA: 0x3E677C Offset: 0x3E677C VA: 0x3E677C
public sealed class RegistryKey : MarshalByRefObject, IDisposable // TypeDefIndex: 88
{
	// Fields
	private object handle; // 0xC
	private SafeRegistryHandle safe_handle; // 0x10
	private object hive; // 0x14
	private readonly string qname; // 0x18
	private readonly bool isRemoteRoot; // 0x1C
	private readonly bool isWritable; // 0x1D
	private static readonly IRegistryApi RegistryApi; // 0x0

	// Properties
	public string Name { get; }
	[MonoTODOAttribute] // RVA: 0x3F157C Offset: 0x3F157C VA: 0x3F157C
	[ComVisibleAttribute] // RVA: 0x3F157C Offset: 0x3F157C VA: 0x3F157C
	public SafeRegistryHandle Handle { get; }
	internal bool IsRoot { get; }
	internal RegistryHive Hive { get; }
	internal object InternalHandle { get; }

	// Methods

	// RVA: 0xC34BE0 Offset: 0xC34BE0 VA: 0xC34BE0
	private static void .cctor() { }

	// RVA: 0xC34B9C Offset: 0xC34B9C VA: 0xC34B9C
	internal void .ctor(RegistryHive hiveId) { }

	// RVA: 0xC34CF0 Offset: 0xC34CF0 VA: 0xC34CF0
	internal void .ctor(RegistryHive hiveId, IntPtr keyHandle, bool remoteRoot) { }

	// RVA: 0xC34F8C Offset: 0xC34F8C VA: 0xC34F8C
	internal void .ctor(object data, string keyName, bool writable) { }

	// RVA: 0xC34FD4 Offset: 0xC34FD4 VA: 0xC34FD4
	internal static bool IsEquals(RegistryKey a, RegistryKey b) { }

	// RVA: 0xC35080 Offset: 0xC35080 VA: 0xC35080 Slot: 6
	public void Dispose() { }

	// RVA: 0xC35258 Offset: 0xC35258 VA: 0xC35258
	public string get_Name() { }

	// RVA: 0xC35260 Offset: 0xC35260 VA: 0xC35260
	public void Flush() { }

	// RVA: 0xC35100 Offset: 0xC35100 VA: 0xC35100
	public void Close() { }

	// RVA: 0xC35380 Offset: 0xC35380 VA: 0xC35380
	public SafeRegistryHandle get_Handle() { }

	// RVA: 0xC35568 Offset: 0xC35568 VA: 0xC35568
	public RegistryKey OpenSubKey(string name) { }

	// RVA: 0xC35570 Offset: 0xC35570 VA: 0xC35570
	public RegistryKey OpenSubKey(string name, bool writable) { }

	// RVA: 0xC35788 Offset: 0xC35788 VA: 0xC35788
	public object GetValue(string name) { }

	// RVA: 0xC35790 Offset: 0xC35790 VA: 0xC35790
	public object GetValue(string name, object defaultValue) { }

	// RVA: 0xC358CC Offset: 0xC358CC VA: 0xC358CC
	public string[] GetSubKeyNames() { }

	// RVA: 0xC359E4 Offset: 0xC359E4 VA: 0xC359E4 Slot: 3
	public override string ToString() { }

	// RVA: 0xC35370 Offset: 0xC35370 VA: 0xC35370
	internal bool get_IsRoot() { }

	// RVA: 0xC35AFC Offset: 0xC35AFC VA: 0xC35AFC
	internal RegistryHive get_Hive() { }

	// RVA: 0xC35BB8 Offset: 0xC35BB8 VA: 0xC35BB8
	internal object get_InternalHandle() { }

	// RVA: 0xC354FC Offset: 0xC354FC VA: 0xC354FC
	private void AssertKeyStillValid() { }

	// RVA: 0xC3570C Offset: 0xC3570C VA: 0xC3570C
	private void AssertKeyNameLength(string name) { }

	// RVA: 0xC35BC0 Offset: 0xC35BC0 VA: 0xC35BC0
	internal static string DecodeString(byte[] data) { }

	// RVA: 0xC35C98 Offset: 0xC35C98 VA: 0xC35C98
	internal static IOException CreateMarkedForDeletionException() { }

	// RVA: 0xC34E18 Offset: 0xC34E18 VA: 0xC34E18
	private static string GetHiveName(RegistryHive hive) { }
}

// Namespace: Microsoft.Win32
[ComVisibleAttribute] // RVA: 0x3E6790 Offset: 0x3E6790 VA: 0x3E6790
public enum RegistryValueKind // TypeDefIndex: 89
{
	// Fields
	public int value__; // 0x0
	public const RegistryValueKind Unknown = 0;
	public const RegistryValueKind String = 1;
	public const RegistryValueKind ExpandString = 2;
	public const RegistryValueKind Binary = 3;
	public const RegistryValueKind DWord = 4;
	public const RegistryValueKind MultiString = 7;
	public const RegistryValueKind QWord = 11;
	public const RegistryValueKind None = -1;
}

// Namespace: Microsoft.Win32
[FlagsAttribute] // RVA: 0x3E67A4 Offset: 0x3E67A4 VA: 0x3E67A4
public enum RegistryValueOptions // TypeDefIndex: 90
{
	// Fields
	public int value__; // 0x0
	public const RegistryValueOptions None = 0;
	public const RegistryValueOptions DoNotExpandEnvironmentNames = 1;
}

// Namespace: Microsoft.Win32
internal class ExpandString // TypeDefIndex: 91
{
	// Fields
	private string value; // 0x8

	// Methods

	// RVA: 0xE202E4 Offset: 0xE202E4 VA: 0xE202E4
	public void .ctor(string s) { }

	// RVA: 0xE20310 Offset: 0xE20310 VA: 0xE20310 Slot: 3
	public override string ToString() { }

	// RVA: 0xE20318 Offset: 0xE20318 VA: 0xE20318
	public string Expand() { }
}

// Namespace: Microsoft.Win32
internal class RegistryKeyComparer : IEqualityComparer // TypeDefIndex: 92
{
	// Methods

	// RVA: 0xC35CF8 Offset: 0xC35CF8 VA: 0xC35CF8 Slot: 4
	public bool Equals(object x, object y) { }

	// RVA: 0xC35DC8 Offset: 0xC35DC8 VA: 0xC35DC8 Slot: 5
	public int GetHashCode(object obj) { }

	// RVA: 0xC35E74 Offset: 0xC35E74 VA: 0xC35E74
	public void .ctor() { }
}

// Namespace: Microsoft.Win32
internal class KeyHandler // TypeDefIndex: 93
{
	// Fields
	private static Hashtable key_to_handler; // 0x0
	private static Hashtable dir_to_handler; // 0x4
	public string Dir; // 0x8
	private string ActualDir; // 0xC
	public bool IsVolatile; // 0x10
	private Hashtable values; // 0x14
	private string file; // 0x18
	private bool dirty; // 0x1C
	private static string user_store; // 0x8
	private static string machine_store; // 0xC

	// Properties
	public bool IsMarkedForDeletion { get; }
	private static string UserStore { get; }
	private static string MachineStore { get; }

	// Methods

	// RVA: 0xDBBCBC Offset: 0xDBBCBC VA: 0xDBBCBC
	private static void .cctor() { }

	// RVA: 0xDBC134 Offset: 0xDBC134 VA: 0xDBC134
	private void .ctor(RegistryKey rkey, string basedir) { }

	// RVA: 0xDBC150 Offset: 0xDBC150 VA: 0xDBC150
	private void .ctor(RegistryKey rkey, string basedir, bool is_volatile) { }

	// RVA: 0xDBC4B8 Offset: 0xDBC4B8 VA: 0xDBC4B8
	public void Load() { }

	// RVA: 0xDBCD1C Offset: 0xDBCD1C VA: 0xDBCD1C
	private void LoadKey(SecurityElement se) { }

	// RVA: 0xDBD6B0 Offset: 0xDBD6B0 VA: 0xDBD6B0
	public RegistryKey Ensure(RegistryKey rkey, string extra, bool writable, bool is_volatile) { }

	// RVA: 0xDBDAEC Offset: 0xDBDAEC VA: 0xDBDAEC
	public RegistryKey Probe(RegistryKey rkey, string extra, bool writable) { }

	// RVA: 0xDBDA34 Offset: 0xDBDA34 VA: 0xDBDA34
	private static string CombineName(RegistryKey rkey, string extra) { }

	// RVA: 0xDBE1E4 Offset: 0xDBE1E4 VA: 0xDBE1E4
	private static long GetSystemBootTime() { }

	// RVA: 0xDBE614 Offset: 0xDBE614 VA: 0xDBE614
	private static long GetRegisteredBootTime(string path) { }

	// RVA: 0xDBE9C8 Offset: 0xDBE9C8 VA: 0xDBE9C8
	private static void SaveRegisteredBootTime(string path, long btime) { }

	// RVA: 0xDBBE2C Offset: 0xDBBE2C VA: 0xDBBE2C
	private static void CleanVolatileKeys() { }

	// RVA: 0xDBDF64 Offset: 0xDBDF64 VA: 0xDBDF64
	public static bool VolatileKeyExists(string dir) { }

	// RVA: 0xDBC3B4 Offset: 0xDBC3B4 VA: 0xDBC3B4
	public static string GetVolatileDir(string dir) { }

	// RVA: 0xDBF18C Offset: 0xDBF18C VA: 0xDBF18C
	public static KeyHandler Lookup(RegistryKey rkey, bool createNonExisting) { }

	// RVA: 0xDBEFF8 Offset: 0xDBEFF8 VA: 0xDBEFF8
	private static string GetRootFromDir(string dir) { }

	// RVA: 0xDBF72C Offset: 0xDBF72C VA: 0xDBF72C
	public static void Drop(RegistryKey rkey) { }

	// RVA: 0xDBFD04 Offset: 0xDBFD04 VA: 0xDBFD04
	public object GetValue(string name, RegistryValueOptions options) { }

	// RVA: 0xDBFFA8 Offset: 0xDBFFA8 VA: 0xDBFFA8
	public string[] GetSubKeyNames() { }

	// RVA: 0xDC05BC Offset: 0xDC05BC VA: 0xDC05BC
	public void Flush() { }

	// RVA: 0xDC150C Offset: 0xDC150C VA: 0xDC150C
	public bool ValueExists(string name) { }

	// RVA: 0xDBFF04 Offset: 0xDBFF04 VA: 0xDBFF04
	public bool get_IsMarkedForDeletion() { }

	// RVA: 0xDC1654 Offset: 0xDC1654 VA: 0xDC1654 Slot: 1
	protected override void Finalize() { }

	// RVA: 0xDC0718 Offset: 0xDC0718 VA: 0xDC0718
	private void Save() { }

	// RVA: 0xDBEC34 Offset: 0xDBEC34 VA: 0xDBEC34
	private static string get_UserStore() { }

	// RVA: 0xDBED8C Offset: 0xDBED8C VA: 0xDBED8C
	private static string get_MachineStore() { }
}

// Namespace: Microsoft.Win32
internal class UnixRegistryApi : IRegistryApi // TypeDefIndex: 94
{
	// Methods

	// RVA: 0xE34DE8 Offset: 0xE34DE8 VA: 0xE34DE8
	private static string ToUnix(string keyname) { }

	// RVA: 0xE34E58 Offset: 0xE34E58 VA: 0xE34E58
	private static bool IsWellKnownKey(string parentKeyName, string keyname) { }

	// RVA: 0xE34FDC Offset: 0xE34FDC VA: 0xE34FDC Slot: 4
	public RegistryKey OpenSubKey(RegistryKey rkey, string keyname, bool writable) { }

	// RVA: 0xE35110 Offset: 0xE35110 VA: 0xE35110 Slot: 5
	public void Flush(RegistryKey rkey) { }

	// RVA: 0xE351A0 Offset: 0xE351A0 VA: 0xE351A0 Slot: 6
	public void Close(RegistryKey rkey) { }

	// RVA: 0xE35218 Offset: 0xE35218 VA: 0xE35218 Slot: 7
	public object GetValue(RegistryKey rkey, string name, object default_value, RegistryValueOptions options) { }

	// RVA: 0xE352DC Offset: 0xE352DC VA: 0xE352DC Slot: 8
	public string[] GetSubKeyNames(RegistryKey rkey) { }

	// RVA: 0xE35374 Offset: 0xE35374 VA: 0xE35374 Slot: 9
	public string ToString(RegistryKey rkey) { }

	// RVA: 0xE350F0 Offset: 0xE350F0 VA: 0xE350F0
	private RegistryKey CreateSubKey(RegistryKey rkey, string keyname, bool writable) { }

	// RVA: 0xE35394 Offset: 0xE35394 VA: 0xE35394
	private RegistryKey CreateSubKey(RegistryKey rkey, string keyname, bool writable, bool is_volatile) { }

	// RVA: 0xE35548 Offset: 0xE35548 VA: 0xE35548 Slot: 10
	public IntPtr GetHandle(RegistryKey key) { }

	// RVA: 0xE35590 Offset: 0xE35590 VA: 0xE35590
	public void .ctor() { }
}

// Namespace: Microsoft.Win32
internal class Win32RegistryApi : IRegistryApi // TypeDefIndex: 95
{
	// Fields
	private readonly int NativeBytesPerCharacter; // 0x8

	// Methods

	// RVA: 0xE3CC40 Offset: 0xE3CC40 VA: 0xE3CC40
	private static extern int RegCloseKey(IntPtr keyHandle) { }

	// RVA: 0xE3CCE0 Offset: 0xE3CCE0 VA: 0xE3CCE0
	private static extern int RegFlushKey(IntPtr keyHandle) { }

	// RVA: 0xE3CD80 Offset: 0xE3CD80 VA: 0xE3CD80
	private static extern int RegOpenKeyEx(IntPtr keyBase, string keyName, IntPtr reserved, int access, out IntPtr keyHandle) { }

	// RVA: 0xE3CE48 Offset: 0xE3CE48 VA: 0xE3CE48
	internal static extern int RegEnumKeyEx(IntPtr keyHandle, int dwIndex, char* lpName, ref int lpcbName, int[] lpReserved, [Out] StringBuilder lpClass, int[] lpcbClass, long[] lpftLastWriteTime) { }

	// RVA: 0xE3CF68 Offset: 0xE3CF68 VA: 0xE3CF68
	private static extern int RegQueryValueEx(IntPtr keyBase, string valueName, IntPtr reserved, ref RegistryValueKind type, IntPtr zero, ref int dataSize) { }

	// RVA: 0xE3D038 Offset: 0xE3D038 VA: 0xE3D038
	private static extern int RegQueryValueEx(IntPtr keyBase, string valueName, IntPtr reserved, ref RegistryValueKind type, [Out] byte[] data, ref int dataSize) { }

	// RVA: 0xE3D1A8 Offset: 0xE3D1A8 VA: 0xE3D1A8
	private static extern int RegQueryValueEx(IntPtr keyBase, string valueName, IntPtr reserved, ref RegistryValueKind type, ref int data, ref int dataSize) { }

	// RVA: 0xE3D278 Offset: 0xE3D278 VA: 0xE3D278
	private static extern int RegQueryValueEx(IntPtr keyBase, string valueName, IntPtr reserved, ref RegistryValueKind type, ref long data, ref int dataSize) { }

	// RVA: 0xE3D348 Offset: 0xE3D348 VA: 0xE3D348
	internal static extern int RegQueryInfoKey(IntPtr hKey, [Out] StringBuilder lpClass, int[] lpcbClass, IntPtr lpReserved_MustBeZero, ref int lpcSubKeys, int[] lpcbMaxSubKeyLen, int[] lpcbMaxClassLen, ref int lpcValues, int[] lpcbMaxValueNameLen, int[] lpcbMaxValueLen, int[] lpcbSecurityDescriptor, int[] lpftLastWriteTime) { }

	// RVA: 0xE3D4A4 Offset: 0xE3D4A4 VA: 0xE3D4A4 Slot: 10
	public IntPtr GetHandle(RegistryKey key) { }

	// RVA: 0xE3D53C Offset: 0xE3D53C VA: 0xE3D53C
	private static bool IsHandleValid(RegistryKey key) { }

	// RVA: 0xE3D564 Offset: 0xE3D564 VA: 0xE3D564 Slot: 7
	public object GetValue(RegistryKey rkey, string name, object defaultValue, RegistryValueOptions options) { }

	// RVA: 0xE3DB70 Offset: 0xE3DB70 VA: 0xE3DB70
	private int GetBinaryValue(RegistryKey rkey, string name, RegistryValueKind type, out byte[] data, int size) { }

	// RVA: 0xE3DC30 Offset: 0xE3DC30 VA: 0xE3DC30 Slot: 11
	public int SubKeyCount(RegistryKey rkey) { }

	// RVA: 0xE3DCD0 Offset: 0xE3DCD0 VA: 0xE3DCD0 Slot: 4
	public RegistryKey OpenSubKey(RegistryKey rkey, string keyName, bool writable) { }

	// RVA: 0xE3DE60 Offset: 0xE3DE60 VA: 0xE3DE60 Slot: 5
	public void Flush(RegistryKey rkey) { }

	// RVA: 0xE3DE98 Offset: 0xE3DE98 VA: 0xE3DE98 Slot: 6
	public void Close(RegistryKey rkey) { }

	// RVA: 0xE3DEF0 Offset: 0xE3DEF0 VA: 0xE3DEF0 Slot: 8
	public string[] GetSubKeyNames(RegistryKey rkey) { }

	// RVA: 0xE3D9A8 Offset: 0xE3D9A8 VA: 0xE3D9A8
	private void GenerateException(int errorCode) { }

	// RVA: 0xE3E0C4 Offset: 0xE3E0C4 VA: 0xE3E0C4 Slot: 9
	public string ToString(RegistryKey rkey) { }

	// RVA: 0xE3DDF0 Offset: 0xE3DDF0 VA: 0xE3DDF0
	internal static string CombineName(RegistryKey rkey, string localName) { }

	// RVA: 0xE3E0E4 Offset: 0xE3E0E4 VA: 0xE3E0E4
	public void .ctor() { }
}

// Namespace: 
internal class Win32Native.WIN32_FIND_DATA // TypeDefIndex: 96
{
	// Fields
	internal int dwFileAttributes; // 0x8
	internal string cFileName; // 0xC

	// Methods

	// RVA: 0x53E2A4 Offset: 0x53E2A4 VA: 0x53E2A4
	public void .ctor() { }
}

// Namespace: Microsoft.Win32
internal static class Win32Native // TypeDefIndex: 97
{
	// Methods

	// RVA: 0xE3CBA0 Offset: 0xE3CBA0 VA: 0xE3CBA0
	public static string GetMessage(int hr) { }

	// RVA: 0xE3CC30 Offset: 0xE3CC30 VA: 0xE3CC30
	public static int MakeHRFromErrorCode(int errorCode) { }
}

// Namespace: Microsoft.Win32.SafeHandles
public sealed class SafeFileHandle : SafeHandleZeroOrMinusOneIsInvalid // TypeDefIndex: 98
{
	// Methods

	// RVA: 0x10D1070 Offset: 0x10D1070 VA: 0x10D1070
	public void .ctor(IntPtr preexistingHandle, bool ownsHandle) { }

	// RVA: 0x10D10E4 Offset: 0x10D10E4 VA: 0x10D10E4 Slot: 7
	protected override bool ReleaseHandle() { }
}

// Namespace: Microsoft.Win32.SafeHandles
internal sealed class SafeFindHandle : SafeHandleZeroOrMinusOneIsInvalid // TypeDefIndex: 99
{
	// Methods

	// RVA: 0x10D1180 Offset: 0x10D1180 VA: 0x10D1180
	internal void .ctor(IntPtr preexistingHandle) { }

	// RVA: 0x10D11A0 Offset: 0x10D11A0 VA: 0x10D11A0 Slot: 7
	protected override bool ReleaseHandle() { }
}

// Namespace: Microsoft.Win32.SafeHandles
public sealed class SafeRegistryHandle : SafeHandleZeroOrMinusOneIsInvalid // TypeDefIndex: 100
{
	// Methods

	// RVA: 0x10D1748 Offset: 0x10D1748 VA: 0x10D1748
	public void .ctor(IntPtr preexistingHandle, bool ownsHandle) { }

	// RVA: 0x10D1768 Offset: 0x10D1768 VA: 0x10D1768 Slot: 7
	protected override bool ReleaseHandle() { }
}

// Namespace: Microsoft.Win32.SafeHandles
public sealed class SafeWaitHandle : SafeHandleZeroOrMinusOneIsInvalid // TypeDefIndex: 101
{
	// Methods

	[ReliabilityContractAttribute] // RVA: 0x3EE3A4 Offset: 0x3EE3A4 VA: 0x3EE3A4
	// RVA: 0x1123CAC Offset: 0x1123CAC VA: 0x1123CAC
	public void .ctor(IntPtr existingHandle, bool ownsHandle) { }

	// RVA: 0x1123CD0 Offset: 0x1123CD0 VA: 0x1123CD0 Slot: 7
	protected override bool ReleaseHandle() { }
}

// Namespace: Microsoft.Win32.SafeHandles
public abstract class SafeHandleZeroOrMinusOneIsInvalid : SafeHandle // TypeDefIndex: 102
{
	// Properties
	public override bool IsInvalid { get; }

	// Methods

	[ReliabilityContractAttribute] // RVA: 0x3EE3BC Offset: 0x3EE3BC VA: 0x3EE3BC
	// RVA: 0x10D1090 Offset: 0x10D1090 VA: 0x10D1090
	protected void .ctor(bool ownsHandle) { }

	// RVA: 0x10D16E8 Offset: 0x10D16E8 VA: 0x10D16E8 Slot: 5
	public override bool get_IsInvalid() { }
}

// Namespace: Microsoft.Win32.SafeHandles
public abstract class SafeHandleMinusOneIsInvalid : SafeHandle // TypeDefIndex: 103
{
	// Properties
	public override bool IsInvalid { get; }

	// Methods

	[ReliabilityContractAttribute] // RVA: 0x3EE3D4 Offset: 0x3EE3D4 VA: 0x3EE3D4
	// RVA: 0x10D1664 Offset: 0x10D1664 VA: 0x10D1664
	protected void .ctor(bool ownsHandle) { }

	// RVA: 0x10D16A8 Offset: 0x10D16A8 VA: 0x10D16A8 Slot: 5
	public override bool get_IsInvalid() { }
}

// Namespace: System
internal static class ThrowHelper // TypeDefIndex: 104
{
	// Methods

	// RVA: 0xDCEBE0 Offset: 0xDCEBE0 VA: 0xDCEBE0
	internal static void ThrowArgumentNullException(ExceptionArgument argument) { }

	// RVA: 0xDCEC10 Offset: 0xDCEC10 VA: 0xDCEC10
	private static Exception CreateArgumentNullException(ExceptionArgument argument) { }

	// RVA: 0xDCECEC Offset: 0xDCECEC VA: 0xDCECEC
	internal static void ThrowArgumentOutOfRangeException() { }

	// RVA: 0xDCEDB4 Offset: 0xDCEDB4 VA: 0xDCEDB4
	internal static void ThrowWrongValueTypeArgumentException(object value, Type targetType) { }

	// RVA: 0xDCEEA0 Offset: 0xDCEEA0 VA: 0xDCEEA0
	internal static void ThrowArgumentException(ExceptionResource resource) { }

	// RVA: 0xDCED00 Offset: 0xDCED00 VA: 0xDCED00
	internal static void ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource) { }

	// RVA: 0xDCF444 Offset: 0xDCF444 VA: 0xDCF444
	internal static void ThrowInvalidOperationException(ExceptionResource resource) { }

	// RVA: 0xDCF4A0 Offset: 0xDCF4A0 VA: 0xDCF4A0
	internal static void ThrowNotSupportedException(ExceptionResource resource) { }

	// RVA: -1 Offset: -1
	internal static void IfNullAndNullsAreIllegalThenThrow<T>(object value, ExceptionArgument argName) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xA43E64 Offset: 0xA43E64 VA: 0xA43E64
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<DictionaryEntry<object, int, object>>
	|
	|-RVA: 0xA43E78 Offset: 0xA43E78 VA: 0xA43E78
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<DictionaryEntry<object, object, object>>
	|
	|-RVA: 0xA43E8C Offset: 0xA43E8C VA: 0xA43E8C
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<IntervalTree.Entry<object>>
	|
	|-RVA: 0xA43EA0 Offset: 0xA43EA0 VA: 0xA43EA0
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<KeyValuePair<DateTime, object>>
	|
	|-RVA: 0xA43EB4 Offset: 0xA43EB4 VA: 0xA43EB4
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<KeyValuePair<short, float>>
	|
	|-RVA: 0xA43EC8 Offset: 0xA43EC8 VA: 0xA43EC8
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<KeyValuePair<int, object>>
	|
	|-RVA: 0xA43EDC Offset: 0xA43EDC VA: 0xA43EDC
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<KeyValuePair<object, object>>
	|
	|-RVA: 0xA43EF0 Offset: 0xA43EF0 VA: 0xA43EF0
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<bool>
	|
	|-RVA: 0xA43F04 Offset: 0xA43F04 VA: 0xA43F04
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<byte>
	|
	|-RVA: 0xA43F18 Offset: 0xA43F18 VA: 0xA43F18
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<char>
	|
	|-RVA: 0xA43F2C Offset: 0xA43F2C VA: 0xA43F2C
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<Color32>
	|
	|-RVA: 0xA43F40 Offset: 0xA43F40 VA: 0xA43F40
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<double>
	|
	|-RVA: 0xA43F54 Offset: 0xA43F54 VA: 0xA43F54
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<GlyphRect>
	|
	|-RVA: 0xA43F68 Offset: 0xA43F68 VA: 0xA43F68
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<short>
	|
	|-RVA: 0xA43F7C Offset: 0xA43F7C VA: 0xA43F7C
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<int>
	|
	|-RVA: 0xA43F90 Offset: 0xA43F90 VA: 0xA43F90
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<Int32Enum>
	|
	|-RVA: 0xA43FA4 Offset: 0xA43FA4 VA: 0xA43FA4
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<long>
	|
	|-RVA: 0xA43FB8 Offset: 0xA43FB8 VA: 0xA43FB8
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<IntervalTreeNode>
	|
	|-RVA: 0xA43FCC Offset: 0xA43FCC VA: 0xA43FCC
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<MessageStringParameterBlock>
	|
	|-RVA: 0xA43FE0 Offset: 0xA43FE0 VA: 0xA43FE0
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<object>
	|
	|-RVA: 0xA43FE4 Offset: 0xA43FE4 VA: 0xA43FE4
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<PlayableBinding>
	|
	|-RVA: 0xA43FF8 Offset: 0xA43FF8 VA: 0xA43FF8
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<RaycastHit>
	|
	|-RVA: 0xA4400C Offset: 0xA4400C VA: 0xA4400C
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<RaycastHit2D>
	|
	|-RVA: 0xA44020 Offset: 0xA44020 VA: 0xA44020
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<RaycastResult>
	|
	|-RVA: 0xA44034 Offset: 0xA44034 VA: 0xA44034
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<sbyte>
	|
	|-RVA: 0xA44048 Offset: 0xA44048 VA: 0xA44048
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<float>
	|
	|-RVA: 0xA4405C Offset: 0xA4405C VA: 0xA4405C
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<UICharInfo>
	|
	|-RVA: 0xA44070 Offset: 0xA44070 VA: 0xA44070
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<UILineInfo>
	|
	|-RVA: 0xA44084 Offset: 0xA44084 VA: 0xA44084
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<UIVertex>
	|
	|-RVA: 0xA44098 Offset: 0xA44098 VA: 0xA44098
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<ushort>
	|
	|-RVA: 0xA440AC Offset: 0xA440AC VA: 0xA440AC
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<uint>
	|
	|-RVA: 0xA440C0 Offset: 0xA440C0 VA: 0xA440C0
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<ulong>
	|
	|-RVA: 0xA440D4 Offset: 0xA440D4 VA: 0xA440D4
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<Vector2>
	|
	|-RVA: 0xA440E8 Offset: 0xA440E8 VA: 0xA440E8
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<Vector3>
	|
	|-RVA: 0xA440FC Offset: 0xA440FC VA: 0xA440FC
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<Vector4>
	|
	|-RVA: 0xA44110 Offset: 0xA44110 VA: 0xA44110
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<X509ChainStatus>
	|
	|-RVA: 0xA44124 Offset: 0xA44124 VA: 0xA44124
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<AnimationOutputWeightProcessor.WeightInfo>
	|
	|-RVA: 0xA44138 Offset: 0xA44138 VA: 0xA44138
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<BeforeRenderHelper.OrderBlock>
	|
	|-RVA: 0xA4414C Offset: 0xA4414C VA: 0xA4414C
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<Camera.RenderRequest>
	|
	|-RVA: 0xA44160 Offset: 0xA44160 VA: 0xA44160
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<TexturePacker_JsonArray.Frame>
	|
	|-RVA: 0xA44174 Offset: 0xA44174 VA: 0xA44174
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<TimeNotificationBehaviour.NotificationEntry>
	|
	|-RVA: 0xA44188 Offset: 0xA44188 VA: 0xA44188
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<UnitySynchronizationContext.WorkRequest>
	|
	|-RVA: 0xA4419C Offset: 0xA4419C VA: 0xA4419C
	|-ThrowHelper.IfNullAndNullsAreIllegalThenThrow<AssetBundleBuildMap.AssetBundleEntry.AssetPathString>
	*/

	// RVA: 0xDCF250 Offset: 0xDCF250 VA: 0xDCF250
	internal static string GetArgumentName(ExceptionArgument argument) { }

	// RVA: 0xDCEEFC Offset: 0xDCEEFC VA: 0xDCEEFC
	internal static string GetResourceName(ExceptionResource resource) { }
}

// Namespace: System
[Serializable]
public struct ValueTuple : IEquatable<ValueTuple>, IStructuralEquatable, IStructuralComparable, IComparable, IComparable<ValueTuple> // TypeDefIndex: 105
{
	// Methods

	// RVA: 0xE38768 Offset: 0xE38768 VA: 0xE38768 Slot: 0
	public override bool Equals(object obj) { }

	// RVA: 0xE387D8 Offset: 0xE387D8 VA: 0xE387D8 Slot: 4
	public bool Equals(ValueTuple other) { }

	// RVA: 0xE387E0 Offset: 0xE387E0 VA: 0xE387E0 Slot: 5
	private bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer) { }

	// RVA: 0xE38850 Offset: 0xE38850 VA: 0xE38850 Slot: 8
	private int System.IComparable.CompareTo(object other) { }

	// RVA: 0xE38998 Offset: 0xE38998 VA: 0xE38998 Slot: 9
	public int CompareTo(ValueTuple other) { }

	// RVA: 0xE389A0 Offset: 0xE389A0 VA: 0xE389A0 Slot: 7
	private int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer) { }

	// RVA: 0xE38AE8 Offset: 0xE38AE8 VA: 0xE38AE8 Slot: 2
	public override int GetHashCode() { }

	// RVA: 0xE38AF0 Offset: 0xE38AF0 VA: 0xE38AF0 Slot: 6
	private int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer) { }

	// RVA: 0xE38AF8 Offset: 0xE38AF8 VA: 0xE38AF8 Slot: 3
	public override string ToString() { }

	// RVA: 0xE38B44 Offset: 0xE38B44 VA: 0xE38B44
	internal static int CombineHashCodes(int h1, int h2) { }

	// RVA: 0xE38BD8 Offset: 0xE38BD8 VA: 0xE38BD8
	internal static int CombineHashCodes(int h1, int h2, int h3) { }

	// RVA: 0xE38C6C Offset: 0xE38C6C VA: 0xE38C6C
	internal static int CombineHashCodes(int h1, int h2, int h3, int h4) { }

	// RVA: 0xE38D08 Offset: 0xE38D08 VA: 0xE38D08
	internal static int CombineHashCodes(int h1, int h2, int h3, int h4, int h5) { }
}

// Namespace: System
[Serializable]
public struct ValueTuple<T1, T2> : IEquatable<ValueTuple<T1, T2>>, IStructuralEquatable, IStructuralComparable, IComparable, IComparable<ValueTuple<T1, T2>> // TypeDefIndex: 106
{
	// Fields
	public T1 Item1; // 0x0
	public T2 Item2; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T1 item1, T2 item2) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9CCC4 Offset: 0xE9CCC4 VA: 0xE9CCC4
	|-ValueTuple<Task<BufferOffsetSize>, WebException>..ctor
	|-ValueTuple<object, object>..ctor
	|-ValueTuple<ServicePointScheduler.ConnectionGroup, WebOperation>..ctor
	|
	|-RVA: 0xE98574 Offset: 0xE98574 VA: 0xE98574
	|-ValueTuple<bool, object>..ctor
	|-ValueTuple<bool, WebOperation>..ctor
	|
	|-RVA: 0xE9BB2C Offset: 0xE9BB2C VA: 0xE9BB2C
	|-ValueTuple<ExceptionDispatchInfo, bool>..ctor
	|-ValueTuple<object, bool>..ctor
	|-ValueTuple<WebConnection, bool>..ctor
	|-ValueTuple<WebOperation, bool>..ctor
	|
	|-RVA: 0xE996D0 Offset: 0xE996D0 VA: 0xE996D0
	|-ValueTuple<int, bool>..ctor
	|
	|-RVA: 0xE9A91C Offset: 0xE9A91C VA: 0xE9A91C
	|-ValueTuple<int, int>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 0
	public override bool Equals(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE98584 Offset: 0xE98584 VA: 0xE98584
	|-ValueTuple<bool, object>.Equals
	|
	|-RVA: 0xE996DC Offset: 0xE996DC VA: 0xE996DC
	|-ValueTuple<int, bool>.Equals
	|
	|-RVA: 0xE9A924 Offset: 0xE9A924 VA: 0xE9A924
	|-ValueTuple<int, int>.Equals
	|
	|-RVA: 0xE9BB4C Offset: 0xE9BB4C VA: 0xE9BB4C
	|-ValueTuple<object, bool>.Equals
	|
	|-RVA: 0xE9CCF0 Offset: 0xE9CCF0 VA: 0xE9CCF0
	|-ValueTuple<object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public bool Equals(ValueTuple<T1, T2> other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE98688 Offset: 0xE98688 VA: 0xE98688
	|-ValueTuple<bool, object>.Equals
	|
	|-RVA: 0xE997E0 Offset: 0xE997E0 VA: 0xE997E0
	|-ValueTuple<int, bool>.Equals
	|
	|-RVA: 0xE9AA28 Offset: 0xE9AA28 VA: 0xE9AA28
	|-ValueTuple<int, int>.Equals
	|
	|-RVA: 0xE9BC50 Offset: 0xE9BC50 VA: 0xE9BC50
	|-ValueTuple<object, bool>.Equals
	|
	|-RVA: 0xE9CDF4 Offset: 0xE9CDF4 VA: 0xE9CDF4
	|-ValueTuple<object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE987C8 Offset: 0xE987C8 VA: 0xE987C8
	|-ValueTuple<bool, object>.System.Collections.IStructuralEquatable.Equals
	|
	|-RVA: 0xE99920 Offset: 0xE99920 VA: 0xE99920
	|-ValueTuple<int, bool>.System.Collections.IStructuralEquatable.Equals
	|
	|-RVA: 0xE9AB58 Offset: 0xE9AB58 VA: 0xE9AB58
	|-ValueTuple<int, int>.System.Collections.IStructuralEquatable.Equals
	|
	|-RVA: 0xE9BD90 Offset: 0xE9BD90 VA: 0xE9BD90
	|-ValueTuple<object, bool>.System.Collections.IStructuralEquatable.Equals
	|
	|-RVA: 0xE9CF24 Offset: 0xE9CF24 VA: 0xE9CF24
	|-ValueTuple<object, object>.System.Collections.IStructuralEquatable.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 8
	private int System.IComparable.CompareTo(object other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE98AA8 Offset: 0xE98AA8 VA: 0xE98AA8
	|-ValueTuple<bool, object>.System.IComparable.CompareTo
	|
	|-RVA: 0xE99C98 Offset: 0xE99C98 VA: 0xE99C98
	|-ValueTuple<int, bool>.System.IComparable.CompareTo
	|
	|-RVA: 0xE9AEC4 Offset: 0xE9AEC4 VA: 0xE9AEC4
	|-ValueTuple<int, int>.System.IComparable.CompareTo
	|
	|-RVA: 0xE9C078 Offset: 0xE9C078 VA: 0xE9C078
	|-ValueTuple<object, bool>.System.IComparable.CompareTo
	|
	|-RVA: 0xE9D160 Offset: 0xE9D160 VA: 0xE9D160
	|-ValueTuple<object, object>.System.IComparable.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public int CompareTo(ValueTuple<T1, T2> other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE98C88 Offset: 0xE98C88 VA: 0xE98C88
	|-ValueTuple<bool, object>.CompareTo
	|
	|-RVA: 0xE99E78 Offset: 0xE99E78 VA: 0xE99E78
	|-ValueTuple<int, bool>.CompareTo
	|
	|-RVA: 0xE9B0A4 Offset: 0xE9B0A4 VA: 0xE9B0A4
	|-ValueTuple<int, int>.CompareTo
	|
	|-RVA: 0xE9C258 Offset: 0xE9C258 VA: 0xE9C258
	|-ValueTuple<object, bool>.CompareTo
	|
	|-RVA: 0xE9D340 Offset: 0xE9D340 VA: 0xE9D340
	|-ValueTuple<object, object>.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 7
	private int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE98DC4 Offset: 0xE98DC4 VA: 0xE98DC4
	|-ValueTuple<bool, object>.System.Collections.IStructuralComparable.CompareTo
	|
	|-RVA: 0xE99FB4 Offset: 0xE99FB4 VA: 0xE99FB4
	|-ValueTuple<int, bool>.System.Collections.IStructuralComparable.CompareTo
	|
	|-RVA: 0xE9B1D0 Offset: 0xE9B1D0 VA: 0xE9B1D0
	|-ValueTuple<int, int>.System.Collections.IStructuralComparable.CompareTo
	|
	|-RVA: 0xE9C394 Offset: 0xE9C394 VA: 0xE9C394
	|-ValueTuple<object, bool>.System.Collections.IStructuralComparable.CompareTo
	|
	|-RVA: 0xE9D46C Offset: 0xE9D46C VA: 0xE9D46C
	|-ValueTuple<object, object>.System.Collections.IStructuralComparable.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public override int GetHashCode() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE99178 Offset: 0xE99178 VA: 0xE99178
	|-ValueTuple<bool, object>.GetHashCode
	|
	|-RVA: 0xE9A400 Offset: 0xE9A400 VA: 0xE9A400
	|-ValueTuple<int, bool>.GetHashCode
	|
	|-RVA: 0xE9B610 Offset: 0xE9B610 VA: 0xE9B610
	|-ValueTuple<int, int>.GetHashCode
	|
	|-RVA: 0xE9C75C Offset: 0xE9C75C VA: 0xE9C75C
	|-ValueTuple<object, bool>.GetHashCode
	|
	|-RVA: 0xE9D78C Offset: 0xE9D78C VA: 0xE9D78C
	|-ValueTuple<object, object>.GetHashCode
	*/

	// RVA: -1 Offset: -1 Slot: 6
	private int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE991F0 Offset: 0xE991F0 VA: 0xE991F0
	|-ValueTuple<bool, object>.System.Collections.IStructuralEquatable.GetHashCode
	|
	|-RVA: 0xE9A438 Offset: 0xE9A438 VA: 0xE9A438
	|-ValueTuple<int, bool>.System.Collections.IStructuralEquatable.GetHashCode
	|
	|-RVA: 0xE9B648 Offset: 0xE9B648 VA: 0xE9B648
	|-ValueTuple<int, int>.System.Collections.IStructuralEquatable.GetHashCode
	|
	|-RVA: 0xE9C7D8 Offset: 0xE9C7D8 VA: 0xE9C7D8
	|-ValueTuple<object, bool>.System.Collections.IStructuralEquatable.GetHashCode
	|
	|-RVA: 0xE9D840 Offset: 0xE9D840 VA: 0xE9D840
	|-ValueTuple<object, object>.System.Collections.IStructuralEquatable.GetHashCode
	*/

	// RVA: -1 Offset: -1
	private int GetHashCodeCore(IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE99230 Offset: 0xE99230 VA: 0xE99230
	|-ValueTuple<bool, object>.GetHashCodeCore
	|
	|-RVA: 0xE9A478 Offset: 0xE9A478 VA: 0xE9A478
	|-ValueTuple<int, bool>.GetHashCodeCore
	|
	|-RVA: 0xE9B688 Offset: 0xE9B688 VA: 0xE9B688
	|-ValueTuple<int, int>.GetHashCodeCore
	|
	|-RVA: 0xE9C818 Offset: 0xE9C818 VA: 0xE9C818
	|-ValueTuple<object, bool>.GetHashCodeCore
	|
	|-RVA: 0xE9D874 Offset: 0xE9D874 VA: 0xE9D874
	|-ValueTuple<object, object>.GetHashCodeCore
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public override string ToString() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE993E8 Offset: 0xE993E8 VA: 0xE993E8
	|-ValueTuple<bool, object>.ToString
	|
	|-RVA: 0xE9A684 Offset: 0xE9A684 VA: 0xE9A684
	|-ValueTuple<int, bool>.ToString
	|
	|-RVA: 0xE9B894 Offset: 0xE9B894 VA: 0xE9B894
	|-ValueTuple<int, int>.ToString
	|
	|-RVA: 0xE9C9DC Offset: 0xE9C9DC VA: 0xE9C9DC
	|-ValueTuple<object, bool>.ToString
	|
	|-RVA: 0xE9D9E0 Offset: 0xE9D9E0 VA: 0xE9D9E0
	|-ValueTuple<object, object>.ToString
	*/
}

// Namespace: System
[Serializable]
public struct ValueTuple<T1, T2, T3> : IEquatable<ValueTuple<T1, T2, T3>>, IStructuralEquatable, IStructuralComparable, IComparable, IComparable<ValueTuple<T1, T2, T3>> // TypeDefIndex: 107
{
	// Fields
	public T1 Item1; // 0x0
	public T2 Item2; // 0x0
	public T3 Item3; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T1 item1, T2 item2, T3 item3) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9DD0C Offset: 0xE9DD0C VA: 0xE9DD0C
	|-ValueTuple<object, object, int>..ctor
	|-ValueTuple<WebHeaderCollection, byte[], int>..ctor
	|
	|-RVA: 0xE9F2D4 Offset: 0xE9F2D4 VA: 0xE9F2D4
	|-ValueTuple<object, object, object>..ctor
	|-ValueTuple<ServicePointScheduler.ConnectionGroup, WebConnection, Task>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 0
	public override bool Equals(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9DD40 Offset: 0xE9DD40 VA: 0xE9DD40
	|-ValueTuple<object, object, int>.Equals
	|
	|-RVA: 0xE9F314 Offset: 0xE9F314 VA: 0xE9F314
	|-ValueTuple<object, object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public bool Equals(ValueTuple<T1, T2, T3> other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9DE58 Offset: 0xE9DE58 VA: 0xE9DE58
	|-ValueTuple<object, object, int>.Equals
	|
	|-RVA: 0xE9F42C Offset: 0xE9F42C VA: 0xE9F42C
	|-ValueTuple<object, object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9E00C Offset: 0xE9E00C VA: 0xE9E00C
	|-ValueTuple<object, object, int>.System.Collections.IStructuralEquatable.Equals
	|
	|-RVA: 0xE9F5E0 Offset: 0xE9F5E0 VA: 0xE9F5E0
	|-ValueTuple<object, object, object>.System.Collections.IStructuralEquatable.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 8
	private int System.IComparable.CompareTo(object other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9E390 Offset: 0xE9E390 VA: 0xE9E390
	|-ValueTuple<object, object, int>.System.IComparable.CompareTo
	|
	|-RVA: 0xE9F8C0 Offset: 0xE9F8C0 VA: 0xE9F8C0
	|-ValueTuple<object, object, object>.System.IComparable.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public int CompareTo(ValueTuple<T1, T2, T3> other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9E580 Offset: 0xE9E580 VA: 0xE9E580
	|-ValueTuple<object, object, int>.CompareTo
	|
	|-RVA: 0xE9FAB0 Offset: 0xE9FAB0 VA: 0xE9FAB0
	|-ValueTuple<object, object, object>.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 7
	private int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9E730 Offset: 0xE9E730 VA: 0xE9E730
	|-ValueTuple<object, object, int>.System.Collections.IStructuralComparable.CompareTo
	|
	|-RVA: 0xE9FC60 Offset: 0xE9FC60 VA: 0xE9FC60
	|-ValueTuple<object, object, object>.System.Collections.IStructuralComparable.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public override int GetHashCode() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9EB90 Offset: 0xE9EB90 VA: 0xE9EB90
	|-ValueTuple<object, object, int>.GetHashCode
	|
	|-RVA: 0xEA0020 Offset: 0xEA0020 VA: 0xEA0020
	|-ValueTuple<object, object, object>.GetHashCode
	*/

	// RVA: -1 Offset: -1 Slot: 6
	private int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9EC54 Offset: 0xE9EC54 VA: 0xE9EC54
	|-ValueTuple<object, object, int>.System.Collections.IStructuralEquatable.GetHashCode
	|
	|-RVA: 0xEA0120 Offset: 0xEA0120 VA: 0xEA0120
	|-ValueTuple<object, object, object>.System.Collections.IStructuralEquatable.GetHashCode
	*/

	// RVA: -1 Offset: -1
	private int GetHashCodeCore(IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9EC94 Offset: 0xE9EC94 VA: 0xE9EC94
	|-ValueTuple<object, object, int>.GetHashCodeCore
	|
	|-RVA: 0xEA0154 Offset: 0xEA0154 VA: 0xEA0154
	|-ValueTuple<object, object, object>.GetHashCodeCore
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public override string ToString() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xE9EEEC Offset: 0xE9EEEC VA: 0xE9EEEC
	|-ValueTuple<object, object, int>.ToString
	|
	|-RVA: 0xEA0360 Offset: 0xEA0360 VA: 0xEA0360
	|-ValueTuple<object, object, object>.ToString
	*/
}

// Namespace: System
[Serializable]
public struct ValueTuple<T1, T2, T3, T4> : IEquatable<ValueTuple<T1, T2, T3, T4>>, IStructuralEquatable, IStructuralComparable, IComparable, IComparable<ValueTuple<T1, T2, T3, T4>> // TypeDefIndex: 108
{
	// Fields
	public T1 Item1; // 0x0
	public T2 Item2; // 0x0
	public T3 Item3; // 0x0
	public T4 Item4; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T1 item1, T2 item2, T3 item3, T4 item4) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA078C Offset: 0xEA078C VA: 0xEA078C
	|-ValueTuple<bool, bool, Task<BufferOffsetSize>, WebException>..ctor
	|-ValueTuple<bool, bool, object, object>..ctor
	|
	|-RVA: 0xEA22E0 Offset: 0xEA22E0 VA: 0xEA22E0
	|-ValueTuple<object, object, object, object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 0
	public override bool Equals(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA07C0 Offset: 0xEA07C0 VA: 0xEA07C0
	|-ValueTuple<bool, bool, object, object>.Equals
	|
	|-RVA: 0xEA2330 Offset: 0xEA2330 VA: 0xEA2330
	|-ValueTuple<object, object, object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public bool Equals(ValueTuple<T1, T2, T3, T4> other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA08D8 Offset: 0xEA08D8 VA: 0xEA08D8
	|-ValueTuple<bool, bool, object, object>.Equals
	|
	|-RVA: 0xEA2454 Offset: 0xEA2454 VA: 0xEA2454
	|-ValueTuple<object, object, object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA0B34 Offset: 0xEA0B34 VA: 0xEA0B34
	|-ValueTuple<bool, bool, object, object>.System.Collections.IStructuralEquatable.Equals
	|
	|-RVA: 0xEA2698 Offset: 0xEA2698 VA: 0xEA2698
	|-ValueTuple<object, object, object, object>.System.Collections.IStructuralEquatable.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 8
	private int System.IComparable.CompareTo(object other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA1004 Offset: 0xEA1004 VA: 0xEA1004
	|-ValueTuple<bool, bool, object, object>.System.IComparable.CompareTo
	|
	|-RVA: 0xEA2A18 Offset: 0xEA2A18 VA: 0xEA2A18
	|-ValueTuple<object, object, object, object>.System.IComparable.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public int CompareTo(ValueTuple<T1, T2, T3, T4> other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA11F4 Offset: 0xEA11F4 VA: 0xEA11F4
	|-ValueTuple<bool, bool, object, object>.CompareTo
	|
	|-RVA: 0xEA2C10 Offset: 0xEA2C10 VA: 0xEA2C10
	|-ValueTuple<object, object, object, object>.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 7
	private int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA144C Offset: 0xEA144C VA: 0xEA144C
	|-ValueTuple<bool, bool, object, object>.System.Collections.IStructuralComparable.CompareTo
	|
	|-RVA: 0xEA2E50 Offset: 0xEA2E50 VA: 0xEA2E50
	|-ValueTuple<object, object, object, object>.System.Collections.IStructuralComparable.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public override int GetHashCode() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA19E8 Offset: 0xEA19E8 VA: 0xEA19E8
	|-ValueTuple<bool, bool, object, object>.GetHashCode
	|
	|-RVA: 0xEA32AC Offset: 0xEA32AC VA: 0xEA32AC
	|-ValueTuple<object, object, object, object>.GetHashCode
	*/

	// RVA: -1 Offset: -1 Slot: 6
	private int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA1AC4 Offset: 0xEA1AC4 VA: 0xEA1AC4
	|-ValueTuple<bool, bool, object, object>.System.Collections.IStructuralEquatable.GetHashCode
	|
	|-RVA: 0xEA33FC Offset: 0xEA33FC VA: 0xEA33FC
	|-ValueTuple<object, object, object, object>.System.Collections.IStructuralEquatable.GetHashCode
	*/

	// RVA: -1 Offset: -1
	private int GetHashCodeCore(IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA1B04 Offset: 0xEA1B04 VA: 0xEA1B04
	|-ValueTuple<bool, bool, object, object>.GetHashCodeCore
	|
	|-RVA: 0xEA3430 Offset: 0xEA3430 VA: 0xEA3430
	|-ValueTuple<object, object, object, object>.GetHashCodeCore
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public override string ToString() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA1E3C Offset: 0xEA1E3C VA: 0xEA1E3C
	|-ValueTuple<bool, bool, object, object>.ToString
	|
	|-RVA: 0xEA36D4 Offset: 0xEA36D4 VA: 0xEA36D4
	|-ValueTuple<object, object, object, object>.ToString
	*/
}

// Namespace: System
[Serializable]
public struct ValueTuple<T1, T2, T3, T4, T5> : IEquatable<ValueTuple<T1, T2, T3, T4, T5>>, IStructuralEquatable, IStructuralComparable, IComparable, IComparable<ValueTuple<T1, T2, T3, T4, T5>> // TypeDefIndex: 109
{
	// Fields
	public T1 Item1; // 0x0
	public T2 Item2; // 0x0
	public T3 Item3; // 0x0
	public T4 Item4; // 0x0
	public T5 Item5; // 0x0

	// Methods

	// RVA: -1 Offset: -1
	public void .ctor(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA3C00 Offset: 0xEA3C00 VA: 0xEA3C00
	|-ValueTuple<HttpWebResponse, bool, bool, BufferOffsetSize, WebOperation>..ctor
	|-ValueTuple<object, bool, bool, object, object>..ctor
	|
	|-RVA: 0x1010B20 Offset: 0x1010B20 VA: 0x1010B20
	|-ValueTuple<object, object, object, object, object>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 0
	public override bool Equals(object obj) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA3C48 Offset: 0xEA3C48 VA: 0xEA3C48
	|-ValueTuple<object, bool, bool, object, object>.Equals
	|
	|-RVA: 0x1010B80 Offset: 0x1010B80 VA: 0x1010B80
	|-ValueTuple<object, object, object, object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public bool Equals(ValueTuple<T1, T2, T3, T4, T5> other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA3D6C Offset: 0xEA3D6C VA: 0xEA3D6C
	|-ValueTuple<object, bool, bool, object, object>.Equals
	|
	|-RVA: 0x1010CA8 Offset: 0x1010CA8 VA: 0x1010CA8
	|-ValueTuple<object, object, object, object, object>.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 5
	private bool System.Collections.IStructuralEquatable.Equals(object other, IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA4058 Offset: 0xEA4058 VA: 0xEA4058
	|-ValueTuple<object, bool, bool, object, object>.System.Collections.IStructuralEquatable.Equals
	|
	|-RVA: 0x1010F7C Offset: 0x1010F7C VA: 0x1010F7C
	|-ValueTuple<object, object, object, object, object>.System.Collections.IStructuralEquatable.Equals
	*/

	// RVA: -1 Offset: -1 Slot: 8
	private int System.IComparable.CompareTo(object other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA45E8 Offset: 0xEA45E8 VA: 0xEA45E8
	|-ValueTuple<object, bool, bool, object, object>.System.IComparable.CompareTo
	|
	|-RVA: 0x101139C Offset: 0x101139C VA: 0x101139C
	|-ValueTuple<object, object, object, object, object>.System.IComparable.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 9
	public int CompareTo(ValueTuple<T1, T2, T3, T4, T5> other) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA47E0 Offset: 0xEA47E0 VA: 0xEA47E0
	|-ValueTuple<object, bool, bool, object, object>.CompareTo
	|
	|-RVA: 0x10115A4 Offset: 0x10115A4 VA: 0x10115A4
	|-ValueTuple<object, object, object, object, object>.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 7
	private int System.Collections.IStructuralComparable.CompareTo(object other, IComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA4AC8 Offset: 0xEA4AC8 VA: 0xEA4AC8
	|-ValueTuple<object, bool, bool, object, object>.System.Collections.IStructuralComparable.CompareTo
	|
	|-RVA: 0x1011874 Offset: 0x1011874 VA: 0x1011874
	|-ValueTuple<object, object, object, object, object>.System.Collections.IStructuralComparable.CompareTo
	*/

	// RVA: -1 Offset: -1 Slot: 2
	public override int GetHashCode() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA5110 Offset: 0xEA5110 VA: 0xEA5110
	|-ValueTuple<object, bool, bool, object, object>.GetHashCode
	|
	|-RVA: 0x1011D80 Offset: 0x1011D80 VA: 0x1011D80
	|-ValueTuple<object, object, object, object, object>.GetHashCode
	*/

	// RVA: -1 Offset: -1 Slot: 6
	private int System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA5234 Offset: 0xEA5234 VA: 0xEA5234
	|-ValueTuple<object, bool, bool, object, object>.System.Collections.IStructuralEquatable.GetHashCode
	|
	|-RVA: 0x1011F14 Offset: 0x1011F14 VA: 0x1011F14
	|-ValueTuple<object, object, object, object, object>.System.Collections.IStructuralEquatable.GetHashCode
	*/

	// RVA: -1 Offset: -1
	private int GetHashCodeCore(IEqualityComparer comparer) { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA5274 Offset: 0xEA5274 VA: 0xEA5274
	|-ValueTuple<object, bool, bool, object, object>.GetHashCodeCore
	|
	|-RVA: 0x1011F48 Offset: 0x1011F48 VA: 0x1011F48
	|-ValueTuple<object, object, object, object, object>.GetHashCodeCore
	*/

	// RVA: -1 Offset: -1 Slot: 3
	public override string ToString() { }
	/* GenericInstMethod :
	|
	|-RVA: 0xEA563C Offset: 0xEA563C VA: 0xEA563C
	|-ValueTuple<object, bool, bool, object, object>.ToString
	|
	|-RVA: 0x1012264 Offset: 0x1012264 VA: 0x1012264
	|-ValueTuple<object, object, object, object, object>.ToString
	*/
}

// Namespace: 
private sealed class Array.ArrayEnumerator : IEnumerator, ICloneable // TypeDefIndex: 110
{
	// Fields
	private Array _array; // 0x8
	private int _index; // 0xC
	private int _endIndex; // 0x10

	// Properties
	public object Current { get; }

	// Methods

	// RVA: 0xF9841C Offset: 0xF9841C VA: 0xF9841C
	internal void .ctor(Array array) { }

	// RVA: 0xF98470 Offset: 0xF98470 VA: 0xF98470 Slot: 4
	public bool MoveNext() { }

	// RVA: 0xF984A0 Offset: 0xF984A0 VA: 0xF984A0 Slot: 6
	public void Reset() { }

	// RVA: 0xF984AC Offset: 0xF984AC VA: 0xF984AC Slot: 7
	public object Clone() { }

	// RVA: 0xF984B4 Offset: 0xF984B4 VA: 0xF984B4 Slot: 5
	public object get_Current() { }
}

// Namespace: 
internal struct Array.InternalEnumerator<T> : IEnumerator<T>, IDisposable, IEnumerator // TypeDefIndex: 111
{
	// Fields
	private readonly Array array; // 0x0
	private int idx; // 0x0

	// Properties
	public T Current { get; }
	private object System.Collections.IEnumerator.Current { get; }

	// Methods

	// RVA: -1 Offset: -1
	internal void .ctor(Array array) { }
	/* GenericInstMethod :
	|
	|-RVA: 0x9831B4 Offset: 0x9831B4 VA: 0x9831B4
	|-Array.InternalEnumerator<ArraySegment<byte>>..ctor
	|
	|-RVA: 0x98343C Offset: 0x98343C VA: 0x98343C
	|-Array.InternalEnumerator<DictionaryEntry<object, int, object>>..ctor
	|
	|-RVA: 0x9836C0 Offset: 0x9836C0 VA: 0x9836C0
	|-Array.InternalEnumerator<DictionaryEntry<object, object, object>>..ctor
	|
	|-RVA: 0x983944 Offset: 0x983944 VA: 0x983944
	|-Array.InternalEnumerator<IntervalTree.Entry<object>>..ctor
	|
	|-RVA: 0x983BD8 Offset: 0x983BD8 VA: 0x983BD8
	|-Array.InternalEnumerator<Dictionary.Entry<Guid, object>>..ctor
	|
	|-RVA: 0x983E74 Offset: 0x983E74 VA: 0x983E74
	|-Array.InternalEnumerator<Dictionary.Entry<short, object>>..ctor
	|
	|-RVA: 0x9840F8 Offset: 0x9840F8 VA: 0x9840F8
	|-Array.InternalEnumerator<Dictionary.Entry<short, float>>..ctor
	|
	|-RVA: 0x98437C Offset: 0x98437C VA: 0x98437C
	|-Array.InternalEnumerator<Dictionary.Entry<int, bool>>..ctor
	|
	|-RVA: 0x984600 Offset: 0x984600 VA: 0x984600
	|-Array.InternalEnumerator<Dictionary.Entry<int, char>>..ctor
	|
	|-RVA: 0x984884 Offset: 0x984884 VA: 0x984884
	|-Array.InternalEnumerator<Dictionary.Entry<int, int>>..ctor
	|
	|-RVA: 0x984B08 Offset: 0x984B08 VA: 0x984B08
	|-Array.InternalEnumerator<Dictionary.Entry<int, Int32Enum>>..ctor
	|
	|-RVA: 0x984D8C Offset: 0x984D8C VA: 0x984D8C
	|-Array.InternalEnumerator<Dictionary.Entry<int, long>>..ctor
	|
	|-RVA: 0x985020 Offset: 0x985020 VA: 0x985020
	|-Array.InternalEnumerator<Dictionary.Entry<int, object>>..ctor
	|
	|-RVA: 0x9852A4 Offset: 0x9852A4 VA: 0x9852A4
	|-Array.InternalEnumerator<Dictionary.Entry<int, Vector3>>..ctor
	|
	|-RVA: 0x985538 Offset: 0x985538 VA: 0x985538
	|-Array.InternalEnumerator<Dictionary.Entry<int, JoypadTouchHandler.TouchState>>..ctor
	|
	|-RVA: 0x9857CC Offset: 0x9857CC VA: 0x9857CC
	|-Array.InternalEnumerator<Dictionary.Entry<int, TouchHandler.TouchState>>..ctor
	|
	|-RVA: 0x985A60 Offset: 0x985A60 VA: 0x985A60
	|-Array.InternalEnumerator<Dictionary.Entry<int, UIGesture.TouchData>>..ctor
	|
	|-RVA: 0x985CF4 Offset: 0x985CF4 VA: 0x985CF4
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, bool>>..ctor
	|
	|-RVA: 0x985F78 Offset: 0x985F78 VA: 0x985F78
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, Color>>..ctor
	|
	|-RVA: 0x986214 Offset: 0x986214 VA: 0x986214
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, int>>..ctor
	|
	|-RVA: 0x986498 Offset: 0x986498 VA: 0x986498
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, object>>..ctor
	|
	|-RVA: 0x98671C Offset: 0x98671C VA: 0x98671C
	|-Array.InternalEnumerator<Dictionary.Entry<long, object>>..ctor
	|
	|-RVA: 0x9869B0 Offset: 0x9869B0 VA: 0x9869B0
	|-Array.InternalEnumerator<Dictionary.Entry<object, int>>..ctor
	|
	|-RVA: 0x986C34 Offset: 0x986C34 VA: 0x986C34
	|-Array.InternalEnumerator<Dictionary.Entry<object, object>>..ctor
	|
	|-RVA: 0x986EB8 Offset: 0x986EB8 VA: 0x986EB8
	|-Array.InternalEnumerator<Dictionary.Entry<object, Playable>>..ctor
	|
	|-RVA: 0x98714C Offset: 0x98714C VA: 0x98714C
	|-Array.InternalEnumerator<Dictionary.Entry<object, ResourceLocator>>..ctor
	|
	|-RVA: 0x9873E0 Offset: 0x9873E0 VA: 0x9873E0
	|-Array.InternalEnumerator<Dictionary.Entry<object, float>>..ctor
	|
	|-RVA: 0x987664 Offset: 0x987664 VA: 0x987664
	|-Array.InternalEnumerator<Dictionary.Entry<ushort, object>>..ctor
	|
	|-RVA: 0x9878E8 Offset: 0x9878E8 VA: 0x9878E8
	|-Array.InternalEnumerator<Dictionary.Entry<uint, int>>..ctor
	|
	|-RVA: 0x987B6C Offset: 0x987B6C VA: 0x987B6C
	|-Array.InternalEnumerator<Dictionary.Entry<uint, object>>..ctor
	|
	|-RVA: 0x987DF0 Offset: 0x987DF0 VA: 0x987DF0
	|-Array.InternalEnumerator<Dictionary.Entry<ulong, object>>..ctor
	|
	|-RVA: 0x988084 Offset: 0x988084 VA: 0x988084
	|-Array.InternalEnumerator<Dictionary.Entry<Vector3, int>>..ctor
	|
	|-RVA: 0x988318 Offset: 0x988318 VA: 0x988318
	|-Array.InternalEnumerator<Dictionary.Entry<TerrainUtility.TerrainMap.TileCoord, object>>..ctor
	|
	|-RVA: 0x9885AC Offset: 0x9885AC VA: 0x9885AC
	|-Array.InternalEnumerator<PriorityQueue.IndexedItem<object>>..ctor
	|
	|-RVA: 0x988830 Offset: 0x988830 VA: 0x988830
	|-Array.InternalEnumerator<KeyValuePair<DateTime, object>>..ctor
	|
	|-RVA: 0x988AB4 Offset: 0x988AB4 VA: 0x988AB4
	|-Array.InternalEnumerator<KeyValuePair<Guid, object>>..ctor
	|
	|-RVA: 0x988D48 Offset: 0x988D48 VA: 0x988D48
	|-Array.InternalEnumerator<KeyValuePair<short, object>>..ctor
	|
	|-RVA: 0x988FC0 Offset: 0x988FC0 VA: 0x988FC0
	|-Array.InternalEnumerator<KeyValuePair<short, float>>..ctor
	|
	|-RVA: 0x989238 Offset: 0x989238 VA: 0x989238
	|-Array.InternalEnumerator<KeyValuePair<int, bool>>..ctor
	|
	|-RVA: 0x9894B0 Offset: 0x9894B0 VA: 0x9894B0
	|-Array.InternalEnumerator<KeyValuePair<int, char>>..ctor
	|
	|-RVA: 0x989728 Offset: 0x989728 VA: 0x989728
	|-Array.InternalEnumerator<KeyValuePair<int, int>>..ctor
	|
	|-RVA: 0x9899A0 Offset: 0x9899A0 VA: 0x9899A0
	|-Array.InternalEnumerator<KeyValuePair<int, Int32Enum>>..ctor
	|
	|-RVA: 0x989C18 Offset: 0x989C18 VA: 0x989C18
	|-Array.InternalEnumerator<KeyValuePair<int, long>>..ctor
	|
	|-RVA: 0x989E9C Offset: 0x989E9C VA: 0x989E9C
	|-Array.InternalEnumerator<KeyValuePair<int, object>>..ctor
	|
	|-RVA: 0x98A114 Offset: 0x98A114 VA: 0x98A114
	|-Array.InternalEnumerator<KeyValuePair<int, Vector3>>..ctor
	|
	|-RVA: 0x98A398 Offset: 0x98A398 VA: 0x98A398
	|-Array.InternalEnumerator<KeyValuePair<int, JoypadTouchHandler.TouchState>>..ctor
	|
	|-RVA: 0x98A620 Offset: 0x98A620 VA: 0x98A620
	|-Array.InternalEnumerator<KeyValuePair<int, TouchHandler.TouchState>>..ctor
	|
	|-RVA: 0x98A8A8 Offset: 0x98A8A8 VA: 0x98A8A8
	|-Array.InternalEnumerator<KeyValuePair<int, UIGesture.TouchData>>..ctor
	|
	|-RVA: 0x98AB30 Offset: 0x98AB30 VA: 0x98AB30
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, bool>>..ctor
	|
	|-RVA: 0x98ADA8 Offset: 0x98ADA8 VA: 0x98ADA8
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, Color>>..ctor
	|
	|-RVA: 0x98B03C Offset: 0x98B03C VA: 0x98B03C
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, int>>..ctor
	|
	|-RVA: 0x98B2B4 Offset: 0x98B2B4 VA: 0x98B2B4
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, object>>..ctor
	|
	|-RVA: 0x98B52C Offset: 0x98B52C VA: 0x98B52C
	|-Array.InternalEnumerator<KeyValuePair<long, object>>..ctor
	|
	|-RVA: 0x98B7B0 Offset: 0x98B7B0 VA: 0x98B7B0
	|-Array.InternalEnumerator<KeyValuePair<object, int>>..ctor
	|
	|-RVA: 0x98BA28 Offset: 0x98BA28 VA: 0x98BA28
	|-Array.InternalEnumerator<KeyValuePair<object, object>>..ctor
	|
	|-RVA: 0x98BCA0 Offset: 0x98BCA0 VA: 0x98BCA0
	|-Array.InternalEnumerator<KeyValuePair<object, Playable>>..ctor
	|
	|-RVA: 0x98BF28 Offset: 0x98BF28 VA: 0x98BF28
	|-Array.InternalEnumerator<KeyValuePair<object, ResourceLocator>>..ctor
	|
	|-RVA: 0x98C1B0 Offset: 0x98C1B0 VA: 0x98C1B0
	|-Array.InternalEnumerator<KeyValuePair<object, float>>..ctor
	|
	|-RVA: 0x98C428 Offset: 0x98C428 VA: 0x98C428
	|-Array.InternalEnumerator<KeyValuePair<ushort, object>>..ctor
	|
	|-RVA: 0x98C6A0 Offset: 0x98C6A0 VA: 0x98C6A0
	|-Array.InternalEnumerator<KeyValuePair<uint, int>>..ctor
	|
	|-RVA: 0x98C918 Offset: 0x98C918 VA: 0x98C918
	|-Array.InternalEnumerator<KeyValuePair<uint, object>>..ctor
	|
	|-RVA: 0x98CB90 Offset: 0x98CB90 VA: 0x98CB90
	|-Array.InternalEnumerator<KeyValuePair<ulong, object>>..ctor
	|
	|-RVA: 0x98CE14 Offset: 0x98CE14 VA: 0x98CE14
	|-Array.InternalEnumerator<KeyValuePair<Vector3, int>>..ctor
	|
	|-RVA: 0x98D098 Offset: 0x98D098 VA: 0x98D098
	|-Array.InternalEnumerator<KeyValuePair<TerrainUtility.TerrainMap.TileCoord, object>>..ctor
	|
	|-RVA: 0x98D320 Offset: 0x98D320 VA: 0x98D320
	|-Array.InternalEnumerator<HashSet.Slot<int>>..ctor
	|
	|-RVA: 0x98D5A8 Offset: 0x98D5A8 VA: 0x98D5A8
	|-Array.InternalEnumerator<Set.Slot<Int32Enum>>..ctor
	|
	|-RVA: 0x98D830 Offset: 0x98D830 VA: 0x98D830
	|-Array.InternalEnumerator<HashSet.Slot<object>>..ctor
	|
	|-RVA: 0x98DAB8 Offset: 0x98DAB8 VA: 0x98DAB8
	|-Array.InternalEnumerator<Set.Slot<object>>..ctor
	|
	|-RVA: 0x98DD40 Offset: 0x98DD40 VA: 0x98DD40
	|-Array.InternalEnumerator<HashSet.Slot<uint>>..ctor
	|
	|-RVA: 0x98DFC8 Offset: 0x98DFC8 VA: 0x98DFC8
	|-Array.InternalEnumerator<HashSet.Slot<ulong>>..ctor
	|
	|-RVA: 0x98E24C Offset: 0x98E24C VA: 0x98E24C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Color32>>..ctor
	|
	|-RVA: 0x98E4E0 Offset: 0x98E4E0 VA: 0x98E4E0
	|-Array.InternalEnumerator<TMP_TextProcessingStack<HighlightState>>..ctor
	|
	|-RVA: 0x98E774 Offset: 0x98E774 VA: 0x98E774
	|-Array.InternalEnumerator<TMP_TextProcessingStack<int>>..ctor
	|
	|-RVA: 0x98EA08 Offset: 0x98EA08 VA: 0x98EA08
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Int32Enum>>..ctor
	|
	|-RVA: 0x98EC9C Offset: 0x98EC9C VA: 0x98EC9C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<MaterialReference>>..ctor
	|
	|-RVA: 0x98EF40 Offset: 0x98EF40 VA: 0x98EF40
	|-Array.InternalEnumerator<TMP_TextProcessingStack<object>>..ctor
	|
	|-RVA: 0x98F1D4 Offset: 0x98F1D4 VA: 0x98F1D4
	|-Array.InternalEnumerator<TMP_TextProcessingStack<float>>..ctor
	|
	|-RVA: 0x98F468 Offset: 0x98F468 VA: 0x98F468
	|-Array.InternalEnumerator<TMP_TextProcessingStack<WordWrapState>>..ctor
	|
	|-RVA: 0x98F6F8 Offset: 0x98F6F8 VA: 0x98F6F8
	|-Array.InternalEnumerator<TimeInterval<object>>..ctor
	|
	|-RVA: 0x98F97C Offset: 0x98F97C VA: 0x98F97C
	|-Array.InternalEnumerator<Timestamped<bool>>..ctor
	|
	|-RVA: 0x98FC10 Offset: 0x98FC10 VA: 0x98FC10
	|-Array.InternalEnumerator<Timestamped<object>>..ctor
	|
	|-RVA: 0x9DAF04 Offset: 0x9DAF04 VA: 0x9DAF04
	|-Array.InternalEnumerator<Tuple<object>>..ctor
	|
	|-RVA: 0x9DB164 Offset: 0x9DB164 VA: 0x9DB164
	|-Array.InternalEnumerator<ValueTuple<object, object>>..ctor
	|
	|-RVA: 0x9DB3DC Offset: 0x9DB3DC VA: 0x9DB3DC
	|-Array.InternalEnumerator<ValueTuple<object, object, object>>..ctor
	|
	|-RVA: 0x9DB664 Offset: 0x9DB664 VA: 0x9DB664
	|-Array.InternalEnumerator<BatchVisibility>..ctor
	|
	|-RVA: 0x9DB8EC Offset: 0x9DB8EC VA: 0x9DB8EC
	|-Array.InternalEnumerator<bool>..ctor
	|
	|-RVA: 0x9DBB4C Offset: 0x9DBB4C VA: 0x9DBB4C
	|-Array.InternalEnumerator<Bounds>..ctor
	|
	|-RVA: 0x9DBDE0 Offset: 0x9DBDE0 VA: 0x9DBDE0
	|-Array.InternalEnumerator<byte>..ctor
	|
	|-RVA: 0x9DC040 Offset: 0x9DC040 VA: 0x9DC040
	|-Array.InternalEnumerator<ByteEnum>..ctor
	|
	|-RVA: 0x9DC2A0 Offset: 0x9DC2A0 VA: 0x9DC2A0
	|-Array.InternalEnumerator<CancellationToken>..ctor
	|
	|-RVA: 0x9DC500 Offset: 0x9DC500 VA: 0x9DC500
	|-Array.InternalEnumerator<CancellationTokenRegistration>..ctor
	|
	|-RVA: 0x9DC788 Offset: 0x9DC788 VA: 0x9DC788
	|-Array.InternalEnumerator<char>..ctor
	|
	|-RVA: 0x9DC9E8 Offset: 0x9DC9E8 VA: 0x9DC9E8
	|-Array.InternalEnumerator<Color>..ctor
	|
	|-RVA: 0x9DCC6C Offset: 0x9DCC6C VA: 0x9DCC6C
	|-Array.InternalEnumerator<Color32>..ctor
	|
	|-RVA: 0x9DCECC Offset: 0x9DCECC VA: 0x9DCECC
	|-Array.InternalEnumerator<ColorBlock>..ctor
	|
	|-RVA: 0x9DD15C Offset: 0x9DD15C VA: 0x9DD15C
	|-Array.InternalEnumerator<ContactPoint>..ctor
	|
	|-RVA: 0x9DD3F0 Offset: 0x9DD3F0 VA: 0x9DD3F0
	|-Array.InternalEnumerator<ContactPoint2D>..ctor
	|
	|-RVA: 0x9DD694 Offset: 0x9DD694 VA: 0x9DD694
	|-Array.InternalEnumerator<CustomAttributeNamedArgument>..ctor
	|
	|-RVA: 0x9DD91C Offset: 0x9DD91C VA: 0x9DD91C
	|-Array.InternalEnumerator<CustomAttributeTypedArgument>..ctor
	|
	|-RVA: 0x9DDB94 Offset: 0x9DDB94 VA: 0x9DDB94
	|-Array.InternalEnumerator<DateTime>..ctor
	|
	|-RVA: 0x9DDE0C Offset: 0x9DDE0C VA: 0x9DDE0C
	|-Array.InternalEnumerator<Decimal>..ctor
	|
	|-RVA: 0x9DE090 Offset: 0x9DE090 VA: 0x9DE090
	|-Array.InternalEnumerator<DictionaryEntry>..ctor
	|
	|-RVA: 0x9DE308 Offset: 0x9DE308 VA: 0x9DE308
	|-Array.InternalEnumerator<double>..ctor
	|
	|-RVA: 0x9DE568 Offset: 0x9DE568 VA: 0x9DE568
	|-Array.InternalEnumerator<Ephemeron>..ctor
	|
	|-RVA: 0x9DE7E0 Offset: 0x9DE7E0 VA: 0x9DE7E0
	|-Array.InternalEnumerator<GCHandle>..ctor
	|
	|-RVA: 0x9DEA40 Offset: 0x9DEA40 VA: 0x9DEA40
	|-Array.InternalEnumerator<GlyphMarshallingStruct>..ctor
	|
	|-RVA: 0x9DECD4 Offset: 0x9DECD4 VA: 0x9DECD4
	|-Array.InternalEnumerator<GlyphPairAdjustmentRecord>..ctor
	|
	|-RVA: 0x9DEF68 Offset: 0x9DEF68 VA: 0x9DEF68
	|-Array.InternalEnumerator<GlyphRect>..ctor
	|
	|-RVA: 0x9DF1EC Offset: 0x9DF1EC VA: 0x9DF1EC
	|-Array.InternalEnumerator<Guid>..ctor
	|
	|-RVA: 0x9DF470 Offset: 0x9DF470 VA: 0x9DF470
	|-Array.InternalEnumerator<HeaderVariantInfo>..ctor
	|
	|-RVA: 0x9DF6E8 Offset: 0x9DF6E8 VA: 0x9DF6E8
	|-Array.InternalEnumerator<HighlightState>..ctor
	|
	|-RVA: 0x9DF97C Offset: 0x9DF97C VA: 0x9DF97C
	|-Array.InternalEnumerator<HumanBone>..ctor
	|
	|-RVA: 0x9DFC20 Offset: 0x9DFC20 VA: 0x9DFC20
	|-Array.InternalEnumerator<short>..ctor
	|
	|-RVA: 0x9DFE80 Offset: 0x9DFE80 VA: 0x9DFE80
	|-Array.InternalEnumerator<int>..ctor
	|
	|-RVA: 0x9E00E0 Offset: 0x9E00E0 VA: 0x9E00E0
	|-Array.InternalEnumerator<Int32Enum>..ctor
	|
	|-RVA: 0x9E0340 Offset: 0x9E0340 VA: 0x9E0340
	|-Array.InternalEnumerator<long>..ctor
	|
	|-RVA: 0x9E05A0 Offset: 0x9E05A0 VA: 0x9E05A0
	|-Array.InternalEnumerator<IntPtr>..ctor
	|
	|-RVA: 0x9E0800 Offset: 0x9E0800 VA: 0x9E0800
	|-Array.InternalEnumerator<InternalCodePageDataItem>..ctor
	|
	|-RVA: 0x9E0A88 Offset: 0x9E0A88 VA: 0x9E0A88
	|-Array.InternalEnumerator<InternalEncodingDataItem>..ctor
	|
	|-RVA: 0x9E0D00 Offset: 0x9E0D00 VA: 0x9E0D00
	|-Array.InternalEnumerator<IntervalTreeNode>..ctor
	|
	|-RVA: 0x9E0F94 Offset: 0x9E0F94 VA: 0x9E0F94
	|-Array.InternalEnumerator<Keyframe>..ctor
	|
	|-RVA: 0x9E1230 Offset: 0x9E1230 VA: 0x9E1230
	|-Array.InternalEnumerator<LightDataGI>..ctor
	|
	|-RVA: 0x9E14C0 Offset: 0x9E14C0 VA: 0x9E14C0
	|-Array.InternalEnumerator<MaterialReference>..ctor
	|
	|-RVA: 0x9E1754 Offset: 0x9E1754 VA: 0x9E1754
	|-Array.InternalEnumerator<MessageStringParameterBlock>..ctor
	|
	|-RVA: 0x9E19CC Offset: 0x9E19CC VA: 0x9E19CC
	|-Array.InternalEnumerator<Navigation>..ctor
	|
	|-RVA: 0x9E1C60 Offset: 0x9E1C60 VA: 0x9E1C60
	|-Array.InternalEnumerator<object>..ctor
	|
	|-RVA: 0x9E1E70 Offset: 0x9E1E70 VA: 0x9E1E70
	|-Array.InternalEnumerator<ParameterModifier>..ctor
	|
	|-RVA: 0x9E20D0 Offset: 0x9E20D0 VA: 0x9E20D0
	|-Array.InternalEnumerator<Plane>..ctor
	|
	|-RVA: 0x9E2354 Offset: 0x9E2354 VA: 0x9E2354
	|-Array.InternalEnumerator<Playable>..ctor
	|
	|-RVA: 0x9E25CC Offset: 0x9E25CC VA: 0x9E25CC
	|-Array.InternalEnumerator<PlayableBinding>..ctor
	|
	|-RVA: 0x9E2850 Offset: 0x9E2850 VA: 0x9E2850
	|-Array.InternalEnumerator<PlayerLoopSystem>..ctor
	|
	|-RVA: 0x9E2AE4 Offset: 0x9E2AE4 VA: 0x9E2AE4
	|-Array.InternalEnumerator<Quaternion>..ctor
	|
	|-RVA: 0x9E2D68 Offset: 0x9E2D68 VA: 0x9E2D68
	|-Array.InternalEnumerator<RaycastHit>..ctor
	|
	|-RVA: 0x9E2FFC Offset: 0x9E2FFC VA: 0x9E2FFC
	|-Array.InternalEnumerator<RaycastHit2D>..ctor
	|
	|-RVA: 0x9E3290 Offset: 0x9E3290 VA: 0x9E3290
	|-Array.InternalEnumerator<RaycastResult>..ctor
	|
	|-RVA: 0x9E3520 Offset: 0x9E3520 VA: 0x9E3520
	|-Array.InternalEnumerator<Rect>..ctor
	|
	|-RVA: 0x9E37A4 Offset: 0x9E37A4 VA: 0x9E37A4
	|-Array.InternalEnumerator<ResourceLocator>..ctor
	|
	|-RVA: 0x9E3A1C Offset: 0x9E3A1C VA: 0x9E3A1C
	|-Array.InternalEnumerator<RichTextTagAttribute>..ctor
	|
	|-RVA: 0x9E3CB0 Offset: 0x9E3CB0 VA: 0x9E3CB0
	|-Array.InternalEnumerator<sbyte>..ctor
	|
	|-RVA: 0x9E3F10 Offset: 0x9E3F10 VA: 0x9E3F10
	|-Array.InternalEnumerator<float>..ctor
	|
	|-RVA: 0x9E4170 Offset: 0x9E4170 VA: 0x9E4170
	|-Array.InternalEnumerator<SkeletonBone>..ctor
	|
	|-RVA: 0x9E4404 Offset: 0x9E4404 VA: 0x9E4404
	|-Array.InternalEnumerator<SpriteState>..ctor
	|
	|-RVA: 0x9E4688 Offset: 0x9E4688 VA: 0x9E4688
	|-Array.InternalEnumerator<TMP_CharacterInfo>..ctor
	|
	|-RVA: 0x9E4918 Offset: 0x9E4918 VA: 0x9E4918
	|-Array.InternalEnumerator<TMP_FontWeightPair>..ctor
	|
	|-RVA: 0x9E4B90 Offset: 0x9E4B90 VA: 0x9E4B90
	|-Array.InternalEnumerator<TMP_LineInfo>..ctor
	|
	|-RVA: 0x9E4E20 Offset: 0x9E4E20 VA: 0x9E4E20
	|-Array.InternalEnumerator<TMP_LinkInfo>..ctor
	|
	|-RVA: 0x9E50BC Offset: 0x9E50BC VA: 0x9E50BC
	|-Array.InternalEnumerator<TMP_MeshInfo>..ctor
	|
	|-RVA: 0x9E5350 Offset: 0x9E5350 VA: 0x9E5350
	|-Array.InternalEnumerator<TMP_PageInfo>..ctor
	|
	|-RVA: 0x9E55E4 Offset: 0x9E55E4 VA: 0x9E55E4
	|-Array.InternalEnumerator<TMP_WordInfo>..ctor
	|
	|-RVA: 0x9E5868 Offset: 0x9E5868 VA: 0x9E5868
	|-Array.InternalEnumerator<TimeSpan>..ctor
	|
	|-RVA: 0x9E5AE0 Offset: 0x9E5AE0 VA: 0x9E5AE0
	|-Array.InternalEnumerator<Touch>..ctor
	|
	|-RVA: 0x9E5D70 Offset: 0x9E5D70 VA: 0x9E5D70
	|-Array.InternalEnumerator<UICharInfo>..ctor
	|
	|-RVA: 0x9E5FF8 Offset: 0x9E5FF8 VA: 0x9E5FF8
	|-Array.InternalEnumerator<UILineInfo>..ctor
	|
	|-RVA: 0x9E627C Offset: 0x9E627C VA: 0x9E627C
	|-Array.InternalEnumerator<UIVertex>..ctor
	|
	|-RVA: 0x9E650C Offset: 0x9E650C VA: 0x9E650C
	|-Array.InternalEnumerator<ushort>..ctor
	|
	|-RVA: 0x9E676C Offset: 0x9E676C VA: 0x9E676C
	|-Array.InternalEnumerator<UInt16Enum>..ctor
	|
	|-RVA: 0x9E69CC Offset: 0x9E69CC VA: 0x9E69CC
	|-Array.InternalEnumerator<uint>..ctor
	|
	|-RVA: 0x9E6C2C Offset: 0x9E6C2C VA: 0x9E6C2C
	|-Array.InternalEnumerator<UInt32Enum>..ctor
	|
	|-RVA: 0x9E6E8C Offset: 0x9E6E8C VA: 0x9E6E8C
	|-Array.InternalEnumerator<ulong>..ctor
	|
	|-RVA: 0x9E70EC Offset: 0x9E70EC VA: 0x9E70EC
	|-Array.InternalEnumerator<Unit>..ctor
	|
	|-RVA: 0x9E734C Offset: 0x9E734C VA: 0x9E734C
	|-Array.InternalEnumerator<Vector2>..ctor
	|
	|-RVA: 0x9E75C4 Offset: 0x9E75C4 VA: 0x9E75C4
	|-Array.InternalEnumerator<Vector3>..ctor
	|
	|-RVA: 0x9E784C Offset: 0x9E784C VA: 0x9E784C
	|-Array.InternalEnumerator<Vector4>..ctor
	|
	|-RVA: 0x9E7AD0 Offset: 0x9E7AD0 VA: 0x9E7AD0
	|-Array.InternalEnumerator<WordWrapState>..ctor
	|
	|-RVA: 0x9E7D60 Offset: 0x9E7D60 VA: 0x9E7D60
	|-Array.InternalEnumerator<X509ChainStatus>..ctor
	|
	|-RVA: 0x9E7FD8 Offset: 0x9E7FD8 VA: 0x9E7FD8
	|-Array.InternalEnumerator<jvalue>..ctor
	|
	|-RVA: 0x9E8250 Offset: 0x9E8250 VA: 0x9E8250
	|-Array.InternalEnumerator<AnimationOutputWeightProcessor.WeightInfo>..ctor
	|
	|-RVA: 0x9E84E4 Offset: 0x9E84E4 VA: 0x9E84E4
	|-Array.InternalEnumerator<BeforeRenderHelper.OrderBlock>..ctor
	|
	|-RVA: 0x9E875C Offset: 0x9E875C VA: 0x9E875C
	|-Array.InternalEnumerator<Camera.RenderRequest>..ctor
	|
	|-RVA: 0x9E89E4 Offset: 0x9E89E4 VA: 0x9E89E4
	|-Array.InternalEnumerator<CodePointIndexer.TableRange>..ctor
	|
	|-RVA: 0x9E8C78 Offset: 0x9E8C78 VA: 0x9E8C78
	|-Array.InternalEnumerator<CookieTokenizer.RecognizedAttribute>..ctor
	|
	|-RVA: 0x9E8EF0 Offset: 0x9E8EF0 VA: 0x9E8EF0
	|-Array.InternalEnumerator<Hashtable.bucket>..ctor
	|
	|-RVA: 0x9E9178 Offset: 0x9E9178 VA: 0x9E9178
	|-Array.InternalEnumerator<JoypadTouchHandler.TouchState>..ctor
	|
	|-RVA: 0x9E93F0 Offset: 0x9E93F0 VA: 0x9E93F0
	|-Array.InternalEnumerator<ParameterizedStrings.FormatParam>..ctor
	|
	|-RVA: 0x9E9668 Offset: 0x9E9668 VA: 0x9E9668
	|-Array.InternalEnumerator<RegexCharClass.LowerCaseMapping>..ctor
	|
	|-RVA: 0x9E98F0 Offset: 0x9E98F0 VA: 0x9E98F0
	|-Array.InternalEnumerator<SendMouseEvents.HitInfo>..ctor
	|
	|-RVA: 0x9E9B68 Offset: 0x9E9B68 VA: 0x9E9B68
	|-Array.InternalEnumerator<Socket.WSABUF>..ctor
	|
	|-RVA: 0x9E9DE0 Offset: 0x9E9DE0 VA: 0x9E9DE0
	|-Array.InternalEnumerator<TMP_Text.UnicodeChar>..ctor
	|
	|-RVA: 0x9EA068 Offset: 0x9EA068 VA: 0x9EA068
	|-Array.InternalEnumerator<TexturePacker_JsonArray.Frame>..ctor
	|
	|-RVA: 0x9EA30C Offset: 0x9EA30C VA: 0x9EA30C
	|-Array.InternalEnumerator<TimeNotificationBehaviour.NotificationEntry>..ctor
	|
	|-RVA: 0x9EA590 Offset: 0x9EA590 VA: 0x9EA590
	|-Array.InternalEnumerator<TouchHandler.TouchState>..ctor
	|
	|-RVA: 0x9EA808 Offset: 0x9EA808 VA: 0x9EA808
	|-Array.InternalEnumerator<UIGesture.TouchData>..ctor
	|
	|-RVA: 0x9EAA80 Offset: 0x9EAA80 VA: 0x9EAA80
	|-Array.InternalEnumerator<UmAlQuraCalendar.DateMapping>..ctor
	|
	|-RVA: 0x9EAD04 Offset: 0x9EAD04 VA: 0x9EAD04
	|-Array.InternalEnumerator<UnitySynchronizationContext.WorkRequest>..ctor
	|
	|-RVA: 0x9EAF8C Offset: 0x9EAF8C VA: 0x9EAF8C
	|-Array.InternalEnumerator<AssetBundleBuildMap.AssetBundleEntry.AssetPathString>..ctor
	|
	|-RVA: 0x9EB204 Offset: 0x9EB204 VA: 0x9EB204
	|-Array.InternalEnumerator<TerrainUtility.TerrainMap.TileCoord>..ctor
	*/

	// RVA: -1 Offset: -1 Slot: 5
	public void Dispose() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x9831D4 Offset: 0x9831D4 VA: 0x9831D4
	|-Array.InternalEnumerator<ArraySegment<byte>>.Dispose
	|
	|-RVA: 0x98345C Offset: 0x98345C VA: 0x98345C
	|-Array.InternalEnumerator<DictionaryEntry<object, int, object>>.Dispose
	|
	|-RVA: 0x9836E0 Offset: 0x9836E0 VA: 0x9836E0
	|-Array.InternalEnumerator<DictionaryEntry<object, object, object>>.Dispose
	|
	|-RVA: 0x983964 Offset: 0x983964 VA: 0x983964
	|-Array.InternalEnumerator<IntervalTree.Entry<object>>.Dispose
	|
	|-RVA: 0x983BF8 Offset: 0x983BF8 VA: 0x983BF8
	|-Array.InternalEnumerator<Dictionary.Entry<Guid, object>>.Dispose
	|
	|-RVA: 0x983E94 Offset: 0x983E94 VA: 0x983E94
	|-Array.InternalEnumerator<Dictionary.Entry<short, object>>.Dispose
	|
	|-RVA: 0x984118 Offset: 0x984118 VA: 0x984118
	|-Array.InternalEnumerator<Dictionary.Entry<short, float>>.Dispose
	|
	|-RVA: 0x98439C Offset: 0x98439C VA: 0x98439C
	|-Array.InternalEnumerator<Dictionary.Entry<int, bool>>.Dispose
	|
	|-RVA: 0x984620 Offset: 0x984620 VA: 0x984620
	|-Array.InternalEnumerator<Dictionary.Entry<int, char>>.Dispose
	|
	|-RVA: 0x9848A4 Offset: 0x9848A4 VA: 0x9848A4
	|-Array.InternalEnumerator<Dictionary.Entry<int, int>>.Dispose
	|
	|-RVA: 0x984B28 Offset: 0x984B28 VA: 0x984B28
	|-Array.InternalEnumerator<Dictionary.Entry<int, Int32Enum>>.Dispose
	|
	|-RVA: 0x984DAC Offset: 0x984DAC VA: 0x984DAC
	|-Array.InternalEnumerator<Dictionary.Entry<int, long>>.Dispose
	|
	|-RVA: 0x985040 Offset: 0x985040 VA: 0x985040
	|-Array.InternalEnumerator<Dictionary.Entry<int, object>>.Dispose
	|
	|-RVA: 0x9852C4 Offset: 0x9852C4 VA: 0x9852C4
	|-Array.InternalEnumerator<Dictionary.Entry<int, Vector3>>.Dispose
	|
	|-RVA: 0x985558 Offset: 0x985558 VA: 0x985558
	|-Array.InternalEnumerator<Dictionary.Entry<int, JoypadTouchHandler.TouchState>>.Dispose
	|
	|-RVA: 0x9857EC Offset: 0x9857EC VA: 0x9857EC
	|-Array.InternalEnumerator<Dictionary.Entry<int, TouchHandler.TouchState>>.Dispose
	|
	|-RVA: 0x985A80 Offset: 0x985A80 VA: 0x985A80
	|-Array.InternalEnumerator<Dictionary.Entry<int, UIGesture.TouchData>>.Dispose
	|
	|-RVA: 0x985D14 Offset: 0x985D14 VA: 0x985D14
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, bool>>.Dispose
	|
	|-RVA: 0x985F98 Offset: 0x985F98 VA: 0x985F98
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, Color>>.Dispose
	|
	|-RVA: 0x986234 Offset: 0x986234 VA: 0x986234
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, int>>.Dispose
	|
	|-RVA: 0x9864B8 Offset: 0x9864B8 VA: 0x9864B8
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, object>>.Dispose
	|
	|-RVA: 0x98673C Offset: 0x98673C VA: 0x98673C
	|-Array.InternalEnumerator<Dictionary.Entry<long, object>>.Dispose
	|
	|-RVA: 0x9869D0 Offset: 0x9869D0 VA: 0x9869D0
	|-Array.InternalEnumerator<Dictionary.Entry<object, int>>.Dispose
	|
	|-RVA: 0x986C54 Offset: 0x986C54 VA: 0x986C54
	|-Array.InternalEnumerator<Dictionary.Entry<object, object>>.Dispose
	|
	|-RVA: 0x986ED8 Offset: 0x986ED8 VA: 0x986ED8
	|-Array.InternalEnumerator<Dictionary.Entry<object, Playable>>.Dispose
	|
	|-RVA: 0x98716C Offset: 0x98716C VA: 0x98716C
	|-Array.InternalEnumerator<Dictionary.Entry<object, ResourceLocator>>.Dispose
	|
	|-RVA: 0x987400 Offset: 0x987400 VA: 0x987400
	|-Array.InternalEnumerator<Dictionary.Entry<object, float>>.Dispose
	|
	|-RVA: 0x987684 Offset: 0x987684 VA: 0x987684
	|-Array.InternalEnumerator<Dictionary.Entry<ushort, object>>.Dispose
	|
	|-RVA: 0x987908 Offset: 0x987908 VA: 0x987908
	|-Array.InternalEnumerator<Dictionary.Entry<uint, int>>.Dispose
	|
	|-RVA: 0x987B8C Offset: 0x987B8C VA: 0x987B8C
	|-Array.InternalEnumerator<Dictionary.Entry<uint, object>>.Dispose
	|
	|-RVA: 0x987E10 Offset: 0x987E10 VA: 0x987E10
	|-Array.InternalEnumerator<Dictionary.Entry<ulong, object>>.Dispose
	|
	|-RVA: 0x9880A4 Offset: 0x9880A4 VA: 0x9880A4
	|-Array.InternalEnumerator<Dictionary.Entry<Vector3, int>>.Dispose
	|
	|-RVA: 0x988338 Offset: 0x988338 VA: 0x988338
	|-Array.InternalEnumerator<Dictionary.Entry<TerrainUtility.TerrainMap.TileCoord, object>>.Dispose
	|
	|-RVA: 0x9885CC Offset: 0x9885CC VA: 0x9885CC
	|-Array.InternalEnumerator<PriorityQueue.IndexedItem<object>>.Dispose
	|
	|-RVA: 0x988850 Offset: 0x988850 VA: 0x988850
	|-Array.InternalEnumerator<KeyValuePair<DateTime, object>>.Dispose
	|
	|-RVA: 0x988AD4 Offset: 0x988AD4 VA: 0x988AD4
	|-Array.InternalEnumerator<KeyValuePair<Guid, object>>.Dispose
	|
	|-RVA: 0x988D68 Offset: 0x988D68 VA: 0x988D68
	|-Array.InternalEnumerator<KeyValuePair<short, object>>.Dispose
	|
	|-RVA: 0x988FE0 Offset: 0x988FE0 VA: 0x988FE0
	|-Array.InternalEnumerator<KeyValuePair<short, float>>.Dispose
	|
	|-RVA: 0x989258 Offset: 0x989258 VA: 0x989258
	|-Array.InternalEnumerator<KeyValuePair<int, bool>>.Dispose
	|
	|-RVA: 0x9894D0 Offset: 0x9894D0 VA: 0x9894D0
	|-Array.InternalEnumerator<KeyValuePair<int, char>>.Dispose
	|
	|-RVA: 0x989748 Offset: 0x989748 VA: 0x989748
	|-Array.InternalEnumerator<KeyValuePair<int, int>>.Dispose
	|
	|-RVA: 0x9899C0 Offset: 0x9899C0 VA: 0x9899C0
	|-Array.InternalEnumerator<KeyValuePair<int, Int32Enum>>.Dispose
	|
	|-RVA: 0x989C38 Offset: 0x989C38 VA: 0x989C38
	|-Array.InternalEnumerator<KeyValuePair<int, long>>.Dispose
	|
	|-RVA: 0x989EBC Offset: 0x989EBC VA: 0x989EBC
	|-Array.InternalEnumerator<KeyValuePair<int, object>>.Dispose
	|
	|-RVA: 0x98A134 Offset: 0x98A134 VA: 0x98A134
	|-Array.InternalEnumerator<KeyValuePair<int, Vector3>>.Dispose
	|
	|-RVA: 0x98A3B8 Offset: 0x98A3B8 VA: 0x98A3B8
	|-Array.InternalEnumerator<KeyValuePair<int, JoypadTouchHandler.TouchState>>.Dispose
	|
	|-RVA: 0x98A640 Offset: 0x98A640 VA: 0x98A640
	|-Array.InternalEnumerator<KeyValuePair<int, TouchHandler.TouchState>>.Dispose
	|
	|-RVA: 0x98A8C8 Offset: 0x98A8C8 VA: 0x98A8C8
	|-Array.InternalEnumerator<KeyValuePair<int, UIGesture.TouchData>>.Dispose
	|
	|-RVA: 0x98AB50 Offset: 0x98AB50 VA: 0x98AB50
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, bool>>.Dispose
	|
	|-RVA: 0x98ADC8 Offset: 0x98ADC8 VA: 0x98ADC8
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, Color>>.Dispose
	|
	|-RVA: 0x98B05C Offset: 0x98B05C VA: 0x98B05C
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, int>>.Dispose
	|
	|-RVA: 0x98B2D4 Offset: 0x98B2D4 VA: 0x98B2D4
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, object>>.Dispose
	|
	|-RVA: 0x98B54C Offset: 0x98B54C VA: 0x98B54C
	|-Array.InternalEnumerator<KeyValuePair<long, object>>.Dispose
	|
	|-RVA: 0x98B7D0 Offset: 0x98B7D0 VA: 0x98B7D0
	|-Array.InternalEnumerator<KeyValuePair<object, int>>.Dispose
	|
	|-RVA: 0x98BA48 Offset: 0x98BA48 VA: 0x98BA48
	|-Array.InternalEnumerator<KeyValuePair<object, object>>.Dispose
	|
	|-RVA: 0x98BCC0 Offset: 0x98BCC0 VA: 0x98BCC0
	|-Array.InternalEnumerator<KeyValuePair<object, Playable>>.Dispose
	|
	|-RVA: 0x98BF48 Offset: 0x98BF48 VA: 0x98BF48
	|-Array.InternalEnumerator<KeyValuePair<object, ResourceLocator>>.Dispose
	|
	|-RVA: 0x98C1D0 Offset: 0x98C1D0 VA: 0x98C1D0
	|-Array.InternalEnumerator<KeyValuePair<object, float>>.Dispose
	|
	|-RVA: 0x98C448 Offset: 0x98C448 VA: 0x98C448
	|-Array.InternalEnumerator<KeyValuePair<ushort, object>>.Dispose
	|
	|-RVA: 0x98C6C0 Offset: 0x98C6C0 VA: 0x98C6C0
	|-Array.InternalEnumerator<KeyValuePair<uint, int>>.Dispose
	|
	|-RVA: 0x98C938 Offset: 0x98C938 VA: 0x98C938
	|-Array.InternalEnumerator<KeyValuePair<uint, object>>.Dispose
	|
	|-RVA: 0x98CBB0 Offset: 0x98CBB0 VA: 0x98CBB0
	|-Array.InternalEnumerator<KeyValuePair<ulong, object>>.Dispose
	|
	|-RVA: 0x98CE34 Offset: 0x98CE34 VA: 0x98CE34
	|-Array.InternalEnumerator<KeyValuePair<Vector3, int>>.Dispose
	|
	|-RVA: 0x98D0B8 Offset: 0x98D0B8 VA: 0x98D0B8
	|-Array.InternalEnumerator<KeyValuePair<TerrainUtility.TerrainMap.TileCoord, object>>.Dispose
	|
	|-RVA: 0x98D340 Offset: 0x98D340 VA: 0x98D340
	|-Array.InternalEnumerator<HashSet.Slot<int>>.Dispose
	|
	|-RVA: 0x98D5C8 Offset: 0x98D5C8 VA: 0x98D5C8
	|-Array.InternalEnumerator<Set.Slot<Int32Enum>>.Dispose
	|
	|-RVA: 0x98D850 Offset: 0x98D850 VA: 0x98D850
	|-Array.InternalEnumerator<HashSet.Slot<object>>.Dispose
	|
	|-RVA: 0x98DAD8 Offset: 0x98DAD8 VA: 0x98DAD8
	|-Array.InternalEnumerator<Set.Slot<object>>.Dispose
	|
	|-RVA: 0x98DD60 Offset: 0x98DD60 VA: 0x98DD60
	|-Array.InternalEnumerator<HashSet.Slot<uint>>.Dispose
	|
	|-RVA: 0x98DFE8 Offset: 0x98DFE8 VA: 0x98DFE8
	|-Array.InternalEnumerator<HashSet.Slot<ulong>>.Dispose
	|
	|-RVA: 0x98E26C Offset: 0x98E26C VA: 0x98E26C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Color32>>.Dispose
	|
	|-RVA: 0x98E500 Offset: 0x98E500 VA: 0x98E500
	|-Array.InternalEnumerator<TMP_TextProcessingStack<HighlightState>>.Dispose
	|
	|-RVA: 0x98E794 Offset: 0x98E794 VA: 0x98E794
	|-Array.InternalEnumerator<TMP_TextProcessingStack<int>>.Dispose
	|
	|-RVA: 0x98EA28 Offset: 0x98EA28 VA: 0x98EA28
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Int32Enum>>.Dispose
	|
	|-RVA: 0x98ECBC Offset: 0x98ECBC VA: 0x98ECBC
	|-Array.InternalEnumerator<TMP_TextProcessingStack<MaterialReference>>.Dispose
	|
	|-RVA: 0x98EF60 Offset: 0x98EF60 VA: 0x98EF60
	|-Array.InternalEnumerator<TMP_TextProcessingStack<object>>.Dispose
	|
	|-RVA: 0x98F1F4 Offset: 0x98F1F4 VA: 0x98F1F4
	|-Array.InternalEnumerator<TMP_TextProcessingStack<float>>.Dispose
	|
	|-RVA: 0x98F488 Offset: 0x98F488 VA: 0x98F488
	|-Array.InternalEnumerator<TMP_TextProcessingStack<WordWrapState>>.Dispose
	|
	|-RVA: 0x98F718 Offset: 0x98F718 VA: 0x98F718
	|-Array.InternalEnumerator<TimeInterval<object>>.Dispose
	|
	|-RVA: 0x98F99C Offset: 0x98F99C VA: 0x98F99C
	|-Array.InternalEnumerator<Timestamped<bool>>.Dispose
	|
	|-RVA: 0x98FC30 Offset: 0x98FC30 VA: 0x98FC30
	|-Array.InternalEnumerator<Timestamped<object>>.Dispose
	|
	|-RVA: 0x9DAF24 Offset: 0x9DAF24 VA: 0x9DAF24
	|-Array.InternalEnumerator<Tuple<object>>.Dispose
	|
	|-RVA: 0x9DB184 Offset: 0x9DB184 VA: 0x9DB184
	|-Array.InternalEnumerator<ValueTuple<object, object>>.Dispose
	|
	|-RVA: 0x9DB3FC Offset: 0x9DB3FC VA: 0x9DB3FC
	|-Array.InternalEnumerator<ValueTuple<object, object, object>>.Dispose
	|
	|-RVA: 0x9DB684 Offset: 0x9DB684 VA: 0x9DB684
	|-Array.InternalEnumerator<BatchVisibility>.Dispose
	|
	|-RVA: 0x9DB90C Offset: 0x9DB90C VA: 0x9DB90C
	|-Array.InternalEnumerator<bool>.Dispose
	|
	|-RVA: 0x9DBB6C Offset: 0x9DBB6C VA: 0x9DBB6C
	|-Array.InternalEnumerator<Bounds>.Dispose
	|
	|-RVA: 0x9DBE00 Offset: 0x9DBE00 VA: 0x9DBE00
	|-Array.InternalEnumerator<byte>.Dispose
	|
	|-RVA: 0x9DC060 Offset: 0x9DC060 VA: 0x9DC060
	|-Array.InternalEnumerator<ByteEnum>.Dispose
	|
	|-RVA: 0x9DC2C0 Offset: 0x9DC2C0 VA: 0x9DC2C0
	|-Array.InternalEnumerator<CancellationToken>.Dispose
	|
	|-RVA: 0x9DC520 Offset: 0x9DC520 VA: 0x9DC520
	|-Array.InternalEnumerator<CancellationTokenRegistration>.Dispose
	|
	|-RVA: 0x9DC7A8 Offset: 0x9DC7A8 VA: 0x9DC7A8
	|-Array.InternalEnumerator<char>.Dispose
	|
	|-RVA: 0x9DCA08 Offset: 0x9DCA08 VA: 0x9DCA08
	|-Array.InternalEnumerator<Color>.Dispose
	|
	|-RVA: 0x9DCC8C Offset: 0x9DCC8C VA: 0x9DCC8C
	|-Array.InternalEnumerator<Color32>.Dispose
	|
	|-RVA: 0x9DCEEC Offset: 0x9DCEEC VA: 0x9DCEEC
	|-Array.InternalEnumerator<ColorBlock>.Dispose
	|
	|-RVA: 0x9DD17C Offset: 0x9DD17C VA: 0x9DD17C
	|-Array.InternalEnumerator<ContactPoint>.Dispose
	|
	|-RVA: 0x9DD410 Offset: 0x9DD410 VA: 0x9DD410
	|-Array.InternalEnumerator<ContactPoint2D>.Dispose
	|
	|-RVA: 0x9DD6B4 Offset: 0x9DD6B4 VA: 0x9DD6B4
	|-Array.InternalEnumerator<CustomAttributeNamedArgument>.Dispose
	|
	|-RVA: 0x9DD93C Offset: 0x9DD93C VA: 0x9DD93C
	|-Array.InternalEnumerator<CustomAttributeTypedArgument>.Dispose
	|
	|-RVA: 0x9DDBB4 Offset: 0x9DDBB4 VA: 0x9DDBB4
	|-Array.InternalEnumerator<DateTime>.Dispose
	|
	|-RVA: 0x9DDE2C Offset: 0x9DDE2C VA: 0x9DDE2C
	|-Array.InternalEnumerator<Decimal>.Dispose
	|
	|-RVA: 0x9DE0B0 Offset: 0x9DE0B0 VA: 0x9DE0B0
	|-Array.InternalEnumerator<DictionaryEntry>.Dispose
	|
	|-RVA: 0x9DE328 Offset: 0x9DE328 VA: 0x9DE328
	|-Array.InternalEnumerator<double>.Dispose
	|
	|-RVA: 0x9DE588 Offset: 0x9DE588 VA: 0x9DE588
	|-Array.InternalEnumerator<Ephemeron>.Dispose
	|
	|-RVA: 0x9DE800 Offset: 0x9DE800 VA: 0x9DE800
	|-Array.InternalEnumerator<GCHandle>.Dispose
	|
	|-RVA: 0x9DEA60 Offset: 0x9DEA60 VA: 0x9DEA60
	|-Array.InternalEnumerator<GlyphMarshallingStruct>.Dispose
	|
	|-RVA: 0x9DECF4 Offset: 0x9DECF4 VA: 0x9DECF4
	|-Array.InternalEnumerator<GlyphPairAdjustmentRecord>.Dispose
	|
	|-RVA: 0x9DEF88 Offset: 0x9DEF88 VA: 0x9DEF88
	|-Array.InternalEnumerator<GlyphRect>.Dispose
	|
	|-RVA: 0x9DF20C Offset: 0x9DF20C VA: 0x9DF20C
	|-Array.InternalEnumerator<Guid>.Dispose
	|
	|-RVA: 0x9DF490 Offset: 0x9DF490 VA: 0x9DF490
	|-Array.InternalEnumerator<HeaderVariantInfo>.Dispose
	|
	|-RVA: 0x9DF708 Offset: 0x9DF708 VA: 0x9DF708
	|-Array.InternalEnumerator<HighlightState>.Dispose
	|
	|-RVA: 0x9DF99C Offset: 0x9DF99C VA: 0x9DF99C
	|-Array.InternalEnumerator<HumanBone>.Dispose
	|
	|-RVA: 0x9DFC40 Offset: 0x9DFC40 VA: 0x9DFC40
	|-Array.InternalEnumerator<short>.Dispose
	|
	|-RVA: 0x9DFEA0 Offset: 0x9DFEA0 VA: 0x9DFEA0
	|-Array.InternalEnumerator<int>.Dispose
	|
	|-RVA: 0x9E0100 Offset: 0x9E0100 VA: 0x9E0100
	|-Array.InternalEnumerator<Int32Enum>.Dispose
	|
	|-RVA: 0x9E0360 Offset: 0x9E0360 VA: 0x9E0360
	|-Array.InternalEnumerator<long>.Dispose
	|
	|-RVA: 0x9E05C0 Offset: 0x9E05C0 VA: 0x9E05C0
	|-Array.InternalEnumerator<IntPtr>.Dispose
	|
	|-RVA: 0x9E0820 Offset: 0x9E0820 VA: 0x9E0820
	|-Array.InternalEnumerator<InternalCodePageDataItem>.Dispose
	|
	|-RVA: 0x9E0AA8 Offset: 0x9E0AA8 VA: 0x9E0AA8
	|-Array.InternalEnumerator<InternalEncodingDataItem>.Dispose
	|
	|-RVA: 0x9E0D20 Offset: 0x9E0D20 VA: 0x9E0D20
	|-Array.InternalEnumerator<IntervalTreeNode>.Dispose
	|
	|-RVA: 0x9E0FB4 Offset: 0x9E0FB4 VA: 0x9E0FB4
	|-Array.InternalEnumerator<Keyframe>.Dispose
	|
	|-RVA: 0x9E1250 Offset: 0x9E1250 VA: 0x9E1250
	|-Array.InternalEnumerator<LightDataGI>.Dispose
	|
	|-RVA: 0x9E14E0 Offset: 0x9E14E0 VA: 0x9E14E0
	|-Array.InternalEnumerator<MaterialReference>.Dispose
	|
	|-RVA: 0x9E1774 Offset: 0x9E1774 VA: 0x9E1774
	|-Array.InternalEnumerator<MessageStringParameterBlock>.Dispose
	|
	|-RVA: 0x9E19EC Offset: 0x9E19EC VA: 0x9E19EC
	|-Array.InternalEnumerator<Navigation>.Dispose
	|
	|-RVA: 0x9E1C80 Offset: 0x9E1C80 VA: 0x9E1C80
	|-Array.InternalEnumerator<object>.Dispose
	|
	|-RVA: 0x9E1E90 Offset: 0x9E1E90 VA: 0x9E1E90
	|-Array.InternalEnumerator<ParameterModifier>.Dispose
	|
	|-RVA: 0x9E20F0 Offset: 0x9E20F0 VA: 0x9E20F0
	|-Array.InternalEnumerator<Plane>.Dispose
	|
	|-RVA: 0x9E2374 Offset: 0x9E2374 VA: 0x9E2374
	|-Array.InternalEnumerator<Playable>.Dispose
	|
	|-RVA: 0x9E25EC Offset: 0x9E25EC VA: 0x9E25EC
	|-Array.InternalEnumerator<PlayableBinding>.Dispose
	|
	|-RVA: 0x9E2870 Offset: 0x9E2870 VA: 0x9E2870
	|-Array.InternalEnumerator<PlayerLoopSystem>.Dispose
	|
	|-RVA: 0x9E2B04 Offset: 0x9E2B04 VA: 0x9E2B04
	|-Array.InternalEnumerator<Quaternion>.Dispose
	|
	|-RVA: 0x9E2D88 Offset: 0x9E2D88 VA: 0x9E2D88
	|-Array.InternalEnumerator<RaycastHit>.Dispose
	|
	|-RVA: 0x9E301C Offset: 0x9E301C VA: 0x9E301C
	|-Array.InternalEnumerator<RaycastHit2D>.Dispose
	|
	|-RVA: 0x9E32B0 Offset: 0x9E32B0 VA: 0x9E32B0
	|-Array.InternalEnumerator<RaycastResult>.Dispose
	|
	|-RVA: 0x9E3540 Offset: 0x9E3540 VA: 0x9E3540
	|-Array.InternalEnumerator<Rect>.Dispose
	|
	|-RVA: 0x9E37C4 Offset: 0x9E37C4 VA: 0x9E37C4
	|-Array.InternalEnumerator<ResourceLocator>.Dispose
	|
	|-RVA: 0x9E3A3C Offset: 0x9E3A3C VA: 0x9E3A3C
	|-Array.InternalEnumerator<RichTextTagAttribute>.Dispose
	|
	|-RVA: 0x9E3CD0 Offset: 0x9E3CD0 VA: 0x9E3CD0
	|-Array.InternalEnumerator<sbyte>.Dispose
	|
	|-RVA: 0x9E3F30 Offset: 0x9E3F30 VA: 0x9E3F30
	|-Array.InternalEnumerator<float>.Dispose
	|
	|-RVA: 0x9E4190 Offset: 0x9E4190 VA: 0x9E4190
	|-Array.InternalEnumerator<SkeletonBone>.Dispose
	|
	|-RVA: 0x9E4424 Offset: 0x9E4424 VA: 0x9E4424
	|-Array.InternalEnumerator<SpriteState>.Dispose
	|
	|-RVA: 0x9E46A8 Offset: 0x9E46A8 VA: 0x9E46A8
	|-Array.InternalEnumerator<TMP_CharacterInfo>.Dispose
	|
	|-RVA: 0x9E4938 Offset: 0x9E4938 VA: 0x9E4938
	|-Array.InternalEnumerator<TMP_FontWeightPair>.Dispose
	|
	|-RVA: 0x9E4BB0 Offset: 0x9E4BB0 VA: 0x9E4BB0
	|-Array.InternalEnumerator<TMP_LineInfo>.Dispose
	|
	|-RVA: 0x9E4E40 Offset: 0x9E4E40 VA: 0x9E4E40
	|-Array.InternalEnumerator<TMP_LinkInfo>.Dispose
	|
	|-RVA: 0x9E50DC Offset: 0x9E50DC VA: 0x9E50DC
	|-Array.InternalEnumerator<TMP_MeshInfo>.Dispose
	|
	|-RVA: 0x9E5370 Offset: 0x9E5370 VA: 0x9E5370
	|-Array.InternalEnumerator<TMP_PageInfo>.Dispose
	|
	|-RVA: 0x9E5604 Offset: 0x9E5604 VA: 0x9E5604
	|-Array.InternalEnumerator<TMP_WordInfo>.Dispose
	|
	|-RVA: 0x9E5888 Offset: 0x9E5888 VA: 0x9E5888
	|-Array.InternalEnumerator<TimeSpan>.Dispose
	|
	|-RVA: 0x9E5B00 Offset: 0x9E5B00 VA: 0x9E5B00
	|-Array.InternalEnumerator<Touch>.Dispose
	|
	|-RVA: 0x9E5D90 Offset: 0x9E5D90 VA: 0x9E5D90
	|-Array.InternalEnumerator<UICharInfo>.Dispose
	|
	|-RVA: 0x9E6018 Offset: 0x9E6018 VA: 0x9E6018
	|-Array.InternalEnumerator<UILineInfo>.Dispose
	|
	|-RVA: 0x9E629C Offset: 0x9E629C VA: 0x9E629C
	|-Array.InternalEnumerator<UIVertex>.Dispose
	|
	|-RVA: 0x9E652C Offset: 0x9E652C VA: 0x9E652C
	|-Array.InternalEnumerator<ushort>.Dispose
	|
	|-RVA: 0x9E678C Offset: 0x9E678C VA: 0x9E678C
	|-Array.InternalEnumerator<UInt16Enum>.Dispose
	|
	|-RVA: 0x9E69EC Offset: 0x9E69EC VA: 0x9E69EC
	|-Array.InternalEnumerator<uint>.Dispose
	|
	|-RVA: 0x9E6C4C Offset: 0x9E6C4C VA: 0x9E6C4C
	|-Array.InternalEnumerator<UInt32Enum>.Dispose
	|
	|-RVA: 0x9E6EAC Offset: 0x9E6EAC VA: 0x9E6EAC
	|-Array.InternalEnumerator<ulong>.Dispose
	|
	|-RVA: 0x9E710C Offset: 0x9E710C VA: 0x9E710C
	|-Array.InternalEnumerator<Unit>.Dispose
	|
	|-RVA: 0x9E736C Offset: 0x9E736C VA: 0x9E736C
	|-Array.InternalEnumerator<Vector2>.Dispose
	|
	|-RVA: 0x9E75E4 Offset: 0x9E75E4 VA: 0x9E75E4
	|-Array.InternalEnumerator<Vector3>.Dispose
	|
	|-RVA: 0x9E786C Offset: 0x9E786C VA: 0x9E786C
	|-Array.InternalEnumerator<Vector4>.Dispose
	|
	|-RVA: 0x9E7AF0 Offset: 0x9E7AF0 VA: 0x9E7AF0
	|-Array.InternalEnumerator<WordWrapState>.Dispose
	|
	|-RVA: 0x9E7D80 Offset: 0x9E7D80 VA: 0x9E7D80
	|-Array.InternalEnumerator<X509ChainStatus>.Dispose
	|
	|-RVA: 0x9E7FF8 Offset: 0x9E7FF8 VA: 0x9E7FF8
	|-Array.InternalEnumerator<jvalue>.Dispose
	|
	|-RVA: 0x9E8270 Offset: 0x9E8270 VA: 0x9E8270
	|-Array.InternalEnumerator<AnimationOutputWeightProcessor.WeightInfo>.Dispose
	|
	|-RVA: 0x9E8504 Offset: 0x9E8504 VA: 0x9E8504
	|-Array.InternalEnumerator<BeforeRenderHelper.OrderBlock>.Dispose
	|
	|-RVA: 0x9E877C Offset: 0x9E877C VA: 0x9E877C
	|-Array.InternalEnumerator<Camera.RenderRequest>.Dispose
	|
	|-RVA: 0x9E8A04 Offset: 0x9E8A04 VA: 0x9E8A04
	|-Array.InternalEnumerator<CodePointIndexer.TableRange>.Dispose
	|
	|-RVA: 0x9E8C98 Offset: 0x9E8C98 VA: 0x9E8C98
	|-Array.InternalEnumerator<CookieTokenizer.RecognizedAttribute>.Dispose
	|
	|-RVA: 0x9E8F10 Offset: 0x9E8F10 VA: 0x9E8F10
	|-Array.InternalEnumerator<Hashtable.bucket>.Dispose
	|
	|-RVA: 0x9E9198 Offset: 0x9E9198 VA: 0x9E9198
	|-Array.InternalEnumerator<JoypadTouchHandler.TouchState>.Dispose
	|
	|-RVA: 0x9E9410 Offset: 0x9E9410 VA: 0x9E9410
	|-Array.InternalEnumerator<ParameterizedStrings.FormatParam>.Dispose
	|
	|-RVA: 0x9E9688 Offset: 0x9E9688 VA: 0x9E9688
	|-Array.InternalEnumerator<RegexCharClass.LowerCaseMapping>.Dispose
	|
	|-RVA: 0x9E9910 Offset: 0x9E9910 VA: 0x9E9910
	|-Array.InternalEnumerator<SendMouseEvents.HitInfo>.Dispose
	|
	|-RVA: 0x9E9B88 Offset: 0x9E9B88 VA: 0x9E9B88
	|-Array.InternalEnumerator<Socket.WSABUF>.Dispose
	|
	|-RVA: 0x9E9E00 Offset: 0x9E9E00 VA: 0x9E9E00
	|-Array.InternalEnumerator<TMP_Text.UnicodeChar>.Dispose
	|
	|-RVA: 0x9EA088 Offset: 0x9EA088 VA: 0x9EA088
	|-Array.InternalEnumerator<TexturePacker_JsonArray.Frame>.Dispose
	|
	|-RVA: 0x9EA32C Offset: 0x9EA32C VA: 0x9EA32C
	|-Array.InternalEnumerator<TimeNotificationBehaviour.NotificationEntry>.Dispose
	|
	|-RVA: 0x9EA5B0 Offset: 0x9EA5B0 VA: 0x9EA5B0
	|-Array.InternalEnumerator<TouchHandler.TouchState>.Dispose
	|
	|-RVA: 0x9EA828 Offset: 0x9EA828 VA: 0x9EA828
	|-Array.InternalEnumerator<UIGesture.TouchData>.Dispose
	|
	|-RVA: 0x9EAAA0 Offset: 0x9EAAA0 VA: 0x9EAAA0
	|-Array.InternalEnumerator<UmAlQuraCalendar.DateMapping>.Dispose
	|
	|-RVA: 0x9EAD24 Offset: 0x9EAD24 VA: 0x9EAD24
	|-Array.InternalEnumerator<UnitySynchronizationContext.WorkRequest>.Dispose
	|
	|-RVA: 0x9EAFAC Offset: 0x9EAFAC VA: 0x9EAFAC
	|-Array.InternalEnumerator<AssetBundleBuildMap.AssetBundleEntry.AssetPathString>.Dispose
	|
	|-RVA: 0x9EB224 Offset: 0x9EB224 VA: 0x9EB224
	|-Array.InternalEnumerator<TerrainUtility.TerrainMap.TileCoord>.Dispose
	*/

	// RVA: -1 Offset: -1 Slot: 6
	public bool MoveNext() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x9831D8 Offset: 0x9831D8 VA: 0x9831D8
	|-Array.InternalEnumerator<ArraySegment<byte>>.MoveNext
	|
	|-RVA: 0x983460 Offset: 0x983460 VA: 0x983460
	|-Array.InternalEnumerator<DictionaryEntry<object, int, object>>.MoveNext
	|
	|-RVA: 0x9836E4 Offset: 0x9836E4 VA: 0x9836E4
	|-Array.InternalEnumerator<DictionaryEntry<object, object, object>>.MoveNext
	|
	|-RVA: 0x983968 Offset: 0x983968 VA: 0x983968
	|-Array.InternalEnumerator<IntervalTree.Entry<object>>.MoveNext
	|
	|-RVA: 0x983BFC Offset: 0x983BFC VA: 0x983BFC
	|-Array.InternalEnumerator<Dictionary.Entry<Guid, object>>.MoveNext
	|
	|-RVA: 0x983E98 Offset: 0x983E98 VA: 0x983E98
	|-Array.InternalEnumerator<Dictionary.Entry<short, object>>.MoveNext
	|
	|-RVA: 0x98411C Offset: 0x98411C VA: 0x98411C
	|-Array.InternalEnumerator<Dictionary.Entry<short, float>>.MoveNext
	|
	|-RVA: 0x9843A0 Offset: 0x9843A0 VA: 0x9843A0
	|-Array.InternalEnumerator<Dictionary.Entry<int, bool>>.MoveNext
	|
	|-RVA: 0x984624 Offset: 0x984624 VA: 0x984624
	|-Array.InternalEnumerator<Dictionary.Entry<int, char>>.MoveNext
	|
	|-RVA: 0x9848A8 Offset: 0x9848A8 VA: 0x9848A8
	|-Array.InternalEnumerator<Dictionary.Entry<int, int>>.MoveNext
	|
	|-RVA: 0x984B2C Offset: 0x984B2C VA: 0x984B2C
	|-Array.InternalEnumerator<Dictionary.Entry<int, Int32Enum>>.MoveNext
	|
	|-RVA: 0x984DB0 Offset: 0x984DB0 VA: 0x984DB0
	|-Array.InternalEnumerator<Dictionary.Entry<int, long>>.MoveNext
	|
	|-RVA: 0x985044 Offset: 0x985044 VA: 0x985044
	|-Array.InternalEnumerator<Dictionary.Entry<int, object>>.MoveNext
	|
	|-RVA: 0x9852C8 Offset: 0x9852C8 VA: 0x9852C8
	|-Array.InternalEnumerator<Dictionary.Entry<int, Vector3>>.MoveNext
	|
	|-RVA: 0x98555C Offset: 0x98555C VA: 0x98555C
	|-Array.InternalEnumerator<Dictionary.Entry<int, JoypadTouchHandler.TouchState>>.MoveNext
	|
	|-RVA: 0x9857F0 Offset: 0x9857F0 VA: 0x9857F0
	|-Array.InternalEnumerator<Dictionary.Entry<int, TouchHandler.TouchState>>.MoveNext
	|
	|-RVA: 0x985A84 Offset: 0x985A84 VA: 0x985A84
	|-Array.InternalEnumerator<Dictionary.Entry<int, UIGesture.TouchData>>.MoveNext
	|
	|-RVA: 0x985D18 Offset: 0x985D18 VA: 0x985D18
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, bool>>.MoveNext
	|
	|-RVA: 0x985F9C Offset: 0x985F9C VA: 0x985F9C
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, Color>>.MoveNext
	|
	|-RVA: 0x986238 Offset: 0x986238 VA: 0x986238
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, int>>.MoveNext
	|
	|-RVA: 0x9864BC Offset: 0x9864BC VA: 0x9864BC
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, object>>.MoveNext
	|
	|-RVA: 0x986740 Offset: 0x986740 VA: 0x986740
	|-Array.InternalEnumerator<Dictionary.Entry<long, object>>.MoveNext
	|
	|-RVA: 0x9869D4 Offset: 0x9869D4 VA: 0x9869D4
	|-Array.InternalEnumerator<Dictionary.Entry<object, int>>.MoveNext
	|
	|-RVA: 0x986C58 Offset: 0x986C58 VA: 0x986C58
	|-Array.InternalEnumerator<Dictionary.Entry<object, object>>.MoveNext
	|
	|-RVA: 0x986EDC Offset: 0x986EDC VA: 0x986EDC
	|-Array.InternalEnumerator<Dictionary.Entry<object, Playable>>.MoveNext
	|
	|-RVA: 0x987170 Offset: 0x987170 VA: 0x987170
	|-Array.InternalEnumerator<Dictionary.Entry<object, ResourceLocator>>.MoveNext
	|
	|-RVA: 0x987404 Offset: 0x987404 VA: 0x987404
	|-Array.InternalEnumerator<Dictionary.Entry<object, float>>.MoveNext
	|
	|-RVA: 0x987688 Offset: 0x987688 VA: 0x987688
	|-Array.InternalEnumerator<Dictionary.Entry<ushort, object>>.MoveNext
	|
	|-RVA: 0x98790C Offset: 0x98790C VA: 0x98790C
	|-Array.InternalEnumerator<Dictionary.Entry<uint, int>>.MoveNext
	|
	|-RVA: 0x987B90 Offset: 0x987B90 VA: 0x987B90
	|-Array.InternalEnumerator<Dictionary.Entry<uint, object>>.MoveNext
	|
	|-RVA: 0x987E14 Offset: 0x987E14 VA: 0x987E14
	|-Array.InternalEnumerator<Dictionary.Entry<ulong, object>>.MoveNext
	|
	|-RVA: 0x9880A8 Offset: 0x9880A8 VA: 0x9880A8
	|-Array.InternalEnumerator<Dictionary.Entry<Vector3, int>>.MoveNext
	|
	|-RVA: 0x98833C Offset: 0x98833C VA: 0x98833C
	|-Array.InternalEnumerator<Dictionary.Entry<TerrainUtility.TerrainMap.TileCoord, object>>.MoveNext
	|
	|-RVA: 0x9885D0 Offset: 0x9885D0 VA: 0x9885D0
	|-Array.InternalEnumerator<PriorityQueue.IndexedItem<object>>.MoveNext
	|
	|-RVA: 0x988854 Offset: 0x988854 VA: 0x988854
	|-Array.InternalEnumerator<KeyValuePair<DateTime, object>>.MoveNext
	|
	|-RVA: 0x988AD8 Offset: 0x988AD8 VA: 0x988AD8
	|-Array.InternalEnumerator<KeyValuePair<Guid, object>>.MoveNext
	|
	|-RVA: 0x988D6C Offset: 0x988D6C VA: 0x988D6C
	|-Array.InternalEnumerator<KeyValuePair<short, object>>.MoveNext
	|
	|-RVA: 0x988FE4 Offset: 0x988FE4 VA: 0x988FE4
	|-Array.InternalEnumerator<KeyValuePair<short, float>>.MoveNext
	|
	|-RVA: 0x98925C Offset: 0x98925C VA: 0x98925C
	|-Array.InternalEnumerator<KeyValuePair<int, bool>>.MoveNext
	|
	|-RVA: 0x9894D4 Offset: 0x9894D4 VA: 0x9894D4
	|-Array.InternalEnumerator<KeyValuePair<int, char>>.MoveNext
	|
	|-RVA: 0x98974C Offset: 0x98974C VA: 0x98974C
	|-Array.InternalEnumerator<KeyValuePair<int, int>>.MoveNext
	|
	|-RVA: 0x9899C4 Offset: 0x9899C4 VA: 0x9899C4
	|-Array.InternalEnumerator<KeyValuePair<int, Int32Enum>>.MoveNext
	|
	|-RVA: 0x989C3C Offset: 0x989C3C VA: 0x989C3C
	|-Array.InternalEnumerator<KeyValuePair<int, long>>.MoveNext
	|
	|-RVA: 0x989EC0 Offset: 0x989EC0 VA: 0x989EC0
	|-Array.InternalEnumerator<KeyValuePair<int, object>>.MoveNext
	|
	|-RVA: 0x98A138 Offset: 0x98A138 VA: 0x98A138
	|-Array.InternalEnumerator<KeyValuePair<int, Vector3>>.MoveNext
	|
	|-RVA: 0x98A3BC Offset: 0x98A3BC VA: 0x98A3BC
	|-Array.InternalEnumerator<KeyValuePair<int, JoypadTouchHandler.TouchState>>.MoveNext
	|
	|-RVA: 0x98A644 Offset: 0x98A644 VA: 0x98A644
	|-Array.InternalEnumerator<KeyValuePair<int, TouchHandler.TouchState>>.MoveNext
	|
	|-RVA: 0x98A8CC Offset: 0x98A8CC VA: 0x98A8CC
	|-Array.InternalEnumerator<KeyValuePair<int, UIGesture.TouchData>>.MoveNext
	|
	|-RVA: 0x98AB54 Offset: 0x98AB54 VA: 0x98AB54
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, bool>>.MoveNext
	|
	|-RVA: 0x98ADCC Offset: 0x98ADCC VA: 0x98ADCC
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, Color>>.MoveNext
	|
	|-RVA: 0x98B060 Offset: 0x98B060 VA: 0x98B060
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, int>>.MoveNext
	|
	|-RVA: 0x98B2D8 Offset: 0x98B2D8 VA: 0x98B2D8
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, object>>.MoveNext
	|
	|-RVA: 0x98B550 Offset: 0x98B550 VA: 0x98B550
	|-Array.InternalEnumerator<KeyValuePair<long, object>>.MoveNext
	|
	|-RVA: 0x98B7D4 Offset: 0x98B7D4 VA: 0x98B7D4
	|-Array.InternalEnumerator<KeyValuePair<object, int>>.MoveNext
	|
	|-RVA: 0x98BA4C Offset: 0x98BA4C VA: 0x98BA4C
	|-Array.InternalEnumerator<KeyValuePair<object, object>>.MoveNext
	|
	|-RVA: 0x98BCC4 Offset: 0x98BCC4 VA: 0x98BCC4
	|-Array.InternalEnumerator<KeyValuePair<object, Playable>>.MoveNext
	|
	|-RVA: 0x98BF4C Offset: 0x98BF4C VA: 0x98BF4C
	|-Array.InternalEnumerator<KeyValuePair<object, ResourceLocator>>.MoveNext
	|
	|-RVA: 0x98C1D4 Offset: 0x98C1D4 VA: 0x98C1D4
	|-Array.InternalEnumerator<KeyValuePair<object, float>>.MoveNext
	|
	|-RVA: 0x98C44C Offset: 0x98C44C VA: 0x98C44C
	|-Array.InternalEnumerator<KeyValuePair<ushort, object>>.MoveNext
	|
	|-RVA: 0x98C6C4 Offset: 0x98C6C4 VA: 0x98C6C4
	|-Array.InternalEnumerator<KeyValuePair<uint, int>>.MoveNext
	|
	|-RVA: 0x98C93C Offset: 0x98C93C VA: 0x98C93C
	|-Array.InternalEnumerator<KeyValuePair<uint, object>>.MoveNext
	|
	|-RVA: 0x98CBB4 Offset: 0x98CBB4 VA: 0x98CBB4
	|-Array.InternalEnumerator<KeyValuePair<ulong, object>>.MoveNext
	|
	|-RVA: 0x98CE38 Offset: 0x98CE38 VA: 0x98CE38
	|-Array.InternalEnumerator<KeyValuePair<Vector3, int>>.MoveNext
	|
	|-RVA: 0x98D0BC Offset: 0x98D0BC VA: 0x98D0BC
	|-Array.InternalEnumerator<KeyValuePair<TerrainUtility.TerrainMap.TileCoord, object>>.MoveNext
	|
	|-RVA: 0x98D344 Offset: 0x98D344 VA: 0x98D344
	|-Array.InternalEnumerator<HashSet.Slot<int>>.MoveNext
	|
	|-RVA: 0x98D5CC Offset: 0x98D5CC VA: 0x98D5CC
	|-Array.InternalEnumerator<Set.Slot<Int32Enum>>.MoveNext
	|
	|-RVA: 0x98D854 Offset: 0x98D854 VA: 0x98D854
	|-Array.InternalEnumerator<HashSet.Slot<object>>.MoveNext
	|
	|-RVA: 0x98DADC Offset: 0x98DADC VA: 0x98DADC
	|-Array.InternalEnumerator<Set.Slot<object>>.MoveNext
	|
	|-RVA: 0x98DD64 Offset: 0x98DD64 VA: 0x98DD64
	|-Array.InternalEnumerator<HashSet.Slot<uint>>.MoveNext
	|
	|-RVA: 0x98DFEC Offset: 0x98DFEC VA: 0x98DFEC
	|-Array.InternalEnumerator<HashSet.Slot<ulong>>.MoveNext
	|
	|-RVA: 0x98E270 Offset: 0x98E270 VA: 0x98E270
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Color32>>.MoveNext
	|
	|-RVA: 0x98E504 Offset: 0x98E504 VA: 0x98E504
	|-Array.InternalEnumerator<TMP_TextProcessingStack<HighlightState>>.MoveNext
	|
	|-RVA: 0x98E798 Offset: 0x98E798 VA: 0x98E798
	|-Array.InternalEnumerator<TMP_TextProcessingStack<int>>.MoveNext
	|
	|-RVA: 0x98EA2C Offset: 0x98EA2C VA: 0x98EA2C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Int32Enum>>.MoveNext
	|
	|-RVA: 0x98ECC0 Offset: 0x98ECC0 VA: 0x98ECC0
	|-Array.InternalEnumerator<TMP_TextProcessingStack<MaterialReference>>.MoveNext
	|
	|-RVA: 0x98EF64 Offset: 0x98EF64 VA: 0x98EF64
	|-Array.InternalEnumerator<TMP_TextProcessingStack<object>>.MoveNext
	|
	|-RVA: 0x98F1F8 Offset: 0x98F1F8 VA: 0x98F1F8
	|-Array.InternalEnumerator<TMP_TextProcessingStack<float>>.MoveNext
	|
	|-RVA: 0x98F48C Offset: 0x98F48C VA: 0x98F48C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<WordWrapState>>.MoveNext
	|
	|-RVA: 0x98F71C Offset: 0x98F71C VA: 0x98F71C
	|-Array.InternalEnumerator<TimeInterval<object>>.MoveNext
	|
	|-RVA: 0x98F9A0 Offset: 0x98F9A0 VA: 0x98F9A0
	|-Array.InternalEnumerator<Timestamped<bool>>.MoveNext
	|
	|-RVA: 0x98FC34 Offset: 0x98FC34 VA: 0x98FC34
	|-Array.InternalEnumerator<Timestamped<object>>.MoveNext
	|
	|-RVA: 0x9DAF28 Offset: 0x9DAF28 VA: 0x9DAF28
	|-Array.InternalEnumerator<Tuple<object>>.MoveNext
	|
	|-RVA: 0x9DB188 Offset: 0x9DB188 VA: 0x9DB188
	|-Array.InternalEnumerator<ValueTuple<object, object>>.MoveNext
	|
	|-RVA: 0x9DB400 Offset: 0x9DB400 VA: 0x9DB400
	|-Array.InternalEnumerator<ValueTuple<object, object, object>>.MoveNext
	|
	|-RVA: 0x9DB688 Offset: 0x9DB688 VA: 0x9DB688
	|-Array.InternalEnumerator<BatchVisibility>.MoveNext
	|
	|-RVA: 0x9DB910 Offset: 0x9DB910 VA: 0x9DB910
	|-Array.InternalEnumerator<bool>.MoveNext
	|
	|-RVA: 0x9DBB70 Offset: 0x9DBB70 VA: 0x9DBB70
	|-Array.InternalEnumerator<Bounds>.MoveNext
	|
	|-RVA: 0x9DBE04 Offset: 0x9DBE04 VA: 0x9DBE04
	|-Array.InternalEnumerator<byte>.MoveNext
	|
	|-RVA: 0x9DC064 Offset: 0x9DC064 VA: 0x9DC064
	|-Array.InternalEnumerator<ByteEnum>.MoveNext
	|
	|-RVA: 0x9DC2C4 Offset: 0x9DC2C4 VA: 0x9DC2C4
	|-Array.InternalEnumerator<CancellationToken>.MoveNext
	|
	|-RVA: 0x9DC524 Offset: 0x9DC524 VA: 0x9DC524
	|-Array.InternalEnumerator<CancellationTokenRegistration>.MoveNext
	|
	|-RVA: 0x9DC7AC Offset: 0x9DC7AC VA: 0x9DC7AC
	|-Array.InternalEnumerator<char>.MoveNext
	|
	|-RVA: 0x9DCA0C Offset: 0x9DCA0C VA: 0x9DCA0C
	|-Array.InternalEnumerator<Color>.MoveNext
	|
	|-RVA: 0x9DCC90 Offset: 0x9DCC90 VA: 0x9DCC90
	|-Array.InternalEnumerator<Color32>.MoveNext
	|
	|-RVA: 0x9DCEF0 Offset: 0x9DCEF0 VA: 0x9DCEF0
	|-Array.InternalEnumerator<ColorBlock>.MoveNext
	|
	|-RVA: 0x9DD180 Offset: 0x9DD180 VA: 0x9DD180
	|-Array.InternalEnumerator<ContactPoint>.MoveNext
	|
	|-RVA: 0x9DD414 Offset: 0x9DD414 VA: 0x9DD414
	|-Array.InternalEnumerator<ContactPoint2D>.MoveNext
	|
	|-RVA: 0x9DD6B8 Offset: 0x9DD6B8 VA: 0x9DD6B8
	|-Array.InternalEnumerator<CustomAttributeNamedArgument>.MoveNext
	|
	|-RVA: 0x9DD940 Offset: 0x9DD940 VA: 0x9DD940
	|-Array.InternalEnumerator<CustomAttributeTypedArgument>.MoveNext
	|
	|-RVA: 0x9DDBB8 Offset: 0x9DDBB8 VA: 0x9DDBB8
	|-Array.InternalEnumerator<DateTime>.MoveNext
	|
	|-RVA: 0x9DDE30 Offset: 0x9DDE30 VA: 0x9DDE30
	|-Array.InternalEnumerator<Decimal>.MoveNext
	|
	|-RVA: 0x9DE0B4 Offset: 0x9DE0B4 VA: 0x9DE0B4
	|-Array.InternalEnumerator<DictionaryEntry>.MoveNext
	|
	|-RVA: 0x9DE32C Offset: 0x9DE32C VA: 0x9DE32C
	|-Array.InternalEnumerator<double>.MoveNext
	|
	|-RVA: 0x9DE58C Offset: 0x9DE58C VA: 0x9DE58C
	|-Array.InternalEnumerator<Ephemeron>.MoveNext
	|
	|-RVA: 0x9DE804 Offset: 0x9DE804 VA: 0x9DE804
	|-Array.InternalEnumerator<GCHandle>.MoveNext
	|
	|-RVA: 0x9DEA64 Offset: 0x9DEA64 VA: 0x9DEA64
	|-Array.InternalEnumerator<GlyphMarshallingStruct>.MoveNext
	|
	|-RVA: 0x9DECF8 Offset: 0x9DECF8 VA: 0x9DECF8
	|-Array.InternalEnumerator<GlyphPairAdjustmentRecord>.MoveNext
	|
	|-RVA: 0x9DEF8C Offset: 0x9DEF8C VA: 0x9DEF8C
	|-Array.InternalEnumerator<GlyphRect>.MoveNext
	|
	|-RVA: 0x9DF210 Offset: 0x9DF210 VA: 0x9DF210
	|-Array.InternalEnumerator<Guid>.MoveNext
	|
	|-RVA: 0x9DF494 Offset: 0x9DF494 VA: 0x9DF494
	|-Array.InternalEnumerator<HeaderVariantInfo>.MoveNext
	|
	|-RVA: 0x9DF70C Offset: 0x9DF70C VA: 0x9DF70C
	|-Array.InternalEnumerator<HighlightState>.MoveNext
	|
	|-RVA: 0x9DF9A0 Offset: 0x9DF9A0 VA: 0x9DF9A0
	|-Array.InternalEnumerator<HumanBone>.MoveNext
	|
	|-RVA: 0x9DFC44 Offset: 0x9DFC44 VA: 0x9DFC44
	|-Array.InternalEnumerator<short>.MoveNext
	|
	|-RVA: 0x9DFEA4 Offset: 0x9DFEA4 VA: 0x9DFEA4
	|-Array.InternalEnumerator<int>.MoveNext
	|
	|-RVA: 0x9E0104 Offset: 0x9E0104 VA: 0x9E0104
	|-Array.InternalEnumerator<Int32Enum>.MoveNext
	|
	|-RVA: 0x9E0364 Offset: 0x9E0364 VA: 0x9E0364
	|-Array.InternalEnumerator<long>.MoveNext
	|
	|-RVA: 0x9E05C4 Offset: 0x9E05C4 VA: 0x9E05C4
	|-Array.InternalEnumerator<IntPtr>.MoveNext
	|
	|-RVA: 0x9E0824 Offset: 0x9E0824 VA: 0x9E0824
	|-Array.InternalEnumerator<InternalCodePageDataItem>.MoveNext
	|
	|-RVA: 0x9E0AAC Offset: 0x9E0AAC VA: 0x9E0AAC
	|-Array.InternalEnumerator<InternalEncodingDataItem>.MoveNext
	|
	|-RVA: 0x9E0D24 Offset: 0x9E0D24 VA: 0x9E0D24
	|-Array.InternalEnumerator<IntervalTreeNode>.MoveNext
	|
	|-RVA: 0x9E0FB8 Offset: 0x9E0FB8 VA: 0x9E0FB8
	|-Array.InternalEnumerator<Keyframe>.MoveNext
	|
	|-RVA: 0x9E1254 Offset: 0x9E1254 VA: 0x9E1254
	|-Array.InternalEnumerator<LightDataGI>.MoveNext
	|
	|-RVA: 0x9E14E4 Offset: 0x9E14E4 VA: 0x9E14E4
	|-Array.InternalEnumerator<MaterialReference>.MoveNext
	|
	|-RVA: 0x9E1778 Offset: 0x9E1778 VA: 0x9E1778
	|-Array.InternalEnumerator<MessageStringParameterBlock>.MoveNext
	|
	|-RVA: 0x9E19F0 Offset: 0x9E19F0 VA: 0x9E19F0
	|-Array.InternalEnumerator<Navigation>.MoveNext
	|
	|-RVA: 0x9E1C84 Offset: 0x9E1C84 VA: 0x9E1C84
	|-Array.InternalEnumerator<object>.MoveNext
	|
	|-RVA: 0x9E1E94 Offset: 0x9E1E94 VA: 0x9E1E94
	|-Array.InternalEnumerator<ParameterModifier>.MoveNext
	|
	|-RVA: 0x9E20F4 Offset: 0x9E20F4 VA: 0x9E20F4
	|-Array.InternalEnumerator<Plane>.MoveNext
	|
	|-RVA: 0x9E2378 Offset: 0x9E2378 VA: 0x9E2378
	|-Array.InternalEnumerator<Playable>.MoveNext
	|
	|-RVA: 0x9E25F0 Offset: 0x9E25F0 VA: 0x9E25F0
	|-Array.InternalEnumerator<PlayableBinding>.MoveNext
	|
	|-RVA: 0x9E2874 Offset: 0x9E2874 VA: 0x9E2874
	|-Array.InternalEnumerator<PlayerLoopSystem>.MoveNext
	|
	|-RVA: 0x9E2B08 Offset: 0x9E2B08 VA: 0x9E2B08
	|-Array.InternalEnumerator<Quaternion>.MoveNext
	|
	|-RVA: 0x9E2D8C Offset: 0x9E2D8C VA: 0x9E2D8C
	|-Array.InternalEnumerator<RaycastHit>.MoveNext
	|
	|-RVA: 0x9E3020 Offset: 0x9E3020 VA: 0x9E3020
	|-Array.InternalEnumerator<RaycastHit2D>.MoveNext
	|
	|-RVA: 0x9E32B4 Offset: 0x9E32B4 VA: 0x9E32B4
	|-Array.InternalEnumerator<RaycastResult>.MoveNext
	|
	|-RVA: 0x9E3544 Offset: 0x9E3544 VA: 0x9E3544
	|-Array.InternalEnumerator<Rect>.MoveNext
	|
	|-RVA: 0x9E37C8 Offset: 0x9E37C8 VA: 0x9E37C8
	|-Array.InternalEnumerator<ResourceLocator>.MoveNext
	|
	|-RVA: 0x9E3A40 Offset: 0x9E3A40 VA: 0x9E3A40
	|-Array.InternalEnumerator<RichTextTagAttribute>.MoveNext
	|
	|-RVA: 0x9E3CD4 Offset: 0x9E3CD4 VA: 0x9E3CD4
	|-Array.InternalEnumerator<sbyte>.MoveNext
	|
	|-RVA: 0x9E3F34 Offset: 0x9E3F34 VA: 0x9E3F34
	|-Array.InternalEnumerator<float>.MoveNext
	|
	|-RVA: 0x9E4194 Offset: 0x9E4194 VA: 0x9E4194
	|-Array.InternalEnumerator<SkeletonBone>.MoveNext
	|
	|-RVA: 0x9E4428 Offset: 0x9E4428 VA: 0x9E4428
	|-Array.InternalEnumerator<SpriteState>.MoveNext
	|
	|-RVA: 0x9E46AC Offset: 0x9E46AC VA: 0x9E46AC
	|-Array.InternalEnumerator<TMP_CharacterInfo>.MoveNext
	|
	|-RVA: 0x9E493C Offset: 0x9E493C VA: 0x9E493C
	|-Array.InternalEnumerator<TMP_FontWeightPair>.MoveNext
	|
	|-RVA: 0x9E4BB4 Offset: 0x9E4BB4 VA: 0x9E4BB4
	|-Array.InternalEnumerator<TMP_LineInfo>.MoveNext
	|
	|-RVA: 0x9E4E44 Offset: 0x9E4E44 VA: 0x9E4E44
	|-Array.InternalEnumerator<TMP_LinkInfo>.MoveNext
	|
	|-RVA: 0x9E50E0 Offset: 0x9E50E0 VA: 0x9E50E0
	|-Array.InternalEnumerator<TMP_MeshInfo>.MoveNext
	|
	|-RVA: 0x9E5374 Offset: 0x9E5374 VA: 0x9E5374
	|-Array.InternalEnumerator<TMP_PageInfo>.MoveNext
	|
	|-RVA: 0x9E5608 Offset: 0x9E5608 VA: 0x9E5608
	|-Array.InternalEnumerator<TMP_WordInfo>.MoveNext
	|
	|-RVA: 0x9E588C Offset: 0x9E588C VA: 0x9E588C
	|-Array.InternalEnumerator<TimeSpan>.MoveNext
	|
	|-RVA: 0x9E5B04 Offset: 0x9E5B04 VA: 0x9E5B04
	|-Array.InternalEnumerator<Touch>.MoveNext
	|
	|-RVA: 0x9E5D94 Offset: 0x9E5D94 VA: 0x9E5D94
	|-Array.InternalEnumerator<UICharInfo>.MoveNext
	|
	|-RVA: 0x9E601C Offset: 0x9E601C VA: 0x9E601C
	|-Array.InternalEnumerator<UILineInfo>.MoveNext
	|
	|-RVA: 0x9E62A0 Offset: 0x9E62A0 VA: 0x9E62A0
	|-Array.InternalEnumerator<UIVertex>.MoveNext
	|
	|-RVA: 0x9E6530 Offset: 0x9E6530 VA: 0x9E6530
	|-Array.InternalEnumerator<ushort>.MoveNext
	|
	|-RVA: 0x9E6790 Offset: 0x9E6790 VA: 0x9E6790
	|-Array.InternalEnumerator<UInt16Enum>.MoveNext
	|
	|-RVA: 0x9E69F0 Offset: 0x9E69F0 VA: 0x9E69F0
	|-Array.InternalEnumerator<uint>.MoveNext
	|
	|-RVA: 0x9E6C50 Offset: 0x9E6C50 VA: 0x9E6C50
	|-Array.InternalEnumerator<UInt32Enum>.MoveNext
	|
	|-RVA: 0x9E6EB0 Offset: 0x9E6EB0 VA: 0x9E6EB0
	|-Array.InternalEnumerator<ulong>.MoveNext
	|
	|-RVA: 0x9E7110 Offset: 0x9E7110 VA: 0x9E7110
	|-Array.InternalEnumerator<Unit>.MoveNext
	|
	|-RVA: 0x9E7370 Offset: 0x9E7370 VA: 0x9E7370
	|-Array.InternalEnumerator<Vector2>.MoveNext
	|
	|-RVA: 0x9E75E8 Offset: 0x9E75E8 VA: 0x9E75E8
	|-Array.InternalEnumerator<Vector3>.MoveNext
	|
	|-RVA: 0x9E7870 Offset: 0x9E7870 VA: 0x9E7870
	|-Array.InternalEnumerator<Vector4>.MoveNext
	|
	|-RVA: 0x9E7AF4 Offset: 0x9E7AF4 VA: 0x9E7AF4
	|-Array.InternalEnumerator<WordWrapState>.MoveNext
	|
	|-RVA: 0x9E7D84 Offset: 0x9E7D84 VA: 0x9E7D84
	|-Array.InternalEnumerator<X509ChainStatus>.MoveNext
	|
	|-RVA: 0x9E7FFC Offset: 0x9E7FFC VA: 0x9E7FFC
	|-Array.InternalEnumerator<jvalue>.MoveNext
	|
	|-RVA: 0x9E8274 Offset: 0x9E8274 VA: 0x9E8274
	|-Array.InternalEnumerator<AnimationOutputWeightProcessor.WeightInfo>.MoveNext
	|
	|-RVA: 0x9E8508 Offset: 0x9E8508 VA: 0x9E8508
	|-Array.InternalEnumerator<BeforeRenderHelper.OrderBlock>.MoveNext
	|
	|-RVA: 0x9E8780 Offset: 0x9E8780 VA: 0x9E8780
	|-Array.InternalEnumerator<Camera.RenderRequest>.MoveNext
	|
	|-RVA: 0x9E8A08 Offset: 0x9E8A08 VA: 0x9E8A08
	|-Array.InternalEnumerator<CodePointIndexer.TableRange>.MoveNext
	|
	|-RVA: 0x9E8C9C Offset: 0x9E8C9C VA: 0x9E8C9C
	|-Array.InternalEnumerator<CookieTokenizer.RecognizedAttribute>.MoveNext
	|
	|-RVA: 0x9E8F14 Offset: 0x9E8F14 VA: 0x9E8F14
	|-Array.InternalEnumerator<Hashtable.bucket>.MoveNext
	|
	|-RVA: 0x9E919C Offset: 0x9E919C VA: 0x9E919C
	|-Array.InternalEnumerator<JoypadTouchHandler.TouchState>.MoveNext
	|
	|-RVA: 0x9E9414 Offset: 0x9E9414 VA: 0x9E9414
	|-Array.InternalEnumerator<ParameterizedStrings.FormatParam>.MoveNext
	|
	|-RVA: 0x9E968C Offset: 0x9E968C VA: 0x9E968C
	|-Array.InternalEnumerator<RegexCharClass.LowerCaseMapping>.MoveNext
	|
	|-RVA: 0x9E9914 Offset: 0x9E9914 VA: 0x9E9914
	|-Array.InternalEnumerator<SendMouseEvents.HitInfo>.MoveNext
	|
	|-RVA: 0x9E9B8C Offset: 0x9E9B8C VA: 0x9E9B8C
	|-Array.InternalEnumerator<Socket.WSABUF>.MoveNext
	|
	|-RVA: 0x9E9E04 Offset: 0x9E9E04 VA: 0x9E9E04
	|-Array.InternalEnumerator<TMP_Text.UnicodeChar>.MoveNext
	|
	|-RVA: 0x9EA08C Offset: 0x9EA08C VA: 0x9EA08C
	|-Array.InternalEnumerator<TexturePacker_JsonArray.Frame>.MoveNext
	|
	|-RVA: 0x9EA330 Offset: 0x9EA330 VA: 0x9EA330
	|-Array.InternalEnumerator<TimeNotificationBehaviour.NotificationEntry>.MoveNext
	|
	|-RVA: 0x9EA5B4 Offset: 0x9EA5B4 VA: 0x9EA5B4
	|-Array.InternalEnumerator<TouchHandler.TouchState>.MoveNext
	|
	|-RVA: 0x9EA82C Offset: 0x9EA82C VA: 0x9EA82C
	|-Array.InternalEnumerator<UIGesture.TouchData>.MoveNext
	|
	|-RVA: 0x9EAAA4 Offset: 0x9EAAA4 VA: 0x9EAAA4
	|-Array.InternalEnumerator<UmAlQuraCalendar.DateMapping>.MoveNext
	|
	|-RVA: 0x9EAD28 Offset: 0x9EAD28 VA: 0x9EAD28
	|-Array.InternalEnumerator<UnitySynchronizationContext.WorkRequest>.MoveNext
	|
	|-RVA: 0x9EAFB0 Offset: 0x9EAFB0 VA: 0x9EAFB0
	|-Array.InternalEnumerator<AssetBundleBuildMap.AssetBundleEntry.AssetPathString>.MoveNext
	|
	|-RVA: 0x9EB228 Offset: 0x9EB228 VA: 0x9EB228
	|-Array.InternalEnumerator<TerrainUtility.TerrainMap.TileCoord>.MoveNext
	*/

	// RVA: -1 Offset: -1 Slot: 4
	public T get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x983234 Offset: 0x983234 VA: 0x983234
	|-Array.InternalEnumerator<ArraySegment<byte>>.get_Current
	|
	|-RVA: 0x9834BC Offset: 0x9834BC VA: 0x9834BC
	|-Array.InternalEnumerator<DictionaryEntry<object, int, object>>.get_Current
	|
	|-RVA: 0x983740 Offset: 0x983740 VA: 0x983740
	|-Array.InternalEnumerator<DictionaryEntry<object, object, object>>.get_Current
	|
	|-RVA: 0x9839C4 Offset: 0x9839C4 VA: 0x9839C4
	|-Array.InternalEnumerator<IntervalTree.Entry<object>>.get_Current
	|
	|-RVA: 0x983C58 Offset: 0x983C58 VA: 0x983C58
	|-Array.InternalEnumerator<Dictionary.Entry<Guid, object>>.get_Current
	|
	|-RVA: 0x983EF4 Offset: 0x983EF4 VA: 0x983EF4
	|-Array.InternalEnumerator<Dictionary.Entry<short, object>>.get_Current
	|
	|-RVA: 0x984178 Offset: 0x984178 VA: 0x984178
	|-Array.InternalEnumerator<Dictionary.Entry<short, float>>.get_Current
	|
	|-RVA: 0x9843FC Offset: 0x9843FC VA: 0x9843FC
	|-Array.InternalEnumerator<Dictionary.Entry<int, bool>>.get_Current
	|
	|-RVA: 0x984680 Offset: 0x984680 VA: 0x984680
	|-Array.InternalEnumerator<Dictionary.Entry<int, char>>.get_Current
	|
	|-RVA: 0x984904 Offset: 0x984904 VA: 0x984904
	|-Array.InternalEnumerator<Dictionary.Entry<int, int>>.get_Current
	|
	|-RVA: 0x984B88 Offset: 0x984B88 VA: 0x984B88
	|-Array.InternalEnumerator<Dictionary.Entry<int, Int32Enum>>.get_Current
	|
	|-RVA: 0x984E0C Offset: 0x984E0C VA: 0x984E0C
	|-Array.InternalEnumerator<Dictionary.Entry<int, long>>.get_Current
	|
	|-RVA: 0x9850A0 Offset: 0x9850A0 VA: 0x9850A0
	|-Array.InternalEnumerator<Dictionary.Entry<int, object>>.get_Current
	|
	|-RVA: 0x985324 Offset: 0x985324 VA: 0x985324
	|-Array.InternalEnumerator<Dictionary.Entry<int, Vector3>>.get_Current
	|
	|-RVA: 0x9855B8 Offset: 0x9855B8 VA: 0x9855B8
	|-Array.InternalEnumerator<Dictionary.Entry<int, JoypadTouchHandler.TouchState>>.get_Current
	|
	|-RVA: 0x98584C Offset: 0x98584C VA: 0x98584C
	|-Array.InternalEnumerator<Dictionary.Entry<int, TouchHandler.TouchState>>.get_Current
	|
	|-RVA: 0x985AE0 Offset: 0x985AE0 VA: 0x985AE0
	|-Array.InternalEnumerator<Dictionary.Entry<int, UIGesture.TouchData>>.get_Current
	|
	|-RVA: 0x985D74 Offset: 0x985D74 VA: 0x985D74
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, bool>>.get_Current
	|
	|-RVA: 0x985FF8 Offset: 0x985FF8 VA: 0x985FF8
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, Color>>.get_Current
	|
	|-RVA: 0x986294 Offset: 0x986294 VA: 0x986294
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, int>>.get_Current
	|
	|-RVA: 0x986518 Offset: 0x986518 VA: 0x986518
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, object>>.get_Current
	|
	|-RVA: 0x98679C Offset: 0x98679C VA: 0x98679C
	|-Array.InternalEnumerator<Dictionary.Entry<long, object>>.get_Current
	|
	|-RVA: 0x986A30 Offset: 0x986A30 VA: 0x986A30
	|-Array.InternalEnumerator<Dictionary.Entry<object, int>>.get_Current
	|
	|-RVA: 0x986CB4 Offset: 0x986CB4 VA: 0x986CB4
	|-Array.InternalEnumerator<Dictionary.Entry<object, object>>.get_Current
	|
	|-RVA: 0x986F38 Offset: 0x986F38 VA: 0x986F38
	|-Array.InternalEnumerator<Dictionary.Entry<object, Playable>>.get_Current
	|
	|-RVA: 0x9871CC Offset: 0x9871CC VA: 0x9871CC
	|-Array.InternalEnumerator<Dictionary.Entry<object, ResourceLocator>>.get_Current
	|
	|-RVA: 0x987460 Offset: 0x987460 VA: 0x987460
	|-Array.InternalEnumerator<Dictionary.Entry<object, float>>.get_Current
	|
	|-RVA: 0x9876E4 Offset: 0x9876E4 VA: 0x9876E4
	|-Array.InternalEnumerator<Dictionary.Entry<ushort, object>>.get_Current
	|
	|-RVA: 0x987968 Offset: 0x987968 VA: 0x987968
	|-Array.InternalEnumerator<Dictionary.Entry<uint, int>>.get_Current
	|
	|-RVA: 0x987BEC Offset: 0x987BEC VA: 0x987BEC
	|-Array.InternalEnumerator<Dictionary.Entry<uint, object>>.get_Current
	|
	|-RVA: 0x987E70 Offset: 0x987E70 VA: 0x987E70
	|-Array.InternalEnumerator<Dictionary.Entry<ulong, object>>.get_Current
	|
	|-RVA: 0x988104 Offset: 0x988104 VA: 0x988104
	|-Array.InternalEnumerator<Dictionary.Entry<Vector3, int>>.get_Current
	|
	|-RVA: 0x988398 Offset: 0x988398 VA: 0x988398
	|-Array.InternalEnumerator<Dictionary.Entry<TerrainUtility.TerrainMap.TileCoord, object>>.get_Current
	|
	|-RVA: 0x98862C Offset: 0x98862C VA: 0x98862C
	|-Array.InternalEnumerator<PriorityQueue.IndexedItem<object>>.get_Current
	|
	|-RVA: 0x9888B0 Offset: 0x9888B0 VA: 0x9888B0
	|-Array.InternalEnumerator<KeyValuePair<DateTime, object>>.get_Current
	|
	|-RVA: 0x988B34 Offset: 0x988B34 VA: 0x988B34
	|-Array.InternalEnumerator<KeyValuePair<Guid, object>>.get_Current
	|
	|-RVA: 0x988DC8 Offset: 0x988DC8 VA: 0x988DC8
	|-Array.InternalEnumerator<KeyValuePair<short, object>>.get_Current
	|
	|-RVA: 0x989040 Offset: 0x989040 VA: 0x989040
	|-Array.InternalEnumerator<KeyValuePair<short, float>>.get_Current
	|
	|-RVA: 0x9892B8 Offset: 0x9892B8 VA: 0x9892B8
	|-Array.InternalEnumerator<KeyValuePair<int, bool>>.get_Current
	|
	|-RVA: 0x989530 Offset: 0x989530 VA: 0x989530
	|-Array.InternalEnumerator<KeyValuePair<int, char>>.get_Current
	|
	|-RVA: 0x9897A8 Offset: 0x9897A8 VA: 0x9897A8
	|-Array.InternalEnumerator<KeyValuePair<int, int>>.get_Current
	|
	|-RVA: 0x989A20 Offset: 0x989A20 VA: 0x989A20
	|-Array.InternalEnumerator<KeyValuePair<int, Int32Enum>>.get_Current
	|
	|-RVA: 0x989C98 Offset: 0x989C98 VA: 0x989C98
	|-Array.InternalEnumerator<KeyValuePair<int, long>>.get_Current
	|
	|-RVA: 0x989F1C Offset: 0x989F1C VA: 0x989F1C
	|-Array.InternalEnumerator<KeyValuePair<int, object>>.get_Current
	|
	|-RVA: 0x98A194 Offset: 0x98A194 VA: 0x98A194
	|-Array.InternalEnumerator<KeyValuePair<int, Vector3>>.get_Current
	|
	|-RVA: 0x98A418 Offset: 0x98A418 VA: 0x98A418
	|-Array.InternalEnumerator<KeyValuePair<int, JoypadTouchHandler.TouchState>>.get_Current
	|
	|-RVA: 0x98A6A0 Offset: 0x98A6A0 VA: 0x98A6A0
	|-Array.InternalEnumerator<KeyValuePair<int, TouchHandler.TouchState>>.get_Current
	|
	|-RVA: 0x98A928 Offset: 0x98A928 VA: 0x98A928
	|-Array.InternalEnumerator<KeyValuePair<int, UIGesture.TouchData>>.get_Current
	|
	|-RVA: 0x98ABB0 Offset: 0x98ABB0 VA: 0x98ABB0
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, bool>>.get_Current
	|
	|-RVA: 0x98AE28 Offset: 0x98AE28 VA: 0x98AE28
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, Color>>.get_Current
	|
	|-RVA: 0x98B0BC Offset: 0x98B0BC VA: 0x98B0BC
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, int>>.get_Current
	|
	|-RVA: 0x98B334 Offset: 0x98B334 VA: 0x98B334
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, object>>.get_Current
	|
	|-RVA: 0x98B5AC Offset: 0x98B5AC VA: 0x98B5AC
	|-Array.InternalEnumerator<KeyValuePair<long, object>>.get_Current
	|
	|-RVA: 0x98B830 Offset: 0x98B830 VA: 0x98B830
	|-Array.InternalEnumerator<KeyValuePair<object, int>>.get_Current
	|
	|-RVA: 0x98BAA8 Offset: 0x98BAA8 VA: 0x98BAA8
	|-Array.InternalEnumerator<KeyValuePair<object, object>>.get_Current
	|
	|-RVA: 0x98BD20 Offset: 0x98BD20 VA: 0x98BD20
	|-Array.InternalEnumerator<KeyValuePair<object, Playable>>.get_Current
	|
	|-RVA: 0x98BFA8 Offset: 0x98BFA8 VA: 0x98BFA8
	|-Array.InternalEnumerator<KeyValuePair<object, ResourceLocator>>.get_Current
	|
	|-RVA: 0x98C230 Offset: 0x98C230 VA: 0x98C230
	|-Array.InternalEnumerator<KeyValuePair<object, float>>.get_Current
	|
	|-RVA: 0x98C4A8 Offset: 0x98C4A8 VA: 0x98C4A8
	|-Array.InternalEnumerator<KeyValuePair<ushort, object>>.get_Current
	|
	|-RVA: 0x98C720 Offset: 0x98C720 VA: 0x98C720
	|-Array.InternalEnumerator<KeyValuePair<uint, int>>.get_Current
	|
	|-RVA: 0x98C998 Offset: 0x98C998 VA: 0x98C998
	|-Array.InternalEnumerator<KeyValuePair<uint, object>>.get_Current
	|
	|-RVA: 0x98CC10 Offset: 0x98CC10 VA: 0x98CC10
	|-Array.InternalEnumerator<KeyValuePair<ulong, object>>.get_Current
	|
	|-RVA: 0x98CE94 Offset: 0x98CE94 VA: 0x98CE94
	|-Array.InternalEnumerator<KeyValuePair<Vector3, int>>.get_Current
	|
	|-RVA: 0x98D118 Offset: 0x98D118 VA: 0x98D118
	|-Array.InternalEnumerator<KeyValuePair<TerrainUtility.TerrainMap.TileCoord, object>>.get_Current
	|
	|-RVA: 0x98D3A0 Offset: 0x98D3A0 VA: 0x98D3A0
	|-Array.InternalEnumerator<HashSet.Slot<int>>.get_Current
	|
	|-RVA: 0x98D628 Offset: 0x98D628 VA: 0x98D628
	|-Array.InternalEnumerator<Set.Slot<Int32Enum>>.get_Current
	|
	|-RVA: 0x98D8B0 Offset: 0x98D8B0 VA: 0x98D8B0
	|-Array.InternalEnumerator<HashSet.Slot<object>>.get_Current
	|
	|-RVA: 0x98DB38 Offset: 0x98DB38 VA: 0x98DB38
	|-Array.InternalEnumerator<Set.Slot<object>>.get_Current
	|
	|-RVA: 0x98DDC0 Offset: 0x98DDC0 VA: 0x98DDC0
	|-Array.InternalEnumerator<HashSet.Slot<uint>>.get_Current
	|
	|-RVA: 0x98E048 Offset: 0x98E048 VA: 0x98E048
	|-Array.InternalEnumerator<HashSet.Slot<ulong>>.get_Current
	|
	|-RVA: 0x98E2CC Offset: 0x98E2CC VA: 0x98E2CC
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Color32>>.get_Current
	|
	|-RVA: 0x98E560 Offset: 0x98E560 VA: 0x98E560
	|-Array.InternalEnumerator<TMP_TextProcessingStack<HighlightState>>.get_Current
	|
	|-RVA: 0x98E7F4 Offset: 0x98E7F4 VA: 0x98E7F4
	|-Array.InternalEnumerator<TMP_TextProcessingStack<int>>.get_Current
	|
	|-RVA: 0x98EA88 Offset: 0x98EA88 VA: 0x98EA88
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Int32Enum>>.get_Current
	|
	|-RVA: 0x98ED1C Offset: 0x98ED1C VA: 0x98ED1C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<MaterialReference>>.get_Current
	|
	|-RVA: 0x98EFC0 Offset: 0x98EFC0 VA: 0x98EFC0
	|-Array.InternalEnumerator<TMP_TextProcessingStack<object>>.get_Current
	|
	|-RVA: 0x98F254 Offset: 0x98F254 VA: 0x98F254
	|-Array.InternalEnumerator<TMP_TextProcessingStack<float>>.get_Current
	|
	|-RVA: 0x98F4E8 Offset: 0x98F4E8 VA: 0x98F4E8
	|-Array.InternalEnumerator<TMP_TextProcessingStack<WordWrapState>>.get_Current
	|
	|-RVA: 0x98F778 Offset: 0x98F778 VA: 0x98F778
	|-Array.InternalEnumerator<TimeInterval<object>>.get_Current
	|
	|-RVA: 0x98F9FC Offset: 0x98F9FC VA: 0x98F9FC
	|-Array.InternalEnumerator<Timestamped<bool>>.get_Current
	|
	|-RVA: 0x98FC90 Offset: 0x98FC90 VA: 0x98FC90
	|-Array.InternalEnumerator<Timestamped<object>>.get_Current
	|
	|-RVA: 0x9DAF84 Offset: 0x9DAF84 VA: 0x9DAF84
	|-Array.InternalEnumerator<Tuple<object>>.get_Current
	|
	|-RVA: 0x9DB1E4 Offset: 0x9DB1E4 VA: 0x9DB1E4
	|-Array.InternalEnumerator<ValueTuple<object, object>>.get_Current
	|
	|-RVA: 0x9DB45C Offset: 0x9DB45C VA: 0x9DB45C
	|-Array.InternalEnumerator<ValueTuple<object, object, object>>.get_Current
	|
	|-RVA: 0x9DB6E4 Offset: 0x9DB6E4 VA: 0x9DB6E4
	|-Array.InternalEnumerator<BatchVisibility>.get_Current
	|
	|-RVA: 0x9DB96C Offset: 0x9DB96C VA: 0x9DB96C
	|-Array.InternalEnumerator<bool>.get_Current
	|
	|-RVA: 0x9DBBCC Offset: 0x9DBBCC VA: 0x9DBBCC
	|-Array.InternalEnumerator<Bounds>.get_Current
	|
	|-RVA: 0x9DBE60 Offset: 0x9DBE60 VA: 0x9DBE60
	|-Array.InternalEnumerator<byte>.get_Current
	|
	|-RVA: 0x9DC0C0 Offset: 0x9DC0C0 VA: 0x9DC0C0
	|-Array.InternalEnumerator<ByteEnum>.get_Current
	|
	|-RVA: 0x9DC320 Offset: 0x9DC320 VA: 0x9DC320
	|-Array.InternalEnumerator<CancellationToken>.get_Current
	|
	|-RVA: 0x9DC580 Offset: 0x9DC580 VA: 0x9DC580
	|-Array.InternalEnumerator<CancellationTokenRegistration>.get_Current
	|
	|-RVA: 0x9DC808 Offset: 0x9DC808 VA: 0x9DC808
	|-Array.InternalEnumerator<char>.get_Current
	|
	|-RVA: 0x9DCA68 Offset: 0x9DCA68 VA: 0x9DCA68
	|-Array.InternalEnumerator<Color>.get_Current
	|
	|-RVA: 0x9DCCEC Offset: 0x9DCCEC VA: 0x9DCCEC
	|-Array.InternalEnumerator<Color32>.get_Current
	|
	|-RVA: 0x9DCF4C Offset: 0x9DCF4C VA: 0x9DCF4C
	|-Array.InternalEnumerator<ColorBlock>.get_Current
	|
	|-RVA: 0x9DD1DC Offset: 0x9DD1DC VA: 0x9DD1DC
	|-Array.InternalEnumerator<ContactPoint>.get_Current
	|
	|-RVA: 0x9DD470 Offset: 0x9DD470 VA: 0x9DD470
	|-Array.InternalEnumerator<ContactPoint2D>.get_Current
	|
	|-RVA: 0x9DD714 Offset: 0x9DD714 VA: 0x9DD714
	|-Array.InternalEnumerator<CustomAttributeNamedArgument>.get_Current
	|
	|-RVA: 0x9DD99C Offset: 0x9DD99C VA: 0x9DD99C
	|-Array.InternalEnumerator<CustomAttributeTypedArgument>.get_Current
	|
	|-RVA: 0x9DDC14 Offset: 0x9DDC14 VA: 0x9DDC14
	|-Array.InternalEnumerator<DateTime>.get_Current
	|
	|-RVA: 0x9DDE8C Offset: 0x9DDE8C VA: 0x9DDE8C
	|-Array.InternalEnumerator<Decimal>.get_Current
	|
	|-RVA: 0x9DE110 Offset: 0x9DE110 VA: 0x9DE110
	|-Array.InternalEnumerator<DictionaryEntry>.get_Current
	|
	|-RVA: 0x9DE388 Offset: 0x9DE388 VA: 0x9DE388
	|-Array.InternalEnumerator<double>.get_Current
	|
	|-RVA: 0x9DE5E8 Offset: 0x9DE5E8 VA: 0x9DE5E8
	|-Array.InternalEnumerator<Ephemeron>.get_Current
	|
	|-RVA: 0x9DE860 Offset: 0x9DE860 VA: 0x9DE860
	|-Array.InternalEnumerator<GCHandle>.get_Current
	|
	|-RVA: 0x9DEAC0 Offset: 0x9DEAC0 VA: 0x9DEAC0
	|-Array.InternalEnumerator<GlyphMarshallingStruct>.get_Current
	|
	|-RVA: 0x9DED54 Offset: 0x9DED54 VA: 0x9DED54
	|-Array.InternalEnumerator<GlyphPairAdjustmentRecord>.get_Current
	|
	|-RVA: 0x9DEFE8 Offset: 0x9DEFE8 VA: 0x9DEFE8
	|-Array.InternalEnumerator<GlyphRect>.get_Current
	|
	|-RVA: 0x9DF26C Offset: 0x9DF26C VA: 0x9DF26C
	|-Array.InternalEnumerator<Guid>.get_Current
	|
	|-RVA: 0x9DF4F0 Offset: 0x9DF4F0 VA: 0x9DF4F0
	|-Array.InternalEnumerator<HeaderVariantInfo>.get_Current
	|
	|-RVA: 0x9DF768 Offset: 0x9DF768 VA: 0x9DF768
	|-Array.InternalEnumerator<HighlightState>.get_Current
	|
	|-RVA: 0x9DF9FC Offset: 0x9DF9FC VA: 0x9DF9FC
	|-Array.InternalEnumerator<HumanBone>.get_Current
	|
	|-RVA: 0x9DFCA0 Offset: 0x9DFCA0 VA: 0x9DFCA0
	|-Array.InternalEnumerator<short>.get_Current
	|
	|-RVA: 0x9DFF00 Offset: 0x9DFF00 VA: 0x9DFF00
	|-Array.InternalEnumerator<int>.get_Current
	|
	|-RVA: 0x9E0160 Offset: 0x9E0160 VA: 0x9E0160
	|-Array.InternalEnumerator<Int32Enum>.get_Current
	|
	|-RVA: 0x9E03C0 Offset: 0x9E03C0 VA: 0x9E03C0
	|-Array.InternalEnumerator<long>.get_Current
	|
	|-RVA: 0x9E0620 Offset: 0x9E0620 VA: 0x9E0620
	|-Array.InternalEnumerator<IntPtr>.get_Current
	|
	|-RVA: 0x9E0880 Offset: 0x9E0880 VA: 0x9E0880
	|-Array.InternalEnumerator<InternalCodePageDataItem>.get_Current
	|
	|-RVA: 0x9E0B08 Offset: 0x9E0B08 VA: 0x9E0B08
	|-Array.InternalEnumerator<InternalEncodingDataItem>.get_Current
	|
	|-RVA: 0x9E0D80 Offset: 0x9E0D80 VA: 0x9E0D80
	|-Array.InternalEnumerator<IntervalTreeNode>.get_Current
	|
	|-RVA: 0x9E1014 Offset: 0x9E1014 VA: 0x9E1014
	|-Array.InternalEnumerator<Keyframe>.get_Current
	|
	|-RVA: 0x9E12B0 Offset: 0x9E12B0 VA: 0x9E12B0
	|-Array.InternalEnumerator<LightDataGI>.get_Current
	|
	|-RVA: 0x9E1540 Offset: 0x9E1540 VA: 0x9E1540
	|-Array.InternalEnumerator<MaterialReference>.get_Current
	|
	|-RVA: 0x9E17D4 Offset: 0x9E17D4 VA: 0x9E17D4
	|-Array.InternalEnumerator<MessageStringParameterBlock>.get_Current
	|
	|-RVA: 0x9E1A4C Offset: 0x9E1A4C VA: 0x9E1A4C
	|-Array.InternalEnumerator<Navigation>.get_Current
	|
	|-RVA: 0x9E1CE0 Offset: 0x9E1CE0 VA: 0x9E1CE0
	|-Array.InternalEnumerator<object>.get_Current
	|
	|-RVA: 0x9E1EF0 Offset: 0x9E1EF0 VA: 0x9E1EF0
	|-Array.InternalEnumerator<ParameterModifier>.get_Current
	|
	|-RVA: 0x9E2150 Offset: 0x9E2150 VA: 0x9E2150
	|-Array.InternalEnumerator<Plane>.get_Current
	|
	|-RVA: 0x9E23D4 Offset: 0x9E23D4 VA: 0x9E23D4
	|-Array.InternalEnumerator<Playable>.get_Current
	|
	|-RVA: 0x9E264C Offset: 0x9E264C VA: 0x9E264C
	|-Array.InternalEnumerator<PlayableBinding>.get_Current
	|
	|-RVA: 0x9E28D0 Offset: 0x9E28D0 VA: 0x9E28D0
	|-Array.InternalEnumerator<PlayerLoopSystem>.get_Current
	|
	|-RVA: 0x9E2B64 Offset: 0x9E2B64 VA: 0x9E2B64
	|-Array.InternalEnumerator<Quaternion>.get_Current
	|
	|-RVA: 0x9E2DE8 Offset: 0x9E2DE8 VA: 0x9E2DE8
	|-Array.InternalEnumerator<RaycastHit>.get_Current
	|
	|-RVA: 0x9E307C Offset: 0x9E307C VA: 0x9E307C
	|-Array.InternalEnumerator<RaycastHit2D>.get_Current
	|
	|-RVA: 0x9E3310 Offset: 0x9E3310 VA: 0x9E3310
	|-Array.InternalEnumerator<RaycastResult>.get_Current
	|
	|-RVA: 0x9E35A0 Offset: 0x9E35A0 VA: 0x9E35A0
	|-Array.InternalEnumerator<Rect>.get_Current
	|
	|-RVA: 0x9E3824 Offset: 0x9E3824 VA: 0x9E3824
	|-Array.InternalEnumerator<ResourceLocator>.get_Current
	|
	|-RVA: 0x9E3A9C Offset: 0x9E3A9C VA: 0x9E3A9C
	|-Array.InternalEnumerator<RichTextTagAttribute>.get_Current
	|
	|-RVA: 0x9E3D30 Offset: 0x9E3D30 VA: 0x9E3D30
	|-Array.InternalEnumerator<sbyte>.get_Current
	|
	|-RVA: 0x9E3F90 Offset: 0x9E3F90 VA: 0x9E3F90
	|-Array.InternalEnumerator<float>.get_Current
	|
	|-RVA: 0x9E41F0 Offset: 0x9E41F0 VA: 0x9E41F0
	|-Array.InternalEnumerator<SkeletonBone>.get_Current
	|
	|-RVA: 0x9E4484 Offset: 0x9E4484 VA: 0x9E4484
	|-Array.InternalEnumerator<SpriteState>.get_Current
	|
	|-RVA: 0x9E4708 Offset: 0x9E4708 VA: 0x9E4708
	|-Array.InternalEnumerator<TMP_CharacterInfo>.get_Current
	|
	|-RVA: 0x9E4998 Offset: 0x9E4998 VA: 0x9E4998
	|-Array.InternalEnumerator<TMP_FontWeightPair>.get_Current
	|
	|-RVA: 0x9E4C10 Offset: 0x9E4C10 VA: 0x9E4C10
	|-Array.InternalEnumerator<TMP_LineInfo>.get_Current
	|
	|-RVA: 0x9E4EA0 Offset: 0x9E4EA0 VA: 0x9E4EA0
	|-Array.InternalEnumerator<TMP_LinkInfo>.get_Current
	|
	|-RVA: 0x9E513C Offset: 0x9E513C VA: 0x9E513C
	|-Array.InternalEnumerator<TMP_MeshInfo>.get_Current
	|
	|-RVA: 0x9E53D0 Offset: 0x9E53D0 VA: 0x9E53D0
	|-Array.InternalEnumerator<TMP_PageInfo>.get_Current
	|
	|-RVA: 0x9E5664 Offset: 0x9E5664 VA: 0x9E5664
	|-Array.InternalEnumerator<TMP_WordInfo>.get_Current
	|
	|-RVA: 0x9E58E8 Offset: 0x9E58E8 VA: 0x9E58E8
	|-Array.InternalEnumerator<TimeSpan>.get_Current
	|
	|-RVA: 0x9E5B60 Offset: 0x9E5B60 VA: 0x9E5B60
	|-Array.InternalEnumerator<Touch>.get_Current
	|
	|-RVA: 0x9E5DF0 Offset: 0x9E5DF0 VA: 0x9E5DF0
	|-Array.InternalEnumerator<UICharInfo>.get_Current
	|
	|-RVA: 0x9E6078 Offset: 0x9E6078 VA: 0x9E6078
	|-Array.InternalEnumerator<UILineInfo>.get_Current
	|
	|-RVA: 0x9E62FC Offset: 0x9E62FC VA: 0x9E62FC
	|-Array.InternalEnumerator<UIVertex>.get_Current
	|
	|-RVA: 0x9E658C Offset: 0x9E658C VA: 0x9E658C
	|-Array.InternalEnumerator<ushort>.get_Current
	|
	|-RVA: 0x9E67EC Offset: 0x9E67EC VA: 0x9E67EC
	|-Array.InternalEnumerator<UInt16Enum>.get_Current
	|
	|-RVA: 0x9E6A4C Offset: 0x9E6A4C VA: 0x9E6A4C
	|-Array.InternalEnumerator<uint>.get_Current
	|
	|-RVA: 0x9E6CAC Offset: 0x9E6CAC VA: 0x9E6CAC
	|-Array.InternalEnumerator<UInt32Enum>.get_Current
	|
	|-RVA: 0x9E6F0C Offset: 0x9E6F0C VA: 0x9E6F0C
	|-Array.InternalEnumerator<ulong>.get_Current
	|
	|-RVA: 0x9E716C Offset: 0x9E716C VA: 0x9E716C
	|-Array.InternalEnumerator<Unit>.get_Current
	|
	|-RVA: 0x9E73CC Offset: 0x9E73CC VA: 0x9E73CC
	|-Array.InternalEnumerator<Vector2>.get_Current
	|
	|-RVA: 0x9E7644 Offset: 0x9E7644 VA: 0x9E7644
	|-Array.InternalEnumerator<Vector3>.get_Current
	|
	|-RVA: 0x9E78CC Offset: 0x9E78CC VA: 0x9E78CC
	|-Array.InternalEnumerator<Vector4>.get_Current
	|
	|-RVA: 0x9E7B50 Offset: 0x9E7B50 VA: 0x9E7B50
	|-Array.InternalEnumerator<WordWrapState>.get_Current
	|
	|-RVA: 0x9E7DE0 Offset: 0x9E7DE0 VA: 0x9E7DE0
	|-Array.InternalEnumerator<X509ChainStatus>.get_Current
	|
	|-RVA: 0x9E8058 Offset: 0x9E8058 VA: 0x9E8058
	|-Array.InternalEnumerator<jvalue>.get_Current
	|
	|-RVA: 0x9E82D0 Offset: 0x9E82D0 VA: 0x9E82D0
	|-Array.InternalEnumerator<AnimationOutputWeightProcessor.WeightInfo>.get_Current
	|
	|-RVA: 0x9E8564 Offset: 0x9E8564 VA: 0x9E8564
	|-Array.InternalEnumerator<BeforeRenderHelper.OrderBlock>.get_Current
	|
	|-RVA: 0x9E87DC Offset: 0x9E87DC VA: 0x9E87DC
	|-Array.InternalEnumerator<Camera.RenderRequest>.get_Current
	|
	|-RVA: 0x9E8A64 Offset: 0x9E8A64 VA: 0x9E8A64
	|-Array.InternalEnumerator<CodePointIndexer.TableRange>.get_Current
	|
	|-RVA: 0x9E8CF8 Offset: 0x9E8CF8 VA: 0x9E8CF8
	|-Array.InternalEnumerator<CookieTokenizer.RecognizedAttribute>.get_Current
	|
	|-RVA: 0x9E8F70 Offset: 0x9E8F70 VA: 0x9E8F70
	|-Array.InternalEnumerator<Hashtable.bucket>.get_Current
	|
	|-RVA: 0x9E91F8 Offset: 0x9E91F8 VA: 0x9E91F8
	|-Array.InternalEnumerator<JoypadTouchHandler.TouchState>.get_Current
	|
	|-RVA: 0x9E9470 Offset: 0x9E9470 VA: 0x9E9470
	|-Array.InternalEnumerator<ParameterizedStrings.FormatParam>.get_Current
	|
	|-RVA: 0x9E96E8 Offset: 0x9E96E8 VA: 0x9E96E8
	|-Array.InternalEnumerator<RegexCharClass.LowerCaseMapping>.get_Current
	|
	|-RVA: 0x9E9970 Offset: 0x9E9970 VA: 0x9E9970
	|-Array.InternalEnumerator<SendMouseEvents.HitInfo>.get_Current
	|
	|-RVA: 0x9E9BE8 Offset: 0x9E9BE8 VA: 0x9E9BE8
	|-Array.InternalEnumerator<Socket.WSABUF>.get_Current
	|
	|-RVA: 0x9E9E60 Offset: 0x9E9E60 VA: 0x9E9E60
	|-Array.InternalEnumerator<TMP_Text.UnicodeChar>.get_Current
	|
	|-RVA: 0x9EA0E8 Offset: 0x9EA0E8 VA: 0x9EA0E8
	|-Array.InternalEnumerator<TexturePacker_JsonArray.Frame>.get_Current
	|
	|-RVA: 0x9EA38C Offset: 0x9EA38C VA: 0x9EA38C
	|-Array.InternalEnumerator<TimeNotificationBehaviour.NotificationEntry>.get_Current
	|
	|-RVA: 0x9EA610 Offset: 0x9EA610 VA: 0x9EA610
	|-Array.InternalEnumerator<TouchHandler.TouchState>.get_Current
	|
	|-RVA: 0x9EA888 Offset: 0x9EA888 VA: 0x9EA888
	|-Array.InternalEnumerator<UIGesture.TouchData>.get_Current
	|
	|-RVA: 0x9EAB00 Offset: 0x9EAB00 VA: 0x9EAB00
	|-Array.InternalEnumerator<UmAlQuraCalendar.DateMapping>.get_Current
	|
	|-RVA: 0x9EAD84 Offset: 0x9EAD84 VA: 0x9EAD84
	|-Array.InternalEnumerator<UnitySynchronizationContext.WorkRequest>.get_Current
	|
	|-RVA: 0x9EB00C Offset: 0x9EB00C VA: 0x9EB00C
	|-Array.InternalEnumerator<AssetBundleBuildMap.AssetBundleEntry.AssetPathString>.get_Current
	|
	|-RVA: 0x9EB284 Offset: 0x9EB284 VA: 0x9EB284
	|-Array.InternalEnumerator<TerrainUtility.TerrainMap.TileCoord>.get_Current
	*/

	// RVA: -1 Offset: -1 Slot: 8
	private void System.Collections.IEnumerator.Reset() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x983398 Offset: 0x983398 VA: 0x983398
	|-Array.InternalEnumerator<ArraySegment<byte>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98361C Offset: 0x98361C VA: 0x98361C
	|-Array.InternalEnumerator<DictionaryEntry<object, int, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9838A0 Offset: 0x9838A0 VA: 0x9838A0
	|-Array.InternalEnumerator<DictionaryEntry<object, object, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x983B2C Offset: 0x983B2C VA: 0x983B2C
	|-Array.InternalEnumerator<IntervalTree.Entry<object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x983DC4 Offset: 0x983DC4 VA: 0x983DC4
	|-Array.InternalEnumerator<Dictionary.Entry<Guid, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x984054 Offset: 0x984054 VA: 0x984054
	|-Array.InternalEnumerator<Dictionary.Entry<short, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9842D8 Offset: 0x9842D8 VA: 0x9842D8
	|-Array.InternalEnumerator<Dictionary.Entry<short, float>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98455C Offset: 0x98455C VA: 0x98455C
	|-Array.InternalEnumerator<Dictionary.Entry<int, bool>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9847E0 Offset: 0x9847E0 VA: 0x9847E0
	|-Array.InternalEnumerator<Dictionary.Entry<int, char>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x984A64 Offset: 0x984A64 VA: 0x984A64
	|-Array.InternalEnumerator<Dictionary.Entry<int, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x984CE8 Offset: 0x984CE8 VA: 0x984CE8
	|-Array.InternalEnumerator<Dictionary.Entry<int, Int32Enum>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x984F74 Offset: 0x984F74 VA: 0x984F74
	|-Array.InternalEnumerator<Dictionary.Entry<int, long>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x985200 Offset: 0x985200 VA: 0x985200
	|-Array.InternalEnumerator<Dictionary.Entry<int, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98548C Offset: 0x98548C VA: 0x98548C
	|-Array.InternalEnumerator<Dictionary.Entry<int, Vector3>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x985720 Offset: 0x985720 VA: 0x985720
	|-Array.InternalEnumerator<Dictionary.Entry<int, JoypadTouchHandler.TouchState>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9859B4 Offset: 0x9859B4 VA: 0x9859B4
	|-Array.InternalEnumerator<Dictionary.Entry<int, TouchHandler.TouchState>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x985C48 Offset: 0x985C48 VA: 0x985C48
	|-Array.InternalEnumerator<Dictionary.Entry<int, UIGesture.TouchData>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x985ED4 Offset: 0x985ED4 VA: 0x985ED4
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, bool>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x986164 Offset: 0x986164 VA: 0x986164
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, Color>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9863F4 Offset: 0x9863F4 VA: 0x9863F4
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x986678 Offset: 0x986678 VA: 0x986678
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x986904 Offset: 0x986904 VA: 0x986904
	|-Array.InternalEnumerator<Dictionary.Entry<long, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x986B90 Offset: 0x986B90 VA: 0x986B90
	|-Array.InternalEnumerator<Dictionary.Entry<object, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x986E14 Offset: 0x986E14 VA: 0x986E14
	|-Array.InternalEnumerator<Dictionary.Entry<object, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9870A0 Offset: 0x9870A0 VA: 0x9870A0
	|-Array.InternalEnumerator<Dictionary.Entry<object, Playable>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x987334 Offset: 0x987334 VA: 0x987334
	|-Array.InternalEnumerator<Dictionary.Entry<object, ResourceLocator>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9875C0 Offset: 0x9875C0 VA: 0x9875C0
	|-Array.InternalEnumerator<Dictionary.Entry<object, float>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x987844 Offset: 0x987844 VA: 0x987844
	|-Array.InternalEnumerator<Dictionary.Entry<ushort, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x987AC8 Offset: 0x987AC8 VA: 0x987AC8
	|-Array.InternalEnumerator<Dictionary.Entry<uint, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x987D4C Offset: 0x987D4C VA: 0x987D4C
	|-Array.InternalEnumerator<Dictionary.Entry<uint, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x987FD8 Offset: 0x987FD8 VA: 0x987FD8
	|-Array.InternalEnumerator<Dictionary.Entry<ulong, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98826C Offset: 0x98826C VA: 0x98826C
	|-Array.InternalEnumerator<Dictionary.Entry<Vector3, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x988500 Offset: 0x988500 VA: 0x988500
	|-Array.InternalEnumerator<Dictionary.Entry<TerrainUtility.TerrainMap.TileCoord, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98878C Offset: 0x98878C VA: 0x98878C
	|-Array.InternalEnumerator<PriorityQueue.IndexedItem<object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x988A10 Offset: 0x988A10 VA: 0x988A10
	|-Array.InternalEnumerator<KeyValuePair<DateTime, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x988C9C Offset: 0x988C9C VA: 0x988C9C
	|-Array.InternalEnumerator<KeyValuePair<Guid, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x988F24 Offset: 0x988F24 VA: 0x988F24
	|-Array.InternalEnumerator<KeyValuePair<short, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98919C Offset: 0x98919C VA: 0x98919C
	|-Array.InternalEnumerator<KeyValuePair<short, float>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x989414 Offset: 0x989414 VA: 0x989414
	|-Array.InternalEnumerator<KeyValuePair<int, bool>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98968C Offset: 0x98968C VA: 0x98968C
	|-Array.InternalEnumerator<KeyValuePair<int, char>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x989904 Offset: 0x989904 VA: 0x989904
	|-Array.InternalEnumerator<KeyValuePair<int, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x989B7C Offset: 0x989B7C VA: 0x989B7C
	|-Array.InternalEnumerator<KeyValuePair<int, Int32Enum>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x989DF8 Offset: 0x989DF8 VA: 0x989DF8
	|-Array.InternalEnumerator<KeyValuePair<int, long>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98A078 Offset: 0x98A078 VA: 0x98A078
	|-Array.InternalEnumerator<KeyValuePair<int, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98A2F4 Offset: 0x98A2F4 VA: 0x98A2F4
	|-Array.InternalEnumerator<KeyValuePair<int, Vector3>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98A57C Offset: 0x98A57C VA: 0x98A57C
	|-Array.InternalEnumerator<KeyValuePair<int, JoypadTouchHandler.TouchState>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98A804 Offset: 0x98A804 VA: 0x98A804
	|-Array.InternalEnumerator<KeyValuePair<int, TouchHandler.TouchState>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98AA8C Offset: 0x98AA8C VA: 0x98AA8C
	|-Array.InternalEnumerator<KeyValuePair<int, UIGesture.TouchData>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98AD0C Offset: 0x98AD0C VA: 0x98AD0C
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, bool>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98AF90 Offset: 0x98AF90 VA: 0x98AF90
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, Color>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98B218 Offset: 0x98B218 VA: 0x98B218
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98B490 Offset: 0x98B490 VA: 0x98B490
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98B70C Offset: 0x98B70C VA: 0x98B70C
	|-Array.InternalEnumerator<KeyValuePair<long, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98B98C Offset: 0x98B98C VA: 0x98B98C
	|-Array.InternalEnumerator<KeyValuePair<object, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98BC04 Offset: 0x98BC04 VA: 0x98BC04
	|-Array.InternalEnumerator<KeyValuePair<object, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98BE84 Offset: 0x98BE84 VA: 0x98BE84
	|-Array.InternalEnumerator<KeyValuePair<object, Playable>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98C10C Offset: 0x98C10C VA: 0x98C10C
	|-Array.InternalEnumerator<KeyValuePair<object, ResourceLocator>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98C38C Offset: 0x98C38C VA: 0x98C38C
	|-Array.InternalEnumerator<KeyValuePair<object, float>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98C604 Offset: 0x98C604 VA: 0x98C604
	|-Array.InternalEnumerator<KeyValuePair<ushort, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98C87C Offset: 0x98C87C VA: 0x98C87C
	|-Array.InternalEnumerator<KeyValuePair<uint, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98CAF4 Offset: 0x98CAF4 VA: 0x98CAF4
	|-Array.InternalEnumerator<KeyValuePair<uint, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98CD70 Offset: 0x98CD70 VA: 0x98CD70
	|-Array.InternalEnumerator<KeyValuePair<ulong, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98CFF4 Offset: 0x98CFF4 VA: 0x98CFF4
	|-Array.InternalEnumerator<KeyValuePair<Vector3, int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98D27C Offset: 0x98D27C VA: 0x98D27C
	|-Array.InternalEnumerator<KeyValuePair<TerrainUtility.TerrainMap.TileCoord, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98D504 Offset: 0x98D504 VA: 0x98D504
	|-Array.InternalEnumerator<HashSet.Slot<int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98D78C Offset: 0x98D78C VA: 0x98D78C
	|-Array.InternalEnumerator<Set.Slot<Int32Enum>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98DA14 Offset: 0x98DA14 VA: 0x98DA14
	|-Array.InternalEnumerator<HashSet.Slot<object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98DC9C Offset: 0x98DC9C VA: 0x98DC9C
	|-Array.InternalEnumerator<Set.Slot<object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98DF24 Offset: 0x98DF24 VA: 0x98DF24
	|-Array.InternalEnumerator<HashSet.Slot<uint>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98E1A8 Offset: 0x98E1A8 VA: 0x98E1A8
	|-Array.InternalEnumerator<HashSet.Slot<ulong>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98E434 Offset: 0x98E434 VA: 0x98E434
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Color32>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98E6C8 Offset: 0x98E6C8 VA: 0x98E6C8
	|-Array.InternalEnumerator<TMP_TextProcessingStack<HighlightState>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98E95C Offset: 0x98E95C VA: 0x98E95C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<int>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98EBF0 Offset: 0x98EBF0 VA: 0x98EBF0
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Int32Enum>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98EE8C Offset: 0x98EE8C VA: 0x98EE8C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<MaterialReference>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98F128 Offset: 0x98F128 VA: 0x98F128
	|-Array.InternalEnumerator<TMP_TextProcessingStack<object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98F3BC Offset: 0x98F3BC VA: 0x98F3BC
	|-Array.InternalEnumerator<TMP_TextProcessingStack<float>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98F650 Offset: 0x98F650 VA: 0x98F650
	|-Array.InternalEnumerator<TMP_TextProcessingStack<WordWrapState>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98F8D8 Offset: 0x98F8D8 VA: 0x98F8D8
	|-Array.InternalEnumerator<TimeInterval<object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98FB64 Offset: 0x98FB64 VA: 0x98FB64
	|-Array.InternalEnumerator<Timestamped<bool>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x98FDF8 Offset: 0x98FDF8 VA: 0x98FDF8
	|-Array.InternalEnumerator<Timestamped<object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DB0D0 Offset: 0x9DB0D0 VA: 0x9DB0D0
	|-Array.InternalEnumerator<Tuple<object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DB340 Offset: 0x9DB340 VA: 0x9DB340
	|-Array.InternalEnumerator<ValueTuple<object, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DB5C0 Offset: 0x9DB5C0 VA: 0x9DB5C0
	|-Array.InternalEnumerator<ValueTuple<object, object, object>>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DB848 Offset: 0x9DB848 VA: 0x9DB848
	|-Array.InternalEnumerator<BatchVisibility>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DBAB8 Offset: 0x9DBAB8 VA: 0x9DBAB8
	|-Array.InternalEnumerator<bool>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DBD34 Offset: 0x9DBD34 VA: 0x9DBD34
	|-Array.InternalEnumerator<Bounds>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DBFAC Offset: 0x9DBFAC VA: 0x9DBFAC
	|-Array.InternalEnumerator<byte>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DC20C Offset: 0x9DC20C VA: 0x9DC20C
	|-Array.InternalEnumerator<ByteEnum>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DC46C Offset: 0x9DC46C VA: 0x9DC46C
	|-Array.InternalEnumerator<CancellationToken>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DC6E4 Offset: 0x9DC6E4 VA: 0x9DC6E4
	|-Array.InternalEnumerator<CancellationTokenRegistration>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DC954 Offset: 0x9DC954 VA: 0x9DC954
	|-Array.InternalEnumerator<char>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DCBC8 Offset: 0x9DCBC8 VA: 0x9DCBC8
	|-Array.InternalEnumerator<Color>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DCE38 Offset: 0x9DCE38 VA: 0x9DCE38
	|-Array.InternalEnumerator<Color32>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DD0B4 Offset: 0x9DD0B4 VA: 0x9DD0B4
	|-Array.InternalEnumerator<ColorBlock>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DD344 Offset: 0x9DD344 VA: 0x9DD344
	|-Array.InternalEnumerator<ContactPoint>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DD5E0 Offset: 0x9DD5E0 VA: 0x9DD5E0
	|-Array.InternalEnumerator<ContactPoint2D>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DD878 Offset: 0x9DD878 VA: 0x9DD878
	|-Array.InternalEnumerator<CustomAttributeNamedArgument>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DDAF8 Offset: 0x9DDAF8 VA: 0x9DDAF8
	|-Array.InternalEnumerator<CustomAttributeTypedArgument>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DDD70 Offset: 0x9DDD70 VA: 0x9DDD70
	|-Array.InternalEnumerator<DateTime>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DDFEC Offset: 0x9DDFEC VA: 0x9DDFEC
	|-Array.InternalEnumerator<Decimal>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DE26C Offset: 0x9DE26C VA: 0x9DE26C
	|-Array.InternalEnumerator<DictionaryEntry>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DE4D4 Offset: 0x9DE4D4 VA: 0x9DE4D4
	|-Array.InternalEnumerator<double>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DE744 Offset: 0x9DE744 VA: 0x9DE744
	|-Array.InternalEnumerator<Ephemeron>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DE9AC Offset: 0x9DE9AC VA: 0x9DE9AC
	|-Array.InternalEnumerator<GCHandle>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DEC28 Offset: 0x9DEC28 VA: 0x9DEC28
	|-Array.InternalEnumerator<GlyphMarshallingStruct>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DEEBC Offset: 0x9DEEBC VA: 0x9DEEBC
	|-Array.InternalEnumerator<GlyphPairAdjustmentRecord>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DF148 Offset: 0x9DF148 VA: 0x9DF148
	|-Array.InternalEnumerator<GlyphRect>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DF3CC Offset: 0x9DF3CC VA: 0x9DF3CC
	|-Array.InternalEnumerator<Guid>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DF64C Offset: 0x9DF64C VA: 0x9DF64C
	|-Array.InternalEnumerator<HeaderVariantInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DF8D0 Offset: 0x9DF8D0 VA: 0x9DF8D0
	|-Array.InternalEnumerator<HighlightState>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DFB6C Offset: 0x9DFB6C VA: 0x9DFB6C
	|-Array.InternalEnumerator<HumanBone>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9DFDEC Offset: 0x9DFDEC VA: 0x9DFDEC
	|-Array.InternalEnumerator<short>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E004C Offset: 0x9E004C VA: 0x9E004C
	|-Array.InternalEnumerator<int>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E02AC Offset: 0x9E02AC VA: 0x9E02AC
	|-Array.InternalEnumerator<Int32Enum>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E050C Offset: 0x9E050C VA: 0x9E050C
	|-Array.InternalEnumerator<long>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E076C Offset: 0x9E076C VA: 0x9E076C
	|-Array.InternalEnumerator<IntPtr>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E09E4 Offset: 0x9E09E4 VA: 0x9E09E4
	|-Array.InternalEnumerator<InternalCodePageDataItem>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E0C64 Offset: 0x9E0C64 VA: 0x9E0C64
	|-Array.InternalEnumerator<InternalEncodingDataItem>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E0EE8 Offset: 0x9E0EE8 VA: 0x9E0EE8
	|-Array.InternalEnumerator<IntervalTreeNode>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E1180 Offset: 0x9E1180 VA: 0x9E1180
	|-Array.InternalEnumerator<Keyframe>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E1418 Offset: 0x9E1418 VA: 0x9E1418
	|-Array.InternalEnumerator<LightDataGI>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E16A8 Offset: 0x9E16A8 VA: 0x9E16A8
	|-Array.InternalEnumerator<MaterialReference>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E1930 Offset: 0x9E1930 VA: 0x9E1930
	|-Array.InternalEnumerator<MessageStringParameterBlock>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E1BB4 Offset: 0x9E1BB4 VA: 0x9E1BB4
	|-Array.InternalEnumerator<Navigation>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E1E2C Offset: 0x9E1E2C VA: 0x9E1E2C
	|-Array.InternalEnumerator<object>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E203C Offset: 0x9E203C VA: 0x9E203C
	|-Array.InternalEnumerator<ParameterModifier>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E22B0 Offset: 0x9E22B0 VA: 0x9E22B0
	|-Array.InternalEnumerator<Plane>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E2530 Offset: 0x9E2530 VA: 0x9E2530
	|-Array.InternalEnumerator<Playable>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E27AC Offset: 0x9E27AC VA: 0x9E27AC
	|-Array.InternalEnumerator<PlayableBinding>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E2A38 Offset: 0x9E2A38 VA: 0x9E2A38
	|-Array.InternalEnumerator<PlayerLoopSystem>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E2CC4 Offset: 0x9E2CC4 VA: 0x9E2CC4
	|-Array.InternalEnumerator<Quaternion>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E2F50 Offset: 0x9E2F50 VA: 0x9E2F50
	|-Array.InternalEnumerator<RaycastHit>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E31E4 Offset: 0x9E31E4 VA: 0x9E31E4
	|-Array.InternalEnumerator<RaycastHit2D>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E3478 Offset: 0x9E3478 VA: 0x9E3478
	|-Array.InternalEnumerator<RaycastResult>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E3700 Offset: 0x9E3700 VA: 0x9E3700
	|-Array.InternalEnumerator<Rect>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E3980 Offset: 0x9E3980 VA: 0x9E3980
	|-Array.InternalEnumerator<ResourceLocator>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E3C04 Offset: 0x9E3C04 VA: 0x9E3C04
	|-Array.InternalEnumerator<RichTextTagAttribute>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E3E7C Offset: 0x9E3E7C VA: 0x9E3E7C
	|-Array.InternalEnumerator<sbyte>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E40DC Offset: 0x9E40DC VA: 0x9E40DC
	|-Array.InternalEnumerator<float>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E4358 Offset: 0x9E4358 VA: 0x9E4358
	|-Array.InternalEnumerator<SkeletonBone>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E45E4 Offset: 0x9E45E4 VA: 0x9E45E4
	|-Array.InternalEnumerator<SpriteState>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E4870 Offset: 0x9E4870 VA: 0x9E4870
	|-Array.InternalEnumerator<TMP_CharacterInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E4AF4 Offset: 0x9E4AF4 VA: 0x9E4AF4
	|-Array.InternalEnumerator<TMP_FontWeightPair>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E4D78 Offset: 0x9E4D78 VA: 0x9E4D78
	|-Array.InternalEnumerator<TMP_LineInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E500C Offset: 0x9E500C VA: 0x9E500C
	|-Array.InternalEnumerator<TMP_LinkInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E52A4 Offset: 0x9E52A4 VA: 0x9E52A4
	|-Array.InternalEnumerator<TMP_MeshInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E5538 Offset: 0x9E5538 VA: 0x9E5538
	|-Array.InternalEnumerator<TMP_PageInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E57C4 Offset: 0x9E57C4 VA: 0x9E57C4
	|-Array.InternalEnumerator<TMP_WordInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E5A44 Offset: 0x9E5A44 VA: 0x9E5A44
	|-Array.InternalEnumerator<TimeSpan>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E5CC8 Offset: 0x9E5CC8 VA: 0x9E5CC8
	|-Array.InternalEnumerator<Touch>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E5F54 Offset: 0x9E5F54 VA: 0x9E5F54
	|-Array.InternalEnumerator<UICharInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E61D8 Offset: 0x9E61D8 VA: 0x9E61D8
	|-Array.InternalEnumerator<UILineInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E6464 Offset: 0x9E6464 VA: 0x9E6464
	|-Array.InternalEnumerator<UIVertex>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E66D8 Offset: 0x9E66D8 VA: 0x9E66D8
	|-Array.InternalEnumerator<ushort>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E6938 Offset: 0x9E6938 VA: 0x9E6938
	|-Array.InternalEnumerator<UInt16Enum>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E6B98 Offset: 0x9E6B98 VA: 0x9E6B98
	|-Array.InternalEnumerator<uint>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E6DF8 Offset: 0x9E6DF8 VA: 0x9E6DF8
	|-Array.InternalEnumerator<UInt32Enum>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E7058 Offset: 0x9E7058 VA: 0x9E7058
	|-Array.InternalEnumerator<ulong>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E72B8 Offset: 0x9E72B8 VA: 0x9E72B8
	|-Array.InternalEnumerator<Unit>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E7528 Offset: 0x9E7528 VA: 0x9E7528
	|-Array.InternalEnumerator<Vector2>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E77A8 Offset: 0x9E77A8 VA: 0x9E77A8
	|-Array.InternalEnumerator<Vector3>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E7A2C Offset: 0x9E7A2C VA: 0x9E7A2C
	|-Array.InternalEnumerator<Vector4>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E7CB8 Offset: 0x9E7CB8 VA: 0x9E7CB8
	|-Array.InternalEnumerator<WordWrapState>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E7F3C Offset: 0x9E7F3C VA: 0x9E7F3C
	|-Array.InternalEnumerator<X509ChainStatus>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E81B4 Offset: 0x9E81B4 VA: 0x9E81B4
	|-Array.InternalEnumerator<jvalue>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E8438 Offset: 0x9E8438 VA: 0x9E8438
	|-Array.InternalEnumerator<AnimationOutputWeightProcessor.WeightInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E86C0 Offset: 0x9E86C0 VA: 0x9E86C0
	|-Array.InternalEnumerator<BeforeRenderHelper.OrderBlock>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E8940 Offset: 0x9E8940 VA: 0x9E8940
	|-Array.InternalEnumerator<Camera.RenderRequest>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E8BCC Offset: 0x9E8BCC VA: 0x9E8BCC
	|-Array.InternalEnumerator<CodePointIndexer.TableRange>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E8E54 Offset: 0x9E8E54 VA: 0x9E8E54
	|-Array.InternalEnumerator<CookieTokenizer.RecognizedAttribute>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E90D4 Offset: 0x9E90D4 VA: 0x9E90D4
	|-Array.InternalEnumerator<Hashtable.bucket>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E9354 Offset: 0x9E9354 VA: 0x9E9354
	|-Array.InternalEnumerator<JoypadTouchHandler.TouchState>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E95CC Offset: 0x9E95CC VA: 0x9E95CC
	|-Array.InternalEnumerator<ParameterizedStrings.FormatParam>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E984C Offset: 0x9E984C VA: 0x9E984C
	|-Array.InternalEnumerator<RegexCharClass.LowerCaseMapping>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E9ACC Offset: 0x9E9ACC VA: 0x9E9ACC
	|-Array.InternalEnumerator<SendMouseEvents.HitInfo>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E9D44 Offset: 0x9E9D44 VA: 0x9E9D44
	|-Array.InternalEnumerator<Socket.WSABUF>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9E9FC4 Offset: 0x9E9FC4 VA: 0x9E9FC4
	|-Array.InternalEnumerator<TMP_Text.UnicodeChar>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9EA258 Offset: 0x9EA258 VA: 0x9EA258
	|-Array.InternalEnumerator<TexturePacker_JsonArray.Frame>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9EA4EC Offset: 0x9EA4EC VA: 0x9EA4EC
	|-Array.InternalEnumerator<TimeNotificationBehaviour.NotificationEntry>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9EA76C Offset: 0x9EA76C VA: 0x9EA76C
	|-Array.InternalEnumerator<TouchHandler.TouchState>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9EA9E4 Offset: 0x9EA9E4 VA: 0x9EA9E4
	|-Array.InternalEnumerator<UIGesture.TouchData>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9EAC60 Offset: 0x9EAC60 VA: 0x9EAC60
	|-Array.InternalEnumerator<UmAlQuraCalendar.DateMapping>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9EAEE8 Offset: 0x9EAEE8 VA: 0x9EAEE8
	|-Array.InternalEnumerator<UnitySynchronizationContext.WorkRequest>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9EB168 Offset: 0x9EB168 VA: 0x9EB168
	|-Array.InternalEnumerator<AssetBundleBuildMap.AssetBundleEntry.AssetPathString>.System.Collections.IEnumerator.Reset
	|
	|-RVA: 0x9EB3E0 Offset: 0x9EB3E0 VA: 0x9EB3E0
	|-Array.InternalEnumerator<TerrainUtility.TerrainMap.TileCoord>.System.Collections.IEnumerator.Reset
	*/

	// RVA: -1 Offset: -1 Slot: 7
	private object System.Collections.IEnumerator.get_Current() { }
	/* GenericInstMethod :
	|
	|-RVA: 0x9833A4 Offset: 0x9833A4 VA: 0x9833A4
	|-Array.InternalEnumerator<ArraySegment<byte>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x983628 Offset: 0x983628 VA: 0x983628
	|-Array.InternalEnumerator<DictionaryEntry<object, int, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9838AC Offset: 0x9838AC VA: 0x9838AC
	|-Array.InternalEnumerator<DictionaryEntry<object, object, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x983B38 Offset: 0x983B38 VA: 0x983B38
	|-Array.InternalEnumerator<IntervalTree.Entry<object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x983DD0 Offset: 0x983DD0 VA: 0x983DD0
	|-Array.InternalEnumerator<Dictionary.Entry<Guid, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x984060 Offset: 0x984060 VA: 0x984060
	|-Array.InternalEnumerator<Dictionary.Entry<short, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9842E4 Offset: 0x9842E4 VA: 0x9842E4
	|-Array.InternalEnumerator<Dictionary.Entry<short, float>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x984568 Offset: 0x984568 VA: 0x984568
	|-Array.InternalEnumerator<Dictionary.Entry<int, bool>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9847EC Offset: 0x9847EC VA: 0x9847EC
	|-Array.InternalEnumerator<Dictionary.Entry<int, char>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x984A70 Offset: 0x984A70 VA: 0x984A70
	|-Array.InternalEnumerator<Dictionary.Entry<int, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x984CF4 Offset: 0x984CF4 VA: 0x984CF4
	|-Array.InternalEnumerator<Dictionary.Entry<int, Int32Enum>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x984F80 Offset: 0x984F80 VA: 0x984F80
	|-Array.InternalEnumerator<Dictionary.Entry<int, long>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98520C Offset: 0x98520C VA: 0x98520C
	|-Array.InternalEnumerator<Dictionary.Entry<int, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x985498 Offset: 0x985498 VA: 0x985498
	|-Array.InternalEnumerator<Dictionary.Entry<int, Vector3>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98572C Offset: 0x98572C VA: 0x98572C
	|-Array.InternalEnumerator<Dictionary.Entry<int, JoypadTouchHandler.TouchState>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9859C0 Offset: 0x9859C0 VA: 0x9859C0
	|-Array.InternalEnumerator<Dictionary.Entry<int, TouchHandler.TouchState>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x985C54 Offset: 0x985C54 VA: 0x985C54
	|-Array.InternalEnumerator<Dictionary.Entry<int, UIGesture.TouchData>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x985EE0 Offset: 0x985EE0 VA: 0x985EE0
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, bool>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x986170 Offset: 0x986170 VA: 0x986170
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, Color>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x986400 Offset: 0x986400 VA: 0x986400
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x986684 Offset: 0x986684 VA: 0x986684
	|-Array.InternalEnumerator<Dictionary.Entry<Int32Enum, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x986910 Offset: 0x986910 VA: 0x986910
	|-Array.InternalEnumerator<Dictionary.Entry<long, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x986B9C Offset: 0x986B9C VA: 0x986B9C
	|-Array.InternalEnumerator<Dictionary.Entry<object, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x986E20 Offset: 0x986E20 VA: 0x986E20
	|-Array.InternalEnumerator<Dictionary.Entry<object, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9870AC Offset: 0x9870AC VA: 0x9870AC
	|-Array.InternalEnumerator<Dictionary.Entry<object, Playable>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x987340 Offset: 0x987340 VA: 0x987340
	|-Array.InternalEnumerator<Dictionary.Entry<object, ResourceLocator>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9875CC Offset: 0x9875CC VA: 0x9875CC
	|-Array.InternalEnumerator<Dictionary.Entry<object, float>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x987850 Offset: 0x987850 VA: 0x987850
	|-Array.InternalEnumerator<Dictionary.Entry<ushort, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x987AD4 Offset: 0x987AD4 VA: 0x987AD4
	|-Array.InternalEnumerator<Dictionary.Entry<uint, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x987D58 Offset: 0x987D58 VA: 0x987D58
	|-Array.InternalEnumerator<Dictionary.Entry<uint, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x987FE4 Offset: 0x987FE4 VA: 0x987FE4
	|-Array.InternalEnumerator<Dictionary.Entry<ulong, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x988278 Offset: 0x988278 VA: 0x988278
	|-Array.InternalEnumerator<Dictionary.Entry<Vector3, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98850C Offset: 0x98850C VA: 0x98850C
	|-Array.InternalEnumerator<Dictionary.Entry<TerrainUtility.TerrainMap.TileCoord, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x988798 Offset: 0x988798 VA: 0x988798
	|-Array.InternalEnumerator<PriorityQueue.IndexedItem<object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x988A1C Offset: 0x988A1C VA: 0x988A1C
	|-Array.InternalEnumerator<KeyValuePair<DateTime, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x988CA8 Offset: 0x988CA8 VA: 0x988CA8
	|-Array.InternalEnumerator<KeyValuePair<Guid, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x988F30 Offset: 0x988F30 VA: 0x988F30
	|-Array.InternalEnumerator<KeyValuePair<short, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9891A8 Offset: 0x9891A8 VA: 0x9891A8
	|-Array.InternalEnumerator<KeyValuePair<short, float>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x989420 Offset: 0x989420 VA: 0x989420
	|-Array.InternalEnumerator<KeyValuePair<int, bool>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x989698 Offset: 0x989698 VA: 0x989698
	|-Array.InternalEnumerator<KeyValuePair<int, char>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x989910 Offset: 0x989910 VA: 0x989910
	|-Array.InternalEnumerator<KeyValuePair<int, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x989B88 Offset: 0x989B88 VA: 0x989B88
	|-Array.InternalEnumerator<KeyValuePair<int, Int32Enum>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x989E04 Offset: 0x989E04 VA: 0x989E04
	|-Array.InternalEnumerator<KeyValuePair<int, long>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98A084 Offset: 0x98A084 VA: 0x98A084
	|-Array.InternalEnumerator<KeyValuePair<int, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98A300 Offset: 0x98A300 VA: 0x98A300
	|-Array.InternalEnumerator<KeyValuePair<int, Vector3>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98A588 Offset: 0x98A588 VA: 0x98A588
	|-Array.InternalEnumerator<KeyValuePair<int, JoypadTouchHandler.TouchState>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98A810 Offset: 0x98A810 VA: 0x98A810
	|-Array.InternalEnumerator<KeyValuePair<int, TouchHandler.TouchState>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98AA98 Offset: 0x98AA98 VA: 0x98AA98
	|-Array.InternalEnumerator<KeyValuePair<int, UIGesture.TouchData>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98AD18 Offset: 0x98AD18 VA: 0x98AD18
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, bool>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98AF9C Offset: 0x98AF9C VA: 0x98AF9C
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, Color>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98B224 Offset: 0x98B224 VA: 0x98B224
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98B49C Offset: 0x98B49C VA: 0x98B49C
	|-Array.InternalEnumerator<KeyValuePair<Int32Enum, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98B718 Offset: 0x98B718 VA: 0x98B718
	|-Array.InternalEnumerator<KeyValuePair<long, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98B998 Offset: 0x98B998 VA: 0x98B998
	|-Array.InternalEnumerator<KeyValuePair<object, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98BC10 Offset: 0x98BC10 VA: 0x98BC10
	|-Array.InternalEnumerator<KeyValuePair<object, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98BE90 Offset: 0x98BE90 VA: 0x98BE90
	|-Array.InternalEnumerator<KeyValuePair<object, Playable>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98C118 Offset: 0x98C118 VA: 0x98C118
	|-Array.InternalEnumerator<KeyValuePair<object, ResourceLocator>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98C398 Offset: 0x98C398 VA: 0x98C398
	|-Array.InternalEnumerator<KeyValuePair<object, float>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98C610 Offset: 0x98C610 VA: 0x98C610
	|-Array.InternalEnumerator<KeyValuePair<ushort, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98C888 Offset: 0x98C888 VA: 0x98C888
	|-Array.InternalEnumerator<KeyValuePair<uint, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98CB00 Offset: 0x98CB00 VA: 0x98CB00
	|-Array.InternalEnumerator<KeyValuePair<uint, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98CD7C Offset: 0x98CD7C VA: 0x98CD7C
	|-Array.InternalEnumerator<KeyValuePair<ulong, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98D000 Offset: 0x98D000 VA: 0x98D000
	|-Array.InternalEnumerator<KeyValuePair<Vector3, int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98D288 Offset: 0x98D288 VA: 0x98D288
	|-Array.InternalEnumerator<KeyValuePair<TerrainUtility.TerrainMap.TileCoord, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98D510 Offset: 0x98D510 VA: 0x98D510
	|-Array.InternalEnumerator<HashSet.Slot<int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98D798 Offset: 0x98D798 VA: 0x98D798
	|-Array.InternalEnumerator<Set.Slot<Int32Enum>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98DA20 Offset: 0x98DA20 VA: 0x98DA20
	|-Array.InternalEnumerator<HashSet.Slot<object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98DCA8 Offset: 0x98DCA8 VA: 0x98DCA8
	|-Array.InternalEnumerator<Set.Slot<object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98DF30 Offset: 0x98DF30 VA: 0x98DF30
	|-Array.InternalEnumerator<HashSet.Slot<uint>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98E1B4 Offset: 0x98E1B4 VA: 0x98E1B4
	|-Array.InternalEnumerator<HashSet.Slot<ulong>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98E440 Offset: 0x98E440 VA: 0x98E440
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Color32>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98E6D4 Offset: 0x98E6D4 VA: 0x98E6D4
	|-Array.InternalEnumerator<TMP_TextProcessingStack<HighlightState>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98E968 Offset: 0x98E968 VA: 0x98E968
	|-Array.InternalEnumerator<TMP_TextProcessingStack<int>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98EBFC Offset: 0x98EBFC VA: 0x98EBFC
	|-Array.InternalEnumerator<TMP_TextProcessingStack<Int32Enum>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98EE98 Offset: 0x98EE98 VA: 0x98EE98
	|-Array.InternalEnumerator<TMP_TextProcessingStack<MaterialReference>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98F134 Offset: 0x98F134 VA: 0x98F134
	|-Array.InternalEnumerator<TMP_TextProcessingStack<object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98F3C8 Offset: 0x98F3C8 VA: 0x98F3C8
	|-Array.InternalEnumerator<TMP_TextProcessingStack<float>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98F65C Offset: 0x98F65C VA: 0x98F65C
	|-Array.InternalEnumerator<TMP_TextProcessingStack<WordWrapState>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98F8E4 Offset: 0x98F8E4 VA: 0x98F8E4
	|-Array.InternalEnumerator<TimeInterval<object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98FB70 Offset: 0x98FB70 VA: 0x98FB70
	|-Array.InternalEnumerator<Timestamped<bool>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x98FE04 Offset: 0x98FE04 VA: 0x98FE04
	|-Array.InternalEnumerator<Timestamped<object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DB0DC Offset: 0x9DB0DC VA: 0x9DB0DC
	|-Array.InternalEnumerator<Tuple<object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DB34C Offset: 0x9DB34C VA: 0x9DB34C
	|-Array.InternalEnumerator<ValueTuple<object, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DB5CC Offset: 0x9DB5CC VA: 0x9DB5CC
	|-Array.InternalEnumerator<ValueTuple<object, object, object>>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DB854 Offset: 0x9DB854 VA: 0x9DB854
	|-Array.InternalEnumerator<BatchVisibility>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DBAC4 Offset: 0x9DBAC4 VA: 0x9DBAC4
	|-Array.InternalEnumerator<bool>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DBD40 Offset: 0x9DBD40 VA: 0x9DBD40
	|-Array.InternalEnumerator<Bounds>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DBFB8 Offset: 0x9DBFB8 VA: 0x9DBFB8
	|-Array.InternalEnumerator<byte>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DC218 Offset: 0x9DC218 VA: 0x9DC218
	|-Array.InternalEnumerator<ByteEnum>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DC478 Offset: 0x9DC478 VA: 0x9DC478
	|-Array.InternalEnumerator<CancellationToken>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DC6F0 Offset: 0x9DC6F0 VA: 0x9DC6F0
	|-Array.InternalEnumerator<CancellationTokenRegistration>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DC960 Offset: 0x9DC960 VA: 0x9DC960
	|-Array.InternalEnumerator<char>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DCBD4 Offset: 0x9DCBD4 VA: 0x9DCBD4
	|-Array.InternalEnumerator<Color>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DCE44 Offset: 0x9DCE44 VA: 0x9DCE44
	|-Array.InternalEnumerator<Color32>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DD0C0 Offset: 0x9DD0C0 VA: 0x9DD0C0
	|-Array.InternalEnumerator<ColorBlock>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DD350 Offset: 0x9DD350 VA: 0x9DD350
	|-Array.InternalEnumerator<ContactPoint>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DD5EC Offset: 0x9DD5EC VA: 0x9DD5EC
	|-Array.InternalEnumerator<ContactPoint2D>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DD884 Offset: 0x9DD884 VA: 0x9DD884
	|-Array.InternalEnumerator<CustomAttributeNamedArgument>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DDB04 Offset: 0x9DDB04 VA: 0x9DDB04
	|-Array.InternalEnumerator<CustomAttributeTypedArgument>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DDD7C Offset: 0x9DDD7C VA: 0x9DDD7C
	|-Array.InternalEnumerator<DateTime>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DDFF8 Offset: 0x9DDFF8 VA: 0x9DDFF8
	|-Array.InternalEnumerator<Decimal>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DE278 Offset: 0x9DE278 VA: 0x9DE278
	|-Array.InternalEnumerator<DictionaryEntry>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DE4E0 Offset: 0x9DE4E0 VA: 0x9DE4E0
	|-Array.InternalEnumerator<double>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DE750 Offset: 0x9DE750 VA: 0x9DE750
	|-Array.InternalEnumerator<Ephemeron>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DE9B8 Offset: 0x9DE9B8 VA: 0x9DE9B8
	|-Array.InternalEnumerator<GCHandle>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DEC34 Offset: 0x9DEC34 VA: 0x9DEC34
	|-Array.InternalEnumerator<GlyphMarshallingStruct>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DEEC8 Offset: 0x9DEEC8 VA: 0x9DEEC8
	|-Array.InternalEnumerator<GlyphPairAdjustmentRecord>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DF154 Offset: 0x9DF154 VA: 0x9DF154
	|-Array.InternalEnumerator<GlyphRect>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DF3D8 Offset: 0x9DF3D8 VA: 0x9DF3D8
	|-Array.InternalEnumerator<Guid>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DF658 Offset: 0x9DF658 VA: 0x9DF658
	|-Array.InternalEnumerator<HeaderVariantInfo>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DF8DC Offset: 0x9DF8DC VA: 0x9DF8DC
	|-Array.InternalEnumerator<HighlightState>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DFB78 Offset: 0x9DFB78 VA: 0x9DFB78
	|-Array.InternalEnumerator<HumanBone>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9DFDF8 Offset: 0x9DFDF8 VA: 0x9DFDF8
	|-Array.InternalEnumerator<short>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E0058 Offset: 0x9E0058 VA: 0x9E0058
	|-Array.InternalEnumerator<int>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E02B8 Offset: 0x9E02B8 VA: 0x9E02B8
	|-Array.InternalEnumerator<Int32Enum>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E0518 Offset: 0x9E0518 VA: 0x9E0518
	|-Array.InternalEnumerator<long>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E0778 Offset: 0x9E0778 VA: 0x9E0778
	|-Array.InternalEnumerator<IntPtr>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E09F0 Offset: 0x9E09F0 VA: 0x9E09F0
	|-Array.InternalEnumerator<InternalCodePageDataItem>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E0C70 Offset: 0x9E0C70 VA: 0x9E0C70
	|-Array.InternalEnumerator<InternalEncodingDataItem>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E0EF4 Offset: 0x9E0EF4 VA: 0x9E0EF4
	|-Array.InternalEnumerator<IntervalTreeNode>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E118C Offset: 0x9E118C VA: 0x9E118C
	|-Array.InternalEnumerator<Keyframe>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E1424 Offset: 0x9E1424 VA: 0x9E1424
	|-Array.InternalEnumerator<LightDataGI>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E16B4 Offset: 0x9E16B4 VA: 0x9E16B4
	|-Array.InternalEnumerator<MaterialReference>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E193C Offset: 0x9E193C VA: 0x9E193C
	|-Array.InternalEnumerator<MessageStringParameterBlock>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E1BC0 Offset: 0x9E1BC0 VA: 0x9E1BC0
	|-Array.InternalEnumerator<Navigation>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E1E38 Offset: 0x9E1E38 VA: 0x9E1E38
	|-Array.InternalEnumerator<object>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E2048 Offset: 0x9E2048 VA: 0x9E2048
	|-Array.InternalEnumerator<ParameterModifier>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E22BC Offset: 0x9E22BC VA: 0x9E22BC
	|-Array.InternalEnumerator<Plane>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E253C Offset: 0x9E253C VA: 0x9E253C
	|-Array.InternalEnumerator<Playable>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E27B8 Offset: 0x9E27B8 VA: 0x9E27B8
	|-Array.InternalEnumerator<PlayableBinding>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E2A44 Offset: 0x9E2A44 VA: 0x9E2A44
	|-Array.InternalEnumerator<PlayerLoopSystem>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E2CD0 Offset: 0x9E2CD0 VA: 0x9E2CD0
	|-Array.InternalEnumerator<Quaternion>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E2F5C Offset: 0x9E2F5C VA: 0x9E2F5C
	|-Array.InternalEnumerator<RaycastHit>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E31F0 Offset: 0x9E31F0 VA: 0x9E31F0
	|-Array.InternalEnumerator<RaycastHit2D>.System.Collections.IEnumerator.get_Current
	|
	|-RVA: 0x9E3484 Offs
